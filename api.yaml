swagger: "2.0"
info:
  title: qviple.com API
  description: This is qviple.com API Documentation
  version: one


host: 3.88.27.4
basePath: /api
# schemes: [http, https]
schemes: 
  - http


#Return Users From get request
paths:

  #This is for the login and logout related 

  /api/v1/auth/login:
    get:
      tags:
        - Login And Logout Api
      summary: Check user or institute is login or not -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: OK
    post:  
      tags:
        - Login And Logout Api
      summary: Login user or institute or super admin -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - insUserName
              - insPassword
            properties:
              insUserName:
                type: string
              insPassword:
                type: string
      responses:
        "200":
          description: OK

  /api/v1/auth/direct/confirm/join/{id}/apply/{aid}:
    post:
      tags:
        - Login And Logout Api
      summary: Add Student Direct By Admission Admin Module + Direct A/c Creation + Status -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: Enter User Phone Number
        - in: path
          name: aid
          required: true
          type: string
          description: Enter Application Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              studentFirstName:
                type: string
                required: true
                description: Enter Student First Name
              studentMiddleName:
                type: string
                required: false
                description: Enter Student Middle Name
              studentLastName:
                type: string
                required: true
                description: Enter Student Last Name
              studentDOB:
                type: string
                required: true
                description: Enter Student Date of Birth (2000-01-01)
              studentGender:
                type: string
                required: true
                description: Enter Student Gender
              type:
                type: string
                required: true
                description: Enter Type of Payment ( for One Time Fees --> "O_T_F") || (for First Installment --> "F_I_P")
              mode:
                type: string
                required: true
                description: Enter Payment Mode ("Online" || "Offline")
              amount:
                type: number
                required: true
                description: Enter Price / Amount 
              sample_pic:
                type: number
                required: true
                description: Enter CDN Avatar File Path
              fileArray:
                type: array
                required: false
                description: Enter Array of Objects 
              fee_struct:
                type: string
                description: Enter Fee Structure Id
                required: true
              batchId:
                type: string
                description: Enter Batch Id
                required: true
              fee_payment_mode:
                type: string
                description: Enter Fee Mode ("By Cash") || ("UPI Transfer") || ("Demand Draft") || ("Cheque") || ("RTGS/NEFT/IMPS") || ("Exempted/Unrecovered") || ("Government/Scholarship")
                required: true
              fee_payment_amount:
                type: number
                description: Enter Amount
                required: true
              transaction_date:
                type: string
                description: Enter Date Like ("2023-02-02")
                required: true
              fee_bank_name:
                type: string
                description: Enter Bank Name e.g SBI
                required: false
              fee_bank_holder:
                type: string
                description: Enter Bank Holder Name e.g Mithkal
                required: false
              fee_utr_reference:
                type: string
                description: Enter Fee Unique Transaction Reference Number (UTR)
                required: false
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/all/completed/app/query:
    get:
      tags:
        - Login And Logout Api
      summary: All Completed Application -(verified)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: Enter Admission Id
        - in: query
          name: search
          required: false
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK  

  /api/v1/auth/select/account:
    get:
      tags:
        - Login And Logout Api
      summary: All A / C Lists -(verified)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: query
          name: phoneKey
          required: true
          type: string
          description: Enter a valid Phone Number üëç
      responses:
        "200":
          description: OK

  /api/v1/auth/login:
    post:
      tags:
        - Login And Logout Api
      summary: Login user or institute or super admin -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - insUserName
              - insPassword
            properties:
              insUserName:
                type: string
              insPassword:
                type: string
      responses:
        "200":
          description: OK

  /api/v1/auth/login/google:
    post:
      tags:
        - Login And Logout Api
      summary: Login user with GOOGLE -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - email
              - googleAuthToken
            properties:
              email:
                type: string
              googleAuthToken:
                type: string
      responses:
        "200":
          description: OK

  
  /api/v1/auth/username/search:
    get:
      tags:
        - Login And Logout Api
      summary: Search Existing Username -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: u_name
          required: true
          type: string
          description: Enter the search username
      responses:
        "200":
          description: OK

  /api/v1/auth/username:
    patch:
      tags:
        - Login And Logout Api
      summary: Edit Username (Based on 45 Days) -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: o_name
          required: true
          type: string
          description: Enter the existing username
        - in: query
          name: n_name
          required: true
          type: string
          description: Enter the new username
      responses:
        "200":
          description: OK

  /api/v1/auth/logout:
    get:
      tags:
        - Login And Logout Api
      summary: Logout your account -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: OK

  /api/v1/auth/classcode/search:
    get:
      tags:
        - Login And Logout Api
      summary: Search Existing Institute By Class code -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: search
          required: true
          type: string
          description: Enter the class code
        - in: query
          name: author
          required: true
          type: string
          description: Enter the Author Type ("Staff" || "Student")
      responses:
        "200":
          description: OK

  /api/v1/auth/direct/join/student/{id}:
    post:
      tags:
        - Login And Logout Api
      summary: Direct Student joining + creation with user A/c -(verified )
      produces:
        - application/json
      consumes:
        - multipart/form-data
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is user phone number
        - in: formData
          name: file
          type: file
          required: true
          description: upload your student profile photo
        - in: formData
          name: studentCode
          type: string
          required: true
          description: This is student code to join class which provided by the class Teacher
        - in: formData
          name: studentFirstName
          type: string
          required: true
          description: student first name
        - in: formData
          name: studentMiddleName
          type: string
          required: true
          description: student middle name
        - in: formData
          name: studentLastName
          type: string
          required: true
          description: student last name
        - in: formData
          name: studentDOB
          type: string
          required: true
          description: student studentDOB
        - in: formData
          name: studentGender
          type: string
          required: true
          description: student studentGender
        - in: formData
          name: studentMotherName
          type: string
          required: true
          description: student studentMotherName
        - in: formData
          name: studentCastCategory
          type: string
          required: true
          description: student studentCastCategory
        - in: formData
          name: studentReligion
          type: string
          required: true
          description: student studentReligion
        - in: formData
          name: sample_pic
          type: string
          required: false
          description: This is for default Avatar
      responses:
        "200":
          description: OK

  /api/v1/auth/direct/join/staff/{id}:
    post:
      tags:
        - Login And Logout Api
      summary: Direct Staff joining + creation with user A/c -(verified )
      produces:
        - application/json
      consumes:
        - multipart/form-data
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is user phone number
        - in: formData
          name: file
          type: file
          required: true
          description: upload your staff profile photo
        - in: formData
          name: staffCode
          type: string
          required: true
          description: This is staff code to join class which provided by the class Teacher
        - in: formData
          name: staffFirstName
          type: string
          required: true
          description: staff first name
        - in: formData
          name: staffMiddleName
          type: string
          required: true
          description: staff middle name
        - in: formData
          name: staffLastName
          type: string
          required: true
          description: staff last name
        - in: formData
          name: staffDOB
          type: string
          required: true
          description: staff staffDOB
        - in: formData
          name: staffGender
          type: string
          required: true
          description: staff staffGender
        - in: formData
          name: staffMotherName
          type: string
          required: true
          description: staff staffMotherName
        - in: formData
          name: staffCastCategory
          type: string
          required: true
          description: staff staffCastCategory
        - in: formData
          name: staffReligion
          type: string
          required: true
          description: staff staffReligion
        - in: formData
          name: sample_pic
          type: string
          required: false
          description: This is for default Avatar
      responses:
        "200":
          description: OK


  /api/v1/auth/direct/join/admission/{id}/apply/{aid}:
    post:
      tags:
        - Login And Logout Api
      summary: Direct Student Admission + creation with user A/c -(verified )
      produces:
        - application/json
      consumes:
        - multipart/form-data
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is user phone number
        - in: path
          name: aid
          required: true
          type: string
          description: This is New Application Id
        - in: formData
          name: file
          type: file
          required: true
          description: upload your student profile photo
        - in: formData
          name: studentFirstName
          type: string
          required: true
          description: student first name
        - in: formData
          name: studentMiddleName
          type: string
          required: true
          description: student middle name
        - in: formData
          name: studentLastName
          type: string
          required: true
          description: student last name
        - in: formData
          name: studentDOB
          type: string
          required: true
          description: student studentDOB
        - in: formData
          name: studentGender
          type: string
          required: true
          description: student studentGender
        - in: formData
          name: studentMotherName
          type: string
          required: true
          description: student studentMotherName
        - in: formData
          name: studentCastCategory
          type: string
          required: true
          description: student studentCastCategory
        - in: formData
          name: studentReligion
          type: string
          required: true
          description: student studentReligion
        - in: formData
          name: sample_pic
          type: string
          required: false
          description: This is for default Avatar
      responses:
        "200":
          description: OK

  /api/v1/auth/direct/institute/join/student/{id}/class/{cid}:
    post:
      tags:
        - Login And Logout Api
      summary: In Institute Admin Side Direct Student joining in class + creation with user A/c -(verified )
      produces:
        - application/json
      consumes:
        - multipart/form-data
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is user phone number
        - in: path
          name: cid
          required: true
          type: string
          description: This Class Id
        - in: formData
          name: file
          type: file
          required: true
          description: upload your student profile photo
        - in: formData
          name: studentFirstName
          type: string
          required: true
          description: student first name
        - in: formData
          name: studentMiddleName
          type: string
          required: true
          description: student middle name
        - in: formData
          name: studentLastName
          type: string
          required: true
          description: student last name
        - in: formData
          name: studentDOB
          type: string
          required: true
          description: student studentDOB
        - in: formData
          name: studentGender
          type: string
          required: true
          description: student studentGender
        - in: formData
          name: studentMotherName
          type: string
          required: true
          description: student studentMotherName
        - in: formData
          name: studentCastCategory
          type: string
          required: true
          description: student studentCastCategory
        - in: formData
          name: studentReligion
          type: string
          required: true
          description: student studentReligion
        - in: formData
          name: sample_pic
          type: string
          required: false
          description: This is for default Avatar
        - in: formData
          name: is_remain
          type: string
          required: false
          description: Enter Remain Value if remain amount > 0  ("Yes" || "No")
        - in: formData
          name: fee_struct
          type: string
          required: false
          description: Enter Fee Structure Id if remain amount is "No"
        - in: formData
          name: student_prn_enroll_number
          type: string
          required: false
          description: Enter Student PRN/ENROLL Number
        - in: formData
          name: batch_set
          type: array
          required: false
          description: Enter Array of Objects
      responses:
        "200":
          description: OK
  
  /api/v1/auth/direct/join/staff/{id}/institute/{insId}:
    post:
      tags:
        - Login And Logout Api
      summary: In Institute Side Add Direct Staff joining + creation with user A/c -(verified )
      produces:
        - application/json
      consumes:
        - multipart/form-data
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is user phone number
        - in: path
          name: insId
          required: true
          type: string
          description: This is Institute Id
        - in: formData
          name: file
          type: file
          required: true
          description: upload your staff profile photo
        - in: formData
          name: staffFirstName
          type: string
          required: true
          description: staff first name
        - in: formData
          name: staffMiddleName
          type: string
          required: true
          description: staff middle name
        - in: formData
          name: staffLastName
          type: string
          required: true
          description: staff last name
        - in: formData
          name: staffDOB
          type: string
          required: true
          description: staff staffDOB
        - in: formData
          name: staffGender
          type: string
          required: true
          description: staff staffGender
        - in: formData
          name: staffMotherName
          type: string
          required: true
          description: staff staffMotherName
        - in: formData
          name: staffCastCategory
          type: string
          required: true
          description: staff staffCastCategory
        - in: formData
          name: staffReligion
          type: string
          required: true
          description: staff staffReligion
        - in: formData
          name: sample_pic
          type: string
          required: false
          description: This is for default Avatar
      responses:
        "200":
          description: OK

    #This is for all account forget process 

  /api/v1/auth/user/forgot:
    post:
      tags:
        - Forgot Password Related Authentication
      summary: Forget Password with username -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - username
            properties:
              username:
                type: string
                description: Enter Password
      responses:
        "200":
          description: OK

  /api/v1/auth/user/forgot/{fid}:
    post:
      tags:
        - Forgot Password Related Authentication
      summary: Forget Password verification -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: Enter the id of user or institute
        - in: body
          name: body
          schema:
            type: object
            required:
              - userOtpCode
            properties:
              userOtpCode:
                type: string
                description: Enter OTP, which send you mobile number
      responses:
        "200":
          description: OK

  /api/v1/auth/user/reset/password/{rid}:
    post:
      tags:
        - Forgot Password Related Authentication
      summary: Create New Password -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: rid
          required: true
          type: string
          description: Enter the id of user or institute
        - in: body
          name: body
          schema:
            type: object
            required:
              - userPassword
              - userRePassword
            properties:
              userPassword:
                type: string
                description: Enter New Password
              userRePassword:
                type: string
                description: Enter New Confirm Password
      responses:
        "200":
          description: OK

  # User Authentication Module

  /api/v1/auth/user-detail:
    post:
      tags:
        - User Authentication
      summary: User Mobile Authentication -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - userPhoneNumber
              - status
            properties:
              userPhoneNumber:
                type: string
                description: Enter a OTP which send you mobile number
              status:
                type: string
                description: Enter a status Not Verified

      responses:
        "200":
          description: OK

  /api/v1/auth/user-detail-verify/{id}:
    post:
      tags:
        - User Authentication
      summary: User Mobile Authentication Verification -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is user phone number
        - in: body
          name: body
          schema:
            type: object
            required:
              - userOtpCode
            properties:
              userOtpCode:
                type: string
                description: Enter a OTP which send you mobile number

      responses:
        "200":
          description: OK

  /api/v1/auth/profile-creation/{id}:
    post:
      tags:
        - User Authentication
      summary: User registration process -(verified)
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is user phone number
        - in: formData
          name: file
          type: file
          required: true
          description: upload your user profile image
        - in: formData
          name: userLegalName
          type: string
          required: true
          description: Enter a User full Name
        - in: formData
          name: username
          type: string
          required: true
          description: Enter a user username as unique
        - in: formData
          name: userGender
          type: string
          required: true
          description: Enter a gender
        - in: formData
          name: userDateOfBirth
          type: string
          required: true
          description: Enter a Date of Birth
      responses:
        "200":
          description: OK

  /api/v1/auth/create-user-password/{id}:
    post:
      tags:
        - User Authentication
      summary: User create Password -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: Enter the id of user which provide by registration process
        - in: body
          name: body
          schema:
            type: object
            required:
              - userPassword
              - userRePassword
            properties:
              userPassword:
                type: string
                description: Enter Password
              userRePassword:
                type: string
                description: Enter confirm Password
      responses:
        "200":
          description: OK

  
  /api/v1/auth/email/check/redundant:
    get:
      tags:
        - User Authentication
      summary: Check Existing Email -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: email
          required: true
          type: string
          description: Enter Email In Query
      responses:
        "200":
          description: OK

  /api/v1/auth/profile/google:
    post:
      tags:
        - User Authentication
      summary: User Profile Creation By GOOGLE -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - userLegalName
              - username
              - userEmail
              - userGender
              - userDateOfBirth
              - pic_url
            properties:
              userLegalName:
                type: string
                description: Enter Display Name or Legal Name
              username:
                type: string
                description: Enter username exclude @gmail.com
              userEmail:
                type: string
                description: Enter Email of a User
              userGender:
                type: string
                description: Enter Gender of a User
              userDateOfBirth:
                type: string
                description: Enter Date of Birth (2022-02-02)
              pic_url:
                type: string
                description: Enter Google Avatar
      responses:
        "200":
          description: OK


   #This is for the User side API
  /api/v1/user/{id}/dash/query:
    get:
      tags:
        - User Profile API
      summary: User dashboard page Data
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        "200":
          description: OK


  /api/v1/user/post/{id}/all/user/profile/posts:
    get:
      tags:
        - User Profile API
      summary: User All Posts -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is User id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
        - in: query
          name: p_type
          schema:
            type: integer
          description: Categorisation module by (Post, Question, Poll) default - Post
      responses:
        "200":
          description: OK

  /api/v1/user/personal/info/{id}:
    patch:
      tags:
        - User Profile API
      summary: Update User Profile Details (Only details part) -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is user id
        - in: body
          name: body
          schema:
            type: object
            properties:
              userDateOfBirth:
                type: string
              userLegalName:
                type: string
              userGender:
                type: string
              userAddress:
                type: string
              userAbout:
                type: string
              userHobbies:
                type: string
              userEmail:
                type: string
              userEducation:
                type: string
              userAddress:
                type: string
              one_line_about:
                type: string
      responses:
        "200":
          description: OK
  

  /api/v1/user/{id}/profile:
    get:
      tags:
        - User Profile API
      summary: User Profile page Data -(verified)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        "200":
          description: OK

  /api/v1/user/{id}/ins-announcement:
    get:
      tags:
        - User Profile API
      summary: User side Institute Announcement Data
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        "200":
          description: OK

  /api/v1/user/one-announcement/{aid}:
    get:
      tags:
        - User Profile API
      summary: User side Institute One Announcement Data
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: aid # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The Announcement ID
      responses:
        "200":
          description: OK

  /api/v1/user/{id}/setting/personal:
    get:
      tags:
        - User Profile API
      summary: User setting personal info page Data -(verified)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        "200":
          description: OK

  /api/v1/user/{uid}/staff/student/role:
    get:
      tags:
        - User Profile API
      summary: User Switch Staff & Student
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: uid # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        "200":
          description: OK

  /api/v1/user/{id}/switch/account:
    get:
      tags:
        - User Profile API
      summary: User setting switch account page Data
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        "200":
          description: OK

  /api/v1/user/{id}/referals/q-coins:
    get:
      tags:
        - User Profile API
      summary: User setting referals Q-coin page Data
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        "200":
          description: OK


  /api/v1/user/{uid}/followers-array:
    get:
      tags:
        - User Profile API
      summary: User all followers List -(verified)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: uid # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The user ID
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  /api/v1/user/{uid}/following-array:
    get:
      tags:
        - User Profile API
      summary: User all following User List -(verified) 
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: uid # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The user ID
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  /api/v1/user/{uid}/circle-array:
    get:
      tags:
        - User Profile API
      summary: User all circle List -(verified)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: uid # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The user ID
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  /api/v1/user/{id}/all-three-array:
    get:
      tags:
        - User Profile API
      summary: User all 3-Follow List -(verified)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        "200":
          description: OK

  
  /api/v1/user/{id}/deactivate/account:
    post:
      tags:
        - User Profile API
      summary: Deactivate User A/c for atleast 2  -(verified)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is User id
        - in: body
          name: body
          schema:
            type: object
            required:
              - password
              - status
              - ddate
            properties:
              password:
                type: string
                description: Enter your A/c password
              status:
                type: string
                description: Enter Deactivated Text
              ddate:
                type: string
                description: Enter Date after 2 days
      responses:
        "200":
          description: OK

  /api/v1/user/phone/info/{id}:
    post:
      tags:
        - User Profile API
      summary: User Phone No. Update Setting -(verified)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is User id
        - in: body
          name: body
          schema:
            type: object
            required:
              - userPhoneNumber
            properties:
              userPhoneNumber:
                type: string
                description: Enter mobile number

      responses:
        "200":
          description: OK

  /api/v1/user/{id}/recovery-mail:
    post:
      tags:
        - User Profile API
      summary: User Recovery Mail Setting -(verified)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is User id
        - in: body
          name: body
          schema:
            type: object
            required:
              - recoveryMail
            properties:
              recoveryMail:
                type: string
                description: Enter Recovery Mail

      responses:
        "200":
          description: OK

  /api/v1/user/follow/institute/:
    patch:
      tags:
        - User Profile API
      summary: Follow Institute Api -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - InsfollowId
            properties:
              InsfollowId:
                type: string
                description: follow Institute Id
      responses:
        "200":
          description: OK

  /api/v1/user/unfollow/institute/:
    patch:
      tags:
        - User Profile API
      summary: UnFollow Institute Api -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - InsfollowId
            properties:
              InsfollowId:
                type: string
                description: follow Institute Id
      responses:
        "200":
          description: OK

  /api/v1/user/follow/user/:
    patch:
      tags:
        - User Profile API
      summary: Follow User to User Api -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - userFollowId
            properties:
              userFollowId:
                type: string
                description: follow User Id
      responses:
        "200":
          description: OK

  /api/v1/user/unfollow/user/:
    patch:
      tags:
        - User Profile API
      summary: UnFollow User to User Api -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - userFollowId
            properties:
              userFollowId:
                type: string
                description: follow User Id
      responses:
        "200":
          description: OK

  /api/v1/user/circle/user/:
    patch:
      tags:
        - User Profile API
      summary: Circle User to User Api -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - followId
            properties:
              followId:
                type: string
                description: circle User Id
      responses:
        "200":
          description: OK
  
  /api/v1/user/uncircle/user/:
    patch:
      tags:
        - User Profile API
      summary: UnCircle User to User Api (currently depreceated)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - followId
            properties:
              followId:
                type: string
                description: Uncircle User Id
      responses:
        "200":
          description: OK

  /api/v1/user/unblock/user:
    patch:
      tags:
        - User Profile API
      summary: UnBlock User to User Api -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: blockId # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: Enter Blocked User Id
      responses:
        "200":
          description: OK
  
  /api/v1/user/report/block/user:
    patch:
      tags:
        - User Profile API
      summary: Block User to User Api -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: blockId # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: Enter Blocked User Id
      responses:
        "200":
          description: OK

  /api/v1/user/unblock/institute:
    patch:
      tags:
        - User Profile API
      summary: UnBlock User to Institute Api -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: blockId # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: Enter Blocked Institute Id
      responses:
        "200":
          description: OK
  
  /api/v1/user/report/block/institute:
    patch:
      tags:
        - User Profile API
      summary: Block User to Institute Api -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: blockId # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: Enter Blocked Institute Id
      responses:
        "200":
          description: OK

  /api/v1/user/one-announcement/{aid}:
    get:
      tags:
        - User Profile API
      summary: User side Institute One Announcement Data
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: aid # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The Announcement ID
      responses:
        "200":
          description: OK


  /api/v1/extra/age/{uid}:
    patch:
      tags:
        - Setting Control API
      summary: User age restriction, concentration mode -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: uid
          required: true
          type: string
          description: This is user id
      responses:
        "200":
          description: OK

  
  /api/v1/extra/random/query:
    get:
      tags:
        - Setting Control API
      summary: Random Institute -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: OK


  /api/v1/extra/{uid}/referral:
    get:
      tags:
        - Setting Control API
      summary: User Referral -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: uid
          required: true
          type: string
          description: This is user id
      responses:
        "200":
          description: OK

  
  /api/v1/extra/age/{uid}/get:
    get:
      tags:
        - Setting Control API
      summary: User Age Fetch -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: uid
          required: true
          type: string
          description: This is user id
      responses:
        "200":
          description: OK


  /api/v1/extra/feedback/user:
    post:
      tags:
        - Setting Control API
      summary: Feedback By User -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              feedRating:
                type: number
                description: Enter feedback Rating
              feedTag:
                type: string
                description: Enter type of Feedback
              feedContent:
                type: string
                description: Enter feedback content
              userId:
                type: string
                decription: Enter User Id 
      responses:
        "200":
          description: OK


  /api/v1/extra/bonafide/certificate/{gr}:
    post:
      tags:
        - Setting Control API
      summary: Bonafide certificate -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: gr
          required: true
          type: string
          description: Enter Student GRNO
        - in : body
          name: body
          schema:
            type: object
            properties:
              reason:
                type: string
                description: Enter certificate reason
      responses:
        "200":
          description: OK

  
  /api/v1/extra/leaving/certificate/{gr}:
    post:
      tags:
        - Setting Control API
      summary: Leaving certificate -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: gr
          required: true
          type: string
          description: Enter Student GRNO
        - in : body
          name: body
          schema:
            type: object
            properties:
              reason:
                type: string
                description: Enter certificate reason
              study:
                type: string
                description: Enter study / progress
              previous:
                type: string
                description: Enter Previous school / college
              behaviour:
                type: string
                description: Enter student behaviour
              remark:
                type: string
                description: Enter student Remark
      responses:
        "200":
          description: OK

  /api/v1/extra/{gr}/status/{type}:
    get:
      tags:
        - Setting Control API
      summary: Check Download Status -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: gr
          required: true
          type: string
          description: Enter Student GRNO
        - in: path
          name: type
          required: true
          type: string
          description: Enter Certificate Type ("Bona" || "Leaving")
      responses:
        "200":
          description: OK


  
  /api/v1/extra/{uid}/privacy/feature:
    patch:
      tags:
        - Setting Control API
      summary: User Privacy Control API -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: uid
          required: true
          type: string
          description: Enter User Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              birthStatus:
                type: string
                description: Enter Birth Day Privacy Content
              addressStatus:
                type: string
                description: Enter Address Privacy Content
              circleStatus:
                type: string
                description: Enter Circle Privacy Content
              tagStatus:
                type: string
                description: Enter Tag Privacy Content
      responses:
        "200":
          description: OK

  
  /api/v1/extra/{id}/privacy/institute/feature:
    patch:
      tags:
        - Setting Control API
      summary: Institute Privacy Control API -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: Enter Institute Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              staffStatus:
                type: number
                description: Enter Staff Privacy Content
              emailStatus:
                type: string
                description: Enter Email Privacy Content
              contactStatus:
                type: string
                description: Enter Contact Privacy Content
              tagStatus:
                type: string
                description: Enter Tag Privacy Content
      responses:
        "200":
          description: OK


  /api/v1/ins/{id}/location/permission:
    patch:
      tags:
        - Setting Control API
      summary: Institute Location Permission -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: Enter Institute Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              ins_latitude:
                type: number
                description: Enter Latitude
              ins_longitude:
                type: number
                description: Enter Longitude
              ins_accuracy:
                type: number
                description: Enter Accuracy
              ins_speed:
                type: number
                description: Enter Speed
              ins_heading:
                type: number
                description: Enter Heading
              ins_altitude:
                type: number
                description: Enter Altitude
              ins_time:
                type: string
                description: Enter Time Stamp
              ins_isMock:
                type: boolean
                description: Enter Mocked Content (Boolean)
      responses:
        "200":
          description: OK


  /api/v1/admin/repay/query/institute/{id}:
    get:
      tags:
        - Setting Control API
      summary: Due From Qviple Repay History -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: Enter Institute Id
      responses:
        "200":
          description: OK


  /api/v1/extra/{uid}/update/notification/user:
    patch:
      tags:
        - Setting Control API
      summary: User Notification API -(verified) ----> (On-> Enable, Off-> Disable)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: uid
          required: true
          type: string
          description: Enter User Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              follower_notify:
                type: string
                description: Enter Follower, Circle Notification Content
              comment_notify:
                type: string
                description: Enter Comment Notification Content
              answer_notify:
                type: string
                description: Enter Answer Notification Content
              institute_notify:
                type: string
                description: Enter Institute Related Notification Content
      responses:
        "200":
          description: OK

  /api/v1/extra/{id}/merge/staff/student:
    get:
      tags:
        - Setting Control API
      summary: Shuffle Staff & Student for Display Person -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: query
          name: page
          schema:
            type: integer
          description: Enter Page Index
        - in: query
          name: limit
          schema:
            type: integer
          description: Enter Limit Index
      responses:
        "200":
          description: OK

  /api/v1/user/{uid}/location/permission:
    patch:
      tags:
        - Setting Control API
      summary: User Location Permission -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: uid
          required: true
          type: string
          description: Enter User Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              user_latitude:
                type: number
                description: Enter Latitude
              user_longitude:
                type: number
                description: Enter Longitude
              user_accuracy:
                type: number
                description: Enter Accuracy
              user_speed:
                type: number
                description: Enter Speed
              user_heading:
                type: number
                description: Enter Heading
              user_altitude:
                type: number
                description: Enter Altitude
              user_time:
                type: string
                description: Enter Time Stamp
              user_isMock:
                type: boolean
                description: Enter Mocked Content (Boolean)
      responses:
        "200":
          description: OK

  /api/v1/extra/{pid}/comment/feature:
    patch:
      tags:
        - Setting Control API
      summary: Comment Turned On || Off -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid
          required: true
          type: string
          description: Enter Post Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              comment_turned:
                type: string
                description: Enter ("On" || "Off")
      responses:
        "200":
          description: OK

  
  /api/v1/extra/{pid}/transcript/lang:
    patch:
      tags:
        - Setting Control API
      summary: Language Translation -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid
          required: true
          type: string
          description: Enter Post Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              post_question_transcript:
                type: string
                description: Enter Translated Text
              post_description_transcript:
                type: string
                description: Enter Translated Text
      responses:
        "200":
          description: OK

  /api/v1/extra/{aid}/transcript/lang/answer:
    patch:
      tags:
        - Setting Control API
      summary: Answer Language Translation -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: Enter Answer Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              answer_content_transcript:
                type: string
                description: Enter Translated Text
      responses:
        "200":
          description: OK

  /api/v1/extra/{pid}/transcript/lang/poll:
    patch:
      tags:
        - Setting Control API
      summary: Poll Language Translation -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid
          required: true
          type: string
          description: Enter Poll Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              quest_lang:
                type: string
                description: Enter Translated Question Text
              poll_answer_lang:
                type: array
                description: Array of Translated String ["‡§∏‡•á‡§µ‡§æ ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞", "‡§ö‡•Å‡§∏‡•ç‡§§ ‡§®‡•Ä‡§§‡§ø ‡§¢‡§æ‡§Ç‡§ö‡§æ", "‡§î‡§¶‡•ç‡§Ø‡•ã‡§ó‡§ø‡§ï ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞", "‡§Æ‡•Ç‡§≤‡•ç‡§Ø ‡§î‡§∞ ‡§Æ‡•Å‡§¶]
                items:
                  type: string
                  description: Translated Poll Answer
      responses:
        "200":
          description: OK
  
  /api/v1/extra/{uid}/lang/mode:
    patch:
      tags:
        - Setting Control API
      summary: Language Selection Mode -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: uid
          required: true
          type: string
          description: Enter Id (User || Institute)
        - in: query
          name: mode
          required: true
          type: string
          description: Enter Lang Mode ("en" || "hi" || "mr")
      responses:
        "200":
          description: OK

  
  /api/v1/extra/biometric/staff/ref:
    patch:
      tags:
        - Setting Control API
      summary: Staff Biometric Unique Query -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              staff_ref:
                type: array
                description: Array of Objects like "[{"staffId": "6360aea051d30672ae8cfe80","bioId": "1"},{"staffId": "6360b23851d30672ae8d0103","bioId": "2"}]"   
                items:
                  type: string
                  description: staffId bioId
      responses:
        "200":
          description: OK


  /api/v1/extra/biometric/student/ref:
    patch:
      tags:
        - Setting Control API
      summary: Student Biometric Unique Query -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              student_ref:
                type: array
                description: Array of Objects like "[{"studentId": "6360aea051d30672ae8cfe80","bioId": "1"},{"studentId": "6360b23851d30672ae8d0103","bioId": "2"}]"   
                items:
                  type: string
                  description: studentId bioId
      responses:
        "200":
          description: OK  

  /api/v1/extra/{uid}/active/member/role:
    get:
      tags:
        - Setting Control API
      summary: User Active Role for Dashboard Feed -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: uid
          required: true
          type: string
          description: This is user id
        - in: query
          name: active_member_role
          required: true
          type: string
          description: This is id of active (staff || student)
      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/leaving/editable:
    patch:
      tags:
        - Institute Profile API
      summary: Institute Fields for Leaving certificate -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: Enter Institute Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              insAffiliated:
                type: string
                description: Enter Institute Affiliated
              insEditableText:
                type: string
                description: Enter Editable Text 1
              insEditableTexts:
                type: string
                description: Enter Editable Text 2
      responses:
        "200":
          description: OK

  #User Dashboard API

  /api/v1/user/{uid}/subject/chat:
    get:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: User Subject Teacher Chat -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: uid
          required: true
          type: string
          description: Enter User Id
      responses:
        "200":
          description: OK

  /api/v1/user/{uid}/department/chat:
    get:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: User Department Head Chat -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: uid
          required: true
          type: string
          description: Enter User Id
      responses:
        "200":
          description: OK

  /api/v1/user/{uid}/class/chat:
    get:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: User Class Teacher Chat -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: uid
          required: true
          type: string
          description: Enter User Id
      responses:
        "200":
          description: OK

  /api/v1/user/post/{id}/all/user/posts:
    get:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: User All Posts -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is User id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
        - in: query
          name: p_type
          schema:
            type: integer
          description: Categorisation module by (Post, Question, Poll) default - Post
      responses:
        "200":
          description: OK

  /api/v1/user/post/{id}/all/user/re/posts:
    get:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: User All Re Posts KNOWS -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is User id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  /api/v1/user/post/{id}:
    post:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: User post create only with text -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is User id
        - in : body
          name: body
          schema:
            type: object
            properties:
              postTitle:
                type: string
                description: type a text here for Title
              postDescription:
                type: string
                description: type a text here for Description
              postText:
                type: string
                description: type a text here for text
              postStatus:
                type: string
                decription: status should be "Anyone" or "Private"
              people:
                type: array
                description: This is all taged users ids
                items:
                  type: object
                  description: one user id
                  properties:
                    tagId: 
                      type: string
                      description: this is tagged people id (institute Id)
                    tagUserName:
                      type: string
                      description: this is tagged people username (institute username)
                    tagType:
                      type: string
                      description: type here "Institute"
      responses:
        "200":
          description: OK
 
  /api/v1/user/post/{id}/image:
    post:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: User post create text and image -(verified)
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is User id
        - in: formData
          name: file
          type: file
          required: true
          description: upload your post multiple image
        # - in: formData
        #   name: file
        #   type: file
        #   required: true
        #   description: upload your post multiple image
        - in: formData
          name: postTitle
          type: string
          description: type a text here for Title
        - in: formData
          name: postDescription
          type: string
          description: type a text here for Description
        - in: formData
          name: postText
          type: string
          description: type a text here for text
        - in: formData
          name: postStatus
          type: string
          required: true
          description: status should be "Anyone" or "Private"
        - in: formData
          name: people
          type: array
          items:
            type: string
            description: one user id
          description: This is all taged users ids
      responses:
        "200":
          description: OK

  /api/v1/user/post/{id}/video:
    post:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: User post create text and video -(verified)
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is User id
        - in: formData
          name: file
          type: file
          required: true
          description: upload your post video
        - in: formData
          name: postTitle
          type: string
          description: type a text here for Title
        - in: formData
          name: postDescription
          type: string
          description: type a text here for Description
        - in: formData
          name: postText
          type: string
          description: type a text here for text
        - in: formData
          name: postStatus
          type: string
          required: true
          description: status should be "Anyone" or "Private"
        - in: formData
          name: people
          type: array
          items:
            type: string
            description: one user id
          description: This is all taged users ids
      responses:
        "200":
          description: OK
          
  /api/v1/user/post/update/{pid}:
    patch:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: User post update with their visibility -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid
          required: true
          type: string
          description: This is User id
        - in: body
          name: body
          schema:
            type: object
            required:
              - postStatus
            properties:
              postStatus:
                type: string
                description: status should be "Anyone" or "Private"
      responses:
        "200":
          description: OK

  /api/v1/user/post/{id}/deleted/{pid}:
    delete:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: User post deleted permanently -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is User id
        - in: path
          name: pid
          required: true
          type: string
          description: This is post id
      responses:
        "200":
          description: OK

  /api/v1/user/post/tag:
    get:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: In User post Added tag people list which user want to tag -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        # - in: path
        #   name: uid
        #   required: true
        #   type: string
        #   description: This is user id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
        - in: query
          name: search
          schema:
            type: string
          description: type here name or username         
      responses:
        "200":
          description: OK

  /api/v1/user/post/reaction/{pid}:
    get:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: This is list of people who like that particular post that is reaction -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid
          required: true
          type: string
          description: This is post id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  /api/v1/user/post/like/{pid}:
    get:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: User post like and unlike -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid
          required: true
          type: string
          description: This is post id
      responses:
        "200":
          description: OK

  /api/v1/user/post/save/{pid}:
    get:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: User post save and unsave -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid
          required: true
          type: string
          description: This is post id
      responses:
        "200":
          description: OK

  /api/v1/user/post/comment/{id}:
    get:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: Get User one post all comment -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is post id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK
    post:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: Post User one post comment -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is post id
        - in: body
          name: body
          schema:
            type: object
            required:
              - commentDescription
            properties:
              commentDescription:
                type: string
                description: Type here comments
      responses:
        "200":
          description: OK

  /api/v1/user/post/comment/child/{pcid}:
    get:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: In post one comment, child or reply comment limit to get all reply comment -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pcid
          required: true
          type: string
          description: This is comment id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK
    post:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: In post one comment, child or reply comment -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pcid
          required: true
          type: string
          description: This is Comment id
        - in: body
          name: body
          schema:
            type: object
            required:
              - comment
              - uid
            properties:
              comment:
                type: string
                description: Type here reply comments
              uid:
                type: string
                description: This is user id which reply to comment              
      responses:
        "200":
          description: OK

  /api/v1/user/post/{id}/comment/child/like/{cid}/:
    get:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: In post one comment like and dislike -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is user id
        - in: path
          name: cid
          required: true
          type: string
          description: This is comment id
      responses:
        "200":
          description: OK

  /api/v1/all/staff/list/data:
    get:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: Get All Mentors List -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  /api/v1/all/user/list/data:
    get:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: Get All Users List -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  /api/v1/all/institute/list/data:
    get:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: Get All Institute List -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  /api/v1/user/dashboard/{id}/notify:
    get:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: Get All Notifications Of Users -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is user id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK
      
  
  /api/v1/user/{id}/user-post/{uid}/report:
    post:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: Report User's Post By User -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is User id
        - in: path
          name: uid
          required: true
          type: string
          description: This is Post id
        - in: body
          name: body
          schema:
            type: object
            required:
              - reportStatus
            properties:
              reportStatus:
                type: string
                description: Enter Report Content
      responses:
        "200":
          description: OK

  
  /api/v1/user/{id}/all/star-announcement:
    get:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: All Star Announcement User -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is user id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK


  /api/v1/user/post/{id}/all/user/saved/posts:
    get:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: User All Saved Posts -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is User id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK


  
  /api/v1/user/post/{id}/all/user/tag/posts:
    get:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: User All Tag Posts -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is User id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK


  #This is for universal search of user

  /api/v1/search/user/{id}/allsearch:
    get:
      tags:
        - user-universal-search
      summary: user-universal-search
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The user ID
        - in: query
          name: search
          schema:
            type: string
          description: What you want to search
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK


   #This is staff and student joining Related Api

  /api/v1/ins/{id}/staff-code:
    get:
      tags:
        - Staff-Student-Joining-All-API
      summary: Get Staff Code for joining by Institute -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: This is institute id
      responses:
        "200":
          description: OK

  /api/v1/ins/{sid}/staff-status:
    get:
      tags:
        - Staff-Student-Joining-All-API
      summary: Get Staff Status for Application Status -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          schema:
            type: string
          description: This is Staff id
      responses:
        "200":
          description: OK

  /api/v1/ins/{uid}/staffform/{id}:
    post:
      tags:
        - Staff-Student-Joining-All-API
      summary: Staff joining form apply to Institute -(verified)
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: path
          name: uid
          required: true
          type: string
          description: This is user id which apply to institute as staff
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id which search by user to apply for as staff
        - in: formData
          name: file
          type: file
          required: true
          description: upload your staff profile photo
        - in: formData
          name: staffCode
          type: string
          required: true
          description: This is staff code to join institute which provided by the institute
        - in: formData
          name: staffFirstName
          type: string
          required: true
          description: staff first name
        - in: formData
          name: StaffMiddleName
          type: string
          required: true
          description: staff middle name
        - in: formData
          name: staffLastName
          type: string
          required: true
          description: staff last name
        - in: formData
          name: staffDOB
          type: string
          required: true
          description: staff staffDOB
        - in: formData
          name: staffGender
          type: string
          required: true
          description: staff staffGender
        - in: formData
          name: staffNationality
          type: string
          required: true
          description: staff staffNationality
        - in: formData
          name: staffMTongue
          type: string
          required: true
          description: staff staffMTongue
        - in: formData
          name: staffMotherName
          type: string
          required: true
          description: staff staffMotherName
        - in: formData
          name: staffCast
          type: string
          required: true
          description: staff staffCast
        - in: formData
          name: staffCastCategory
          type: string
          required: true
          description: staff staffCastCategory
        - in: formData
          name: staffReligion
          type: string
          required: true
          description: staff staffReligion
        - in: formData
          name: staffBirthPlace
          type: string
          required: true
          description: staff staffBirthPlace
        - in: formData
          name: staffDistrict
          type: string
          required: true
          description: staff staffDistrict
        - in: formData
          name: staffState
          type: string
          required: true
          description: staff staffState
        - in: formData
          name: staffAddress
          type: string
          required: true
          description: staff staffAddress
        - in: formData
          name: staffPhoneNumber
          type: string
          required: true
          description: staff staffPhoneNumber
        - in: formData
          name: staffAadharNumber
          type: string
          required: true
          description: staff staffAadharNumber
        - in: formData
          name: staffQualification
          type: string
          required: true
          description: staff staffQualification
        - in: formData
          name: file
          type: file
          required: true
          description: upload your addhar card front side photo  
        - in: formData
          name: file
          type: file
          required: true
          description: upload your addhar card back side photo           
      responses:
        "200":
          description: OK 

  
  /api/v1/ins/{id}/student-code:
    get:
      tags:
        - Staff-Student-Joining-All-API
      summary: Get Student Code for joining by Institute -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
      responses:
        "200":
          description: OK

  /api/v1/ins/{sid}/student-status:
    get:
      tags:
        - Staff-Student-Joining-All-API
      summary: Get Student Status for Application Status -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id
      responses:
        "200":
          description: OK

  /api/v1/ins/{uid}/studentform/{id}:
    post:
      tags:
        - Staff-Student-Joining-All-API
      summary: Student joining form apply to Institute -(verified )
      produces:
        - application/json
      consumes:
        - multipart/form-data
      parameters:
        - in: path
          name: uid
          required: true
          type: string
          description: This is user id which apply to institute as student
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id which search by user to apply for as student
        - in: formData
          name: file
          type: file
          required: true
          description: upload your student profile photo
        - in: formData
          name: studentCode
          type: string
          required: true
          description: This is student code to join class which provided by the class Teacher
        - in: formData
          name: studentFirstName
          type: string
          required: true
          description: student first name
        - in: formData
          name: studentMiddleName
          type: string
          required: true
          description: student middle name
        - in: formData
          name: studentLastName
          type: string
          required: true
          description: student last name
        - in: formData
          name: studentDOB
          type: string
          required: true
          description: student studentDOB
        - in: formData
          name: studentGender
          type: string
          required: true
          description: student studentGender
        - in: formData
          name: studentNationality
          type: string
          required: true
          description: student studentNationality
        - in: formData
          name: studentMTongue
          type: string
          required: true
          description: student studentMTongue
        - in: formData
          name: studentMothersName
          type: string
          required: true
          description: student studentMotherName
        - in: formData
          name: studentCast
          type: string
          required: true
          description: student studentCast
        - in: formData
          name: studentCastCategory
          type: string
          required: true
          description: student studentCastCategory
        - in: formData
          name: studentReligion
          type: string
          required: true
          description: student studentReligion
        - in: formData
          name: studentBirthPlace
          type: string
          required: true
          description: student studentBirthPlace
        - in: formData
          name: studentDistrict
          type: string
          required: true
          description: student studentDistrict
        - in: formData
          name: studentState
          type: string
          required: true
          description: student studentState
        - in: formData
          name: studentAddress
          type: string
          required: true
          description: student studentAddress
        - in: formData
          name: studentPhoneNumber
          type: string
          required: true
          description: student studentPhoneNumber
        - in: formData
          name: studentAadharNumber
          type: string
          required: true
          description: student studentAadharNumber
        - in: formData
          name: studentParentsName
          type: string
          required: true
          description: student studentParentsName
        - in: formData
          name: studentParentsPhoneNumber
          type: string
          required: true
          description: student studentParentsPhoneNumber
        - in: formData
          name: file
          type: file
          required: true
          description: upload your addhar card front side photo  
        - in: formData
          name: file
          type: file
          required: true
          description: upload your addhar card back side photo     
      responses:
        "200":
          description: OK


  #Staff Member's Tab

  /api/v1/user/{uid}/staff-role:
    get:
      tags:
        - Staff-Member-Tab
      summary: User All Applied Staff Role -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: uid
          required: true
          type: string
          description: This is User id
      responses:
        "200":
          description: OK

  /api/v1/user/staffdesignationdata/{sid}:
    get:
      tags:
        - Staff-Member-Tab
      summary: Staff All Designation Data -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is staff id
      responses:
        "200":
          description: OK

  /api/v1/avail/attendence/status/staff/{sid}:
    get:
      tags:
        - Staff-Member-Tab
      summary: Show Staff Attendence At Calendar (dateStatus - to be date)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is staff ID
        - in: body
          name: body
          schema:
            type: object
            required:
              - dateStatus
            properties:
              dateStatus:
                type: string
                description: Enter Date for finding present or absent         
      responses:
        "200":
          description: OK

  /api/v1/attendance/staff/onemonth/{sid}:
    get:
      tags:
        - Staff-Member-Tab
      summary: Staff Attendence Absent Count -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is staff id
        - in: query
          name: month
          schema:
            type: integer
          description: Enter Month
        - in: query
          name: year
          schema:
            type: integer
          description: Enter Year
      responses:
        "200":
          description: OK

  /api/v1/user/staff/{sid}/sal/history:
    get:
      tags:
        - Staff-Member-Tab
      summary: Get All Salary History of Staff - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is Staff id
      responses:
        "200":
          description: OK

  # Student Member's Tab

  /api/v1/user/{uid}/student-role:
    get:
      tags:
        - Student-Member-Tab
      summary: User All Applied Student Role -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: uid
          required: true
          type: string
          description: This is User id
      responses:
        "200":
          description: OK

  /api/v1/user/studentdesignationdata/{sid}:
    get:
      tags:
        - Student-Member-Tab
      summary: Student All Member Data -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is student id
      responses:
        "200":
          description: OK

  /api/v1/avail/attendence/status/student/{sid}:
    get:
      tags:
        - Student-Member-Tab
      summary: Show Student Attendence At Calendar (dateStatus - to be date)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is student ID
        - in: body
          name: body
          schema:
            type: object
            required:
              - dateStatus
            properties:
              dateStatus:
                type: string
                description: Enter Date for finding present or absent       
      responses:
        "200":
          description: OK

  /api/v1/fees/student/{sid}/count:
    get:
      tags:
        - Student-Member-Tab
      summary: Get Total Fee & Remaining Fee -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id
      responses:
        "200":
          description: OK

  /api/v1/fees/student/{sid}/internal/fees/query:
    get:
      tags:
        - Student-Member-Tab
      summary: Get All Internal Fees -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id
        - in: query
          name: page
          required: true
          type: string
          description: This is Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: This is Limit
      responses:
        "200":
          description: OK

  /api/v1/fees/student/{sid}/backlog/fees/query:
    get:
      tags:
        - Student-Member-Tab
      summary: Get All Backlog Fees -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id
        - in: query
          name: page
          required: true
          type: string
          description: This is Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: This is Limit
      responses:
        "200":
          description: OK

  /api/v1/fees/student/one/receipt/{orid}/query:
    get:
      tags:
        - Student-Member-Tab
      summary: Get All Backlog Fees -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: orid
          required: true
          type: string
          description: This is Fee Receipt id
      responses:
        "200":
          description: OK

  /api/v1/fees/student/{sid}:
    get:
      tags:
        - Student-Member-Tab
      summary: Student Fee and Checklist Array for Payment -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id
      responses:
        "200":
          description: OK


  /api/v1/ins/staffdepartment/{did}:
    get:
      tags:
        - Staff-Department-Head
      summary: One Department profile Data -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is department id
      responses:
        "200":
          description: OK


  /api/v1/ins/staff/department-info/{did}:
    post:
      tags:
        - Staff-Department-Head
      summary: One Department info/about update by staff side -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is department id
        - in: body
          name: body
          schema:
            type: object
            required:
              - dAbout
              - dEmail
              - dPhoneNumber
            properties:
              dAbout:
                type: string
                description: Enter Department About
              dEmail:
                type: string
                description: Enter Department Email
              dPhoneNumber:
                type: string
                description: Enter Department Phone Number (Number are allowed -10digit)
      responses:
        "200":
          description: OK

  
  /api/v1/ins/{did}/department/display-person:
    post:
      tags:
        - Staff-Department-Head
      summary: Add Display Person -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is Department id
        - in: body
          name: body
          schema:
            type: object
            required:
              - displayTitle
              - displayUser
            properties:
              displayTitle:
                type: string
                description: Enter Display Title
              displayUser:
                type: string
                description: Enter Staff or Student User Id
      responses:
        "200":
          description: OK

  /api/v1/ins/department/{did}/staff-array:
    get:
      tags:
        - Staff-Department-Head
      summary: In one department All Staff List -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is department id
      responses:
        "200":
          description: OK

  /api/v1/ins/batch-detail/{bid}:
    get:
      tags:
        - Staff-Department-Head
      summary: In one batch All classes List by staff side -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: bid
          required: true
          type: string
          description: This is batch id
      responses:
        "200":
          description: OK

  /api/v1/avail/batch-detail/{bid}/attend:
    get:
      tags:
        - Staff-Department-Head
      summary: Get Staff Data of a Batch
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: bid
          required: true
          type: string
          description: This is Batch ID
      responses:
        "200":
          description: OK
        
  /api/v1/avail/batch-detail/{bid}/attend-id:
    get:
      tags:
        - Staff-Department-Head
      summary: Get Staff Id of a batch
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: bid
          required: true
          type: string
          description: This is Batch ID
      responses:
        "200":
          description: OK

  /api/v1/avail/department/{did}/staff/attendence:
    get:
      tags:
        - Staff-Department-Head
      summary: Department mark staff attendence (date - to be date)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is Department ID
        - in: body
          name: body
          schema:
            type: object
            required:
              - date
            properties:
              date:
                type: string
                description: Enter Date for finding present or absent
      responses:
        "200":
          description: OK


  /api/v1/avail/department/{did}/get/attendence/{date}:
    get:
      tags:
        - Staff-Department-Head
      summary: Attendence in class of Student retrieve by Date
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is Department ID
        - in: path
          name: date
          required: true
          type: string
          description: This is Date to give in url         
      responses:
        "200":
          description: OK


  /api/v1/avail/department/holiday/{did}:
    post:
      tags:
        - Staff-Department-Head
      summary: Mark Holiday by Staff Department Head (dateStatus - to be date)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is Department ID
        - in: body
          name: body
          schema:
            type: object
            required:
              - dateStatus
              - reason
            properties:
              dateStatus:
                type: string
                description: Enter Date for finding present or absent
              reason:
                type: string
                description: Type Holiday rason       
      responses:
        "200":
          description: OK

  /api/v1/avail/holiday/{did}:
    get:
      tags:
        - Staff-Department-Head
      summary: Fetch Holiday
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is Department ID       
      responses:
        "200":
          description: OK

  /api/v1/avail/delHoliday/{hid}:
    get:
      tags:
        - Staff-Department-Head
      summary: Delete Holiday
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: hid
          required: true
          type: string
          description: This is Holiday ID       
      responses:
        "200":
          description: OK

  # Class Teacher

  /api/v1/ins/staffclass/{cid}:
    get:
      tags:
        - Staff-Class-Teacher
      summary: One class related data by staff side -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class id
      responses:
        "200":
          description: OK

  /api/v1/ins/staffclass/{cid}/fee/{fid}/query:
    get:
      tags:
        - Staff-Class-Teacher
      summary: One class one fee -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class id
        - in: path
          name: fid
          required: true
          type: string
          description: This is Fee id
      responses:
        "200":
          description: OK

  /api/v1/ins/staff/class-info/{cid}:
    post:
      tags:
        - Staff-Class-Teacher
      summary: One class info/about update by staff side -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class id
        - in: body
          name: body
          schema:
            type: object
            required:
              - classAbout
            properties:
              classAbout:
                type: string
                description: Enter Class About 
      responses:
        "200":
          description: OK
  
  /api/v1/ins/{cid}/class/display-person:
    post:
      tags:
        - Staff-Class-Teacher
      summary: Add Display Person -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Class id
        - in: body
          name: body
          schema:
            type: object
            required:
              - displayTitle
              - displayUser
            properties:
              displayTitle:
                type: string
                description: Enter Display Title
              displayUser:
                type: string
                description: Enter Staff or Student User Id
      responses:
        "200":
          description: OK

  /api/v1/ins/{cid}/student/request:
    get:
      tags:
        - Staff-Class-Teacher
      summary: Class Pending Request of Student - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Class id
      responses:
        "200":
          description: OK

  /api/v1/ins/{cid}/student/catalog:
    get:
      tags:
        - Staff-Class-Teacher
      summary: Class Approved Student Catalog - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Class id
      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/student/{cid}/approve/{sid}/depart/{did}/batch/{bid}:
    post:
      tags:
        - Staff-Class-Teacher
      summary: Student Approval By Staff As Class Teacher Side (status - Approved) - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
        - in: path
          name: cid
          required: true
          type: string
          description: This is Class id
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id
        - in: path
          name: did
          required: true
          type: string
          description: This is Department id
        - in: path
          name: bid
          required: true
          type: string
          description: This is Batch id
        - in: body
          name: body
          schema:
            type: object
            required:
              - status
            properties:
              status:
                type: string
                description: Enter Status (Approved)
      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/student/{cid}/reject/{sid}:
    post:
      tags:
        - Staff-Class-Teacher
      summary: Student Reject By Staff As a Class Teacher Side (status - Rejected) - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
        - in: path
          name: cid
          required: true
          type: string
          description: This is Class id
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id
        - in: body
          name: body
          schema:
            type: object
            required:
              - status
            properties:
              status:
                type: string
                description: Enter Status (Approved)
      responses:
        "200":
          description: OK


  /api/v1/avail/staffclass/{cid}/attend:
    get:
      tags:
        - Staff-Class-Teacher
      summary: Attendence in class of Student
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class ID
      responses:
        "200":
          description: OK
        
  /api/v1/avail/staffclass/{cid}/attend-id:
    get:
      tags:
        - Staff-Class-Teacher
      summary: Attendence in class of Student by id
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class ID
      responses:
        "200":
          description: OK

  /api/v1/avail/class/{cid}/student/attendence:
    get:
      tags:
        - Staff-Class-Teacher
      summary: class mark student attendence (date - to be date)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class ID
        - in: body
          name: body
          schema:
            type: object
            required:
              - date
            properties:
              date:
                type: string
                description: Enter Date for finding present or absent
      responses:
        "200":
          description: OK

  /api/v1/avail/class/{cid}/get/attendence/{date}:
    get:
      tags:
        - Staff-Class-Teacher
      summary: Attendence in class of Student retrieve by Date
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class ID
        - in: path
          name: date
          required: true
          type: string
          description: This is Date to give in url         
      responses:
        "200":
          description: OK

  

  # Subject Teacher

  /api/v1/ins/subject-detail/{suid}:
    get:
      tags:
        - Staff-Subject-Teacher
      summary: This is subject and class related data that is Subject Teacher catalog -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: suid
          required: true
          type: string
          description: This is subject id
      responses:
        "200":
          description: OK

  #This is for institute registration process 

  /api/v1/auth/ins-detail:
    post:
      tags:
        - Institute Authentication
      summary: Institute Mobile Authentication -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - insPhoneNumber
              - status
            properties:
              insPhoneNumber:
                type: string
                description: Enter a mobile number
              status:
                type: string
                description: Enter status Not Verified
      responses:
        "200":
          description: OK

  /api/v1/auth/ins-detail-verify/{id}:
    post:
      tags:
        - Institute Authentication
      summary: Institute Mobile Authentication Verification -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is institute phone number
        - in: body
          name: body
          schema:
            type: object
            required:
              - insOtpCode
            properties:
              insOtpCode:
                type: string
                description: Enter a OTP which send you mobile number

      responses:
        "200":
          description: OK

  /api/v1/auth/ins/register:
    post:
      tags:
        - Institute Authentication
      summary: Institute registration process -(verified)
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: formData
          name: insName
          type: string
          required: true
          description: Enter a Intitute Name as unique
        - in: formData
          name: name
          type: string
          required: true
          description: Enter a Intitute username as unique
        - in: formData
          name: insEmail
          type: string
          required: true
          description: Enter a Intitute email as unique
        - in: formData
          name: insPhoneNumber
          type: string
          required: true
          description: provide mobile number
        - in: formData
          name: insState
          type: string
          required: true
          description: Enter a State
        - in: formData
          name: insDistrict
          type: string
          required: true
          description: Enter a district
        - in: formData
          name: insPincode
          type: string
          required: true
          description: Enter a pincode
        - in: formData
          name: insAddress
          type: string
          required: true
          description: Enter a address
        - in: formData
          name: insMode
          type: string
          required: true
          description: Enter a mode like offline or online or both
        - in: formData
          name: insType
          type: string
          required: true
          description: Enter a type that is college or school etc
        - in: formData
          name: userId
          type: string
          required: true
          description: Enter User name
      responses:
        "200":
          description: OK

  /api/v1/auth/ins/create-password/{id}:
    post:
      tags:
        - Institute Authentication
      summary: Institute create Password -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: Enter the id of Institute which provide by registration process
        - in: body
          name: body
          schema:
            type: object
            required:
              - insPassword
              - insRePassword
            properties:
              insPassword:
                type: string
                description: Enter Password
              insRePassword:
                type: string
                description: Enter confirm Password
      responses:
        "200":
          description: OK


  #This is for the Institute side API
  /api/v1/ins/{id}/dash:
    get:
      tags:
        - Institute Profile API
      summary: Institute dashboard page Data
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The institute ID
        - in: query
          name: mod_id # Note the name is the same as in the path
          required: false
          schema:
            type: string
          description: The Moderator ID
      responses:
        "200":
          description: OK


  /api/v1/ins/post/{id}/all/profile/posts:
    get:
      tags:
        - Institute Profile API
      summary: Institute All Posts -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK
  

  /api/v1/ins/personal/info/{id}:
    patch:
      tags:
        - Institute Profile API
      summary: Update Profile Details (only details part)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: body
          name: body
          schema:
            type: object
            properties:
              insName:
                type: string
              insType:
                type: string
              insEmail:
                type: string
              insPhoneNumber:
                type: string
              insAchievement:
                type: string
              insAddress:
                type: string
              insAbout:
                type: string
              insAffiliated:
                type: string
              insEstdDate:
                type: string
              insRegDate:
                type: string
              one_line_about:
                type: string
      responses:
        "200":
          description: OK


  /api/v1/ins/{id}/profile:
    get:
      tags:
        - Institute Profile API
      summary: Institute profile page Data
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The institute ID
      responses:
        "200":
          description: OK
  /api/v1/ins/{id}/announcemnt:
    get:
      tags:
        - Institute Profile API
      summary: Institute Announcement page Data -(verified)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The institute ID
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  /api/v1/ins/announcement/{id}:
    post:
      tags:
        - Institute Profile API
      summary: Add New Announcement -(verified)
      produces:
        - application/json
      consumes:
        - multipart/form-data
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The Institute ID
        - in: formData
          name: insAnnTitle
          type: string
          required: true
          description: Announcement Title
        - in: formData
          name: insAnnDescription
          type: string
          required: true
          description: Announcement Description
        - in: formData
          name: insAnnVisibility
          type: string
          required: true
          description: Announcement Visibility
        - in: formData
          name: file
          type: file
          required: true
          description: upload Announcement Photo
        - in: formData
          name: file
          type: file
          required: true
          description: upload Announcement Document
      responses:
        "200":
          description: OK

  /api/v1/ins/reply-announcement/{aid}:
    post:
      tags:
        - Institute Profile API
      summary: Reply To Announcement By user or Institute -(verified)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: aid # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The Announcement ID
        - in: body
          name: body
          schema:
            type: object
            required:
              - replyText
            properties:
              replyText:
                type: string
                description: Enter Reply Text
      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/setting/personal:
    get:
      tags:
        - Institute Profile API
      summary: Institute setting personal page Data -(verified)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The institute ID
      responses:
        "200":
          description: OK
  /api/v1/ins/{id}/switch/account:
    get:
      tags:
        - Institute Profile API
      summary: Institute setting switch account page Data
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The institute ID
      responses:
        "200":
          description: OK
  /api/v1/ins/{id}/credit/q-coins:
    get:
      tags:
        - Institute Profile API
      summary: Institute credit Q-coin page Data
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The institute ID
      responses:
        "200":
          description: OK


  /api/v1/ins/phone/info/{id}:
    post:
      tags:
        - Institute Profile API
      summary: Institute Phone No. Update Setting -(verified)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is Institute id
        - in: body
          name: body
          schema:
            type: object
            required:
              - insPhoneNumber
            properties:
              insPhoneNumber:
                type: string
                description: Enter mobile number

      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/staff/code:
    post:
      tags:
        - Institute Profile API
      summary: Institute Staff Code Generation -(verified)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is Institute id
        - in: body
          name: body
          schema:
            type: object
            required:
              - code
            properties:
              code:
                type: string
                description: Enter 5-digit code

      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/recovery-mail:
    post:
      tags:
        - Institute Profile API
      summary: Institute Recovery Mail Setting -(verified)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is Institute id
        - in: body
          name: body
          schema:
            type: object
            required:
              - recoveryMail
            properties:
              recoveryMail:
                type: string
                description: Enter Recovery Mail

      responses:
        "200":
          description: OK

  /api/v1/ins/follow/:
    patch:
      tags:
        - Institute Profile API
      summary: Follow Institute Api -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - followId
            properties:
              followId:
                type: string
                description: follow Institute Id
      responses:
        "200":
          description: OK

  /api/v1/ins/unfollow:
    patch:
      tags:
        - Institute Profile API
      summary: UnFollow Institute Api -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - followId
            properties:
              followId:
                type: string
                description: follow Institute Id
      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/followers-array:
    get:
      tags:
        - Institute Profile API
      summary: Institute Followers List of Institute and User -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK


  /api/v1/ins/{id}/following-array:
    get:
      tags:
        - Institute Profile API
      summary: Institute Following List of Institute -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/all-two-array:
    get:
      tags:
        - Institute Profile API
      summary: Institute all 2-Follow List -(verified)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The Institute ID
      responses:
        "200":
          description: OK

  
  /api/v1/ins/{id}/display-person:
    post:
      tags:
        - Institute Profile API
      summary: Add Display Person -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: body
          name: body
          schema:
            type: object
            required:
              - displayTitle
              - displayUser
            properties:
              displayTitle:
                type: string
                description: Enter Display Title
              displayUser:
                type: string
                description: Enter Staff or Student User Id
      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/display/person-array:
    get:
      tags:
        - Institute Profile API
      summary: Retrieve Display Person -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
      responses:
        "200":
          description: OK

  /api/v1/ins/{did}/display-person/update:
    patch:
      tags:
        - Institute Profile API
      summary: Update Display Person -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is Display Person id
        - in: body
          name: body
          schema:
            type: object
            required:
              - displayTitle
              - displayUser
            properties:
              displayTitle:
                type: string
                description: Enter Display Title
              displayUser:
                type: string
                description: Enter User Id
      responses:
        "200":
          description: OK
  
  /api/v1/ins/{id}/display-person/{did}/delete/{uid}:
    delete:
      tags:
        - Institute Profile API
      summary: Delete Display Person -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: path
          name: did
          required: true
          type: string
          description: This is Display Person id
        - in: path
          name: uid
          required: true
          type: string
          description: This is User id
      responses:
        "200":
          description: OK


    #This is for institute side all post Related API

  /api/v1/ins/post/{id}/all/posts:
    get:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: Institute All Posts - (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  /api/v1/ins/post/{id}:
    post:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: Institute post create only with text - (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
        - in : body
          name: body
          schema:
            type: object
            properties:
              postTitle:
                type: string
                description: type a text here for Title
              postDescription:
                type: string
                description: type a text here for Description
              postText:
                type: string
                description: type a text here for text
              postStatus:
                type: string
                decription: status should be "Anyone" or "Private"
              people:
                type: array
                description: This is all taged users ids
                items:
                  type: object
                  description: one user id
                  properties:
                    tagId: 
                      type: string
                      description: this is tagged people id (institute Id)
                    tagUserName:
                      type: string
                      description: this is tagged people username (institute username)
                    tagType:
                      type: string
                      description: type here "Institute"

      responses:
        "200":
          description: OK
 
  /api/v1/ins/post/{id}/image:
    post:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: Institute post create text and image - (Verified)
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
        - in: formData
          name: file
          type: file
          required: true
          description: upload your post multiple image
        # - in: formData
        #   name: file
        #   type: file
        #   required: true
        #   description: upload your post multiple image
        - in: formData
          name: postTitle
          type: string
          description: type a text here for Title
        - in: formData
          name: postDescription
          type: string
          description: type a text here for Description
        - in: formData
          name: postText
          type: string
          description: type a text here for text
        - in: formData
          name: postStatus
          type: string
          required: true
          description: status should be "Anyone" or "Private"
        - in: formData
          name: people
          type: array
          items:
            type: string
            description: one user id
          description: This is all taged users ids
      responses:
        "200":
          description: OK

  /api/v1/ins/post/{id}/video:
    post:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: Institute post create text and video - (Verified)
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
        - in: formData
          name: file
          type: file
          required: true
          description: upload your post video
        - in: formData
          name: postTitle
          type: string
          description: type a text here for Title
        - in: formData
          name: postDescription
          type: string
          description: type a text here for Description
        - in: formData
          name: postText
          type: string
          description: type a text here for text
        - in: formData
          name: postStatus
          type: string
          required: true
          description: status should be "Anyone" or "Private"
        - in: formData
          name: people
          type: array
          items:
            type: string
            description: one user id
          description: This is all taged users ids
      responses:
        "200":
          description: OK
          
  /api/v1/ins/post/update/{pid}:
    patch:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: Institute post update with their visibility - (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid
          required: true
          type: string
          description: This is institute id
        - in: body
          name: body
          schema:
            type: object
            required:
              - postStatus
            properties:
              postStatus:
                type: string
                description: status should be "Anyone" or "Private"
      responses:
        "200":
          description: OK

  /api/v1/ins/post/{id}/deleted/{pid}:
    delete:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: Institute post deleted permanently - (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
        - in: path
          name: pid
          required: true
          type: string
          description: This is post id
      responses:
        "200":
          description: OK

  /api/v1/ins/post/tag:
    get:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: In Institute post Added tag people list which user want to tag - (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        # - in: path
        #   name: uid
        #   required: true
        #   type: string
        #   description: This is institute id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
        - in: query
          name: search
          schema:
            type: string
          description: type here name or username          
      responses:
        "200":
          description: OK

  /api/v1/ins/post/reaction/{pid}:
    get:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: This is list of people who like that particular post that is reaction - (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid
          required: true
          type: string
          description: This is post id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  /api/v1/ins/post/like/{pid}:
    get:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: Institute post like and unlike - (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid
          required: true
          type: string
          description: This is post id
      responses:
        "200":
          description: OK

  /api/v1/ins/post/save/{pid}:
    get:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: Institute post save and unsave - (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid
          required: true
          type: string
          description: This is post id
      responses:
        "200":
          description: OK

  /api/v1/ins/post/comment/{id}:
    get:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: Get User one post all comment - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is post id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK
    post:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: Post User one post comment -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is post id
        - in: body
          name: body
          schema:
            type: object
            required:
              - commentDescription
            properties:
              commentDescription:
                type: string
                description: Type here comments
      responses:
        "200":
          description: OK

  /api/v1/ins/post/comment/child/{pcid}:
    get:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: In post one comment, child or reply comment limit to get all reply comment - (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pcid
          required: true
          type: string
          description: This is comment id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK
    post:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: In post one comment, child or reply comment - (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pcid
          required: true
          type: string
          description: This is Comment id
        - in: body
          name: body
          schema:
            type: object
            required:
              - comment
              - uid
            properties:
              comment:
                type: string
                description: Type here reply comments
              uid:
                type: string
                description: This is user or institute id which reply to comment              
      responses:
        "200":
          description: OK

  /api/v1/ins/post/{id}/comment/child/like/{cid}/:
    get:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: In post one comment, child or reply comment - (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is user or institute id
        - in: path
          name: cid
          required: true
          type: string
          description: This is comment id
      responses:
        "200":
          description: OK


  /api/v1/ins/dashboard/{id}/notify:
    get:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: Get All Notifications Of Institute -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  

  /api/v1/ins/{aid}/star-announcement:
    post:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: Mark As Star Announcement -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is announcement id
      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/all/star-announcement:
    get:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: All Star Announcement Institute -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  /api/v1/ins/one/announcement/{aid}:
    get:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: One Announcement Detail Institute -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is announcement id
      responses:
        "200":
          description: OK
      

  /api/v1/ins/{id}/ins-post/{uid}/report:
    post:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: Report Institute's Post By User -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is User id
        - in: path
          name: uid
          required: true
          type: string
          description: This is Post id
        - in: body
          name: body
          schema:
            type: object
            required:
              - reportStatus
            properties:
              reportStatus:
                type: string
                description: Enter Report Content
      responses:
        "200":
          description: OK


  /api/v1/ins/post/{id}/saved/all/posts:
    get:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: Institute All Saved Posts - (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK


  /api/v1/ins/post/{id}/tag/all/posts:
    get:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: Institute All Tag Posts - (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  
  #THis is for universal search of institute

  /api/v1/search/institute/{id}/allsearch:
    get:
      tags:
        - institute-universal-search
      summary: institute-universal-search
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The institute ID
        - in: query
          name: search
          schema:
            type: string
          description: What you want to search
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK
  /api/v1/search/{id}/department:
    get:
      tags:
        - institute-universal-search
      summary: All department which made by institute
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The institute ID
        - in: query
          name: search
          schema:
            type: string
          description: What you want to search
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  /api/v1/search/{id}/student:
    get:
      tags:
        - institute-universal-search
      summary: All student which approved by classes
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The institute ID
        - in: query
          name: search
          schema:
            type: string
          description: What you want to search
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  /api/v1/search/{id}/staff:
    get:
      tags:
        - institute-universal-search
      summary: All staff Approved search
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The institute ID
        - in: query
          name: search
          schema:
            type: string
          description: What you want to search
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  /api/v1/search/{id}/staffrequest:
    get:
      tags:
        - institute-universal-search
      summary: All staff Request Which is not approved by Institute search
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The institute ID
        - in: query
          name: search
          schema:
            type: string
          description: What you want to search
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  # Staff Module at Institute Side

  /api/v1/ins/{id}/staff/approve/{sid}/user/{uid}:
    post:
      tags:
        - Staff-Module
      summary: Staff Approval By Institute Side (status - Approved) - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
        - in: path
          name: sid
          required: true
          type: string
          description: This is Staff id
        - in: path
          name: uid
          required: true
          type: string
          description: This is Staff User id
        - in: body
          name: body
          schema:
            type: object
            required:
              - status
            properties:
              status:
                type: string
                description: Enter Status (Approved)
      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/staff/reject/{sid}/user/{uid}:
    post:
      tags:
        - Staff-Module
      summary: Staff Reject By Institute Side (status - Rejected) - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
        - in: path
          name: sid
          required: true
          type: string
          description: This is Staff id
        - in: path
          name: uid
          required: true
          type: string
          description: This is Staff User id
        - in: body
          name: body
          schema:
            type: object
            required:
              - status
            properties:
              status:
                type: string
                description: Enter Status (Rejected)
      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/pending-staff/list:
    get:
      tags:
        - Staff-Module
      summary: All pending staff List that is request to the institute side to approve as a staff - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
      responses:
        "200":
          description: OK
          
  /api/v1/ins/{id}/approve-staff/list:
    get:
      tags:
        - Staff-Module
      summary: When edit the class master card to change staff then all approve staff get via api - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
      responses:
        "200":
          description: OK

  /api/v1/ins/staff/{id}:
    get:
      tags:
        -  Staff-Module
      summary: All full detail of one staff - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is staff id
      responses:
        "200":
          description: OK


  # Student Module at Institute Side
  /api/v1/ins/{id}/approve-student/list:
    get:
      tags:
        - Student-Module
      summary: All Students in Student Tab at Institute Side -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/unapprove-student/list/query:
    get:
      tags:
        - Student-Module
      summary: All Un Approved Students in Student Tab at Institute Side -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
      responses:
        "200":
          description: OK

  /api/v1/ins/student/{id}:
    get:
      tags:
        - Student-Module
      summary: All full detail of one student -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is student id
      responses:
        "200":
          description: OK


  #This is for institute side all Department API
  
  /api/v1/ins/{id}/department:
    get:
      tags:
        - Institute Internal Departments 
      summary: All department List -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/new-department:
    post:
      tags:
        - Institute Internal Departments
      summary: Add New Department -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: body
          name: body
          schema:
            type: object
            required:
              - dName
              - dTitle
              - sid
            properties:
              dName:
                type: string
                description: Enter Department Name
              dTitle:
                type: string
                description: Enter Department head Title (Professor, Principle)
              sid:
                type: string
                description: Enter Staff Id
      responses:
        "200":
          description: OK

  /api/v1/ins/department-detail/{did}:
    get:
      tags:
        - Institute Internal Departments 
      summary: All details of one department -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is department id
      responses:
        "200":
          description: OK

  /api/v1/ins/{did}/one-batch:
    get:
      tags:
        - Institute Internal Departments 
      summary: One Department All Batch -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is Department id
      responses:
        "200":
          description: OK

  /api/v1/ins/addbatch/{did}/ins/{id}:
    post:
      tags:
        - Institute Internal Departments
      summary: Add New Batch to the department -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is Department id
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: body
          name: body
          schema:
            type: object
            required:
              - batchName
            properties:
              batchName:
                type: string
                description: Enter Batch Name
      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/batchdetail/{bid}:
    get:
      tags:
        - Institute Internal Departments 
      summary: Get current batch details -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
        - in: path
          name: bid
          required: true
          type: string
          description: This is current batch id
      responses:
        "200":
          description: OK


  /api/v1/ins/{did}/batch-select/{bid}/:
    post:
      tags:
        - Institute Internal Departments
      summary: Set Current Batch Active -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is Department id
        - in: path
          name: bid
          required: true
          type: string
          description: This is Batch id
      responses:
        "200":
          description: OK


  /api/v1/ins/{id}/departmentmasterclass/{did}:
    post:
      tags:
        - Institute Internal Departments
      summary: Add New Class Master to the department -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: path
          name: did
          required: true
          type: string
          description: This is Department id
        - in: body
          name: body
          schema:
            type: object
            required:
              - className
            properties:
              className:
                type: string
                description: Enter Class Name
      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/departmentmasterclass-detail/{did}:
    get:
      tags:
        - Institute Internal Departments 
      summary: One department All class master -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
        - in: path
          name: did
          required: true
          type: string
          description: This is department id
      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/departmentmastersubject/{did}/:
    post:
      tags:
        - Institute Internal Departments
      summary: Add New Subject Master to the department -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: path
          name: did
          required: true
          type: string
          description: This is Department id
        - in: body
          name: body
          schema:
            type: object
            required:
              - subjectName
            properties:
              subjectName:
                type: string
                description: Enter Subject Name
      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/departmentmastersubject/{did}:
    get:
      tags:
        - Institute Internal Departments 
      summary: One department All subject master -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
        - in: path
          name: did
          required: true
          type: string
          description: This is department id
      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/department/{did}/batch/{bid}:
    post:
      tags:
        - Institute Internal Departments
      summary: Add New Class to the Batch -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: path
          name: did
          required: true
          type: string
          description: This is Department id
        - in: path
          name: bid
          required: true
          type: string
          description: This is Batch id
        - in: body
          name: body
          schema:
            type: object
            required:
              - mcId
              - classTitle
              - classHeadTitle
              - sid
            properties:
              mcId:
                type: string
                description: Enter Class Master Id
              classTitle:
                type: string
                description: Enter class Title
              classHeadTitle:
                type: string
                description: Enter class Head Title (Professor, class Teacher)
              sid:
                type: string
                description: Enter Staff Id
      responses:
        "200":
          description: OK

  /api/v1/ins/batch/class/{bid}:
    get:
      tags:
        - Institute Internal Departments 
      summary: One batch All Class list -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: bid
          required: true
          type: string
          description: This is batch id
      responses:
        "200":
          description: OK


  /api/v1/ins/{id}/department/{did}/batch/{bid}/class/{cid}/subject:
    post:
      tags:
        - Institute Internal Departments
      summary: Add New Subject to the Class -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: path
          name: did
          required: true
          type: string
          description: This is Department id
        - in: path
          name: bid
          required: true
          type: string
          description: This is Batch id
        - in: path
          name: cid
          required: true
          type: string
          description: This is Class id
        - in: body
          name: body
          schema:
            type: object
            required:
              - msid
              - subjectTitle
              - sid
            properties:
              msid:
                type: string
                description: Enter Subject Master Id
              subjectTitle:
                type: string
                description: Enter subject Head Title (Professor, class Teacher)
              sid:
                type: string
                description: Enter Staff Id
      responses:
        "200":
          description: OK

  /api/v1/ins/class/{cid}:
    get:
      tags:
        - Institute Internal Departments 
      summary: One class Profile -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class id
      responses:
        "200":
          description: OK

  /api/v1/ins/class/subject/{cid}:
    get:
      tags:
        - Institute Internal Departments 
      summary: One class All Subject -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class id
      responses:
        "200":
          description: OK


  #This is for universal image
  /api/v1/all-images/{key}:
    get:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To get All Images, Videos and Documents
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: key
          required: true
          schema:
            type: string
          description: It is key for an images, videos or document
      responses:
        "200":
          description: OK

  /api/v1/all-images/onefile:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Any File To AWS and Get Back
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK

  /api/v1/all-images/onefile/document:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Any Chat Document File To AWS and Get Back
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK

  /api/v1/all-images/multiple/images/upload/query:
    post:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To Upload Chat Images Upto 30 Images 
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
        - in: formData
          name: chatImageCount
          type: number
          required: true
          description: Enter Number of Images Count
      responses:
        "200":
          description: OK

  /api/v1/all-images/{id}/instiute/photo:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Institute profile photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: This is Institute ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK

  /api/v1/all-images/{id}/instiute/cover:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Institute profile cover photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: This is Institute ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK
  #This is institute Announcement
  # /api/v1/all-images/{id}/ins-announcement/photo:
  #   patch:
  #     tags:
  #       - To get All Images, Videos and Documents
  #     summary:
  #       - To upload Institute Announcement Photo
  #     consumes:
  #       - application/json
  #     produces:
  #       - application/json'
  #     parameters:
  #       - in: path
  #         name: id
  #         required: true
  #         schema:
  #           type: string
  #         description: This is Institute ID
  #       - in: formData
  #         name: file
  #         type: file
  #         required: true
  #         description: upload your image with images extenstion
  #     responses:
  #       "200":
  #         description: OK
  # /api/v1/all-images/{id}/ins-announcement/doc:
  #   post:
  #     tags:
  #       - To get All Images, Videos and Documents
  #     summary:
  #       - To upload Institute Announcement Document with multiple file
  #     consumes:
  #       - application/json
  #     produces:
  #       - application/json'
  #     parameters:
  #       - in: path
  #         name: id
  #         required: true
  #         schema:
  #           type: string
  #         description: This is Institute ID
  #       - in: formData
  #         name: file
  #         type: file
  #         required: true
  #         description: upload your file with images and doc extenstion
  #     responses:
  #       "200":
  #         description: OK

  /api/v1/all-images/{id}/user/photo:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload User profile photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: This is User ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK
  /api/v1/all-images/{id}/user/cover:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload User profile cover photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: This is User ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion          
      responses:
        "200":
          description: OK
  /api/v1/all-images/{did}/department/photo:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Department profile photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: did
          required: true
          schema:
            type: string
          description: This is Department ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK
  /api/v1/all-images/{did}/department/cover:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Department profile cover photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: did
          required: true
          schema:
            type: string
          description: This is Department ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK

  /api/v1/all-images/{cid}/class/photo:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Class profile photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: This is Class ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK
  /api/v1/all-images/{cid}/class/cover:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Class profile cover photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: This is Class ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK
  /api/v1/all-images/{fid}/finance/photo:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Finance profile photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: fid
          required: true
          schema:
            type: string
          description: This is Finance ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK
  /api/v1/all-images/{fid}/finance/cover:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Finance profile cover photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: fid
          required: true
          schema:
            type: string
          description: This is Finance ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK

  /api/v1/all-images/{eid}/elearning/photo:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Elearning profile photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: eid
          required: true
          schema:
            type: string
          description: This is Elearning ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK
  /api/v1/all-images/{eid}/elearning/cover:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Elearning profile cover photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: eid
          required: true
          schema:
            type: string
          description: This is Elearning ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK
  /api/v1/all-images/{lid}/library/photo:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Elearning profile photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: lid
          required: true
          schema:
            type: string
          description: This is Elearning ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK
  /api/v1/all-images/{lid}/library/cover:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Elearning profile cover photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: lid
          required: true
          schema:
            type: string
          description: This is Elearning ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK

  /api/v1/all-images/{aid}/admission/photo:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Admission profile photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: aid
          required: true
          schema:
            type: string
          description: This is Admission ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK
  /api/v1/all-images/{aid}/admission/cover:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Admission profile cover photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: aid
          required: true
          schema:
            type: string
          description: This is Admission ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK
  /api/v1/all-images/{sid}/sport/photo:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Sport profile photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: sid
          required: true
          schema:
            type: string
          description: This is Sport ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK
  /api/v1/all-images/{sid}/sport/cover:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Sport profile cover photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: sid
          required: true
          schema:
            type: string
          description: This is Sport ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK

  
  /api/v1/all-images/{sid}/sport/class/photo:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Sport Class profile photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: sid
          required: true
          schema:
            type: string
          description: This is Sport Class ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK
  /api/v1/all-images/{sid}/sport/class/cover:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Sport Class profile cover photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: sid
          required: true
          schema:
            type: string
          description: This is Sport Class ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK

  
  /api/v1/all-images/{sid}/sport/team/cover:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Sport Team profile cover photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: sid
          required: true
          schema:
            type: string
          description: This is Sport Team ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK

  /api/v1/all-images/{vid}/vehicle/cover:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Vehicle cover photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: vid
          required: true
          schema:
            type: string
          description: This is Vehicle ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK

  /api/v1/all-images/{tid}/transport/cover:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Transport cover photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: tid
          required: true
          schema:
            type: string
          description: This is Transport ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK

  /api/v1/all-images/{eid}/event/manager/cover:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Event Manager cover photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: eid
          required: true
          schema:
            type: string
          description: This is Event Manager Module ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK

  /api/v1/all-images/{lcid}/landing/career/cover:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Landing Career cover photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: lcid
          required: true
          schema:
            type: string
          description: This is Landing Career Module ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK

  /api/v1/all-images/{ltid}/landing/tender/cover:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Landing Tender cover photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: ltid
          required: true
          schema:
            type: string
          description: This is Landing Tender Module ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK

  /api/v1/all-images/{aid}/alumini/cover:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Alumini cover photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: aid
          required: true
          schema:
            type: string
          description: This is Alumini Module ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK

  /api/v1/all-images/{hid}/hostel/cover:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Hostel cover photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: hid
          required: true
          schema:
            type: string
          description: This is Hostel Module ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK

  /api/v1/all-images/{huid}/hostel/unit/cover:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Hostel Unit cover photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: huid
          required: true
          schema:
            type: string
          description: This is Hostel Unit Module ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK

  /api/v1/all-images/{hrid}/hostel/room/cover:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Hostel Room cover photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: hrid
          required: true
          schema:
            type: string
          description: This is Hostel Room Module ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK


  /api/v1/all/todevice/token:
    post:
      tags:
        - Push Notificcation Device
      summary: Flutter Push Notification Token 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              deviceToken:
                type: string
                description: Send Unique Token
              id:
                type: string
                description: Send User or Institute id
      responses:
        "200":
          description: OK

  /api/v1/admin/{aid}:
    get:
      tags:
        - Super Admin Universal Post
      summary: Super Admin Dashboard
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Super Admin id
      responses:
        "200":
          description: OK

  /api/v1/admin/{aid}/approve-array:
    get:
      tags:
        - Super Admin Universal Post
      summary: Super Admin Approve Institute
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Super Admin id
      responses:
        "200":
          description: OK

  /api/v1/admin/{aid}/pending-array:
    get:
      tags:
        - Super Admin Universal Post
      summary: Super Admin Request Institute
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Super Admin id
      responses:
        "200":
          description: OK

  /api/v1/admin/{aid}/user-array:
    get:
      tags:
        - Super Admin Universal Post
      summary: Super Admin All Users
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Super Admin id
      responses:
        "200":
          description: OK

  /api/v1/admin/one/institute/{id}:
    get:
      tags:
        - Super Admin Universal Post
      summary: Super Admin View One Institute
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
      responses:
        "200":
          description: OK

  /api/v1/admin/{aid}/approve/ins/{id}:
    post:
      tags:
        - Super Admin Universal Post
      summary: Super Admin Approve One Institute
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Super Admin id
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
      responses:
        "200":
          description: OK

  /api/v1/admin/{aid}/reject/ins/{id}:
    post:
      tags:
        - Super Admin Universal Post
      summary: Super Admin Reject One Institute
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Super Admin id
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
      responses:
        "200":
          description: OK
  
  /api/v1/admin/post/{id}/all/posts:
    get:
      tags:
        - Super Admin Universal Post
      summary: Super Admin All Posts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Super Admin id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  /api/v1/admin/post/{id}:
    post:
      tags:
        - Super Admin Universal Post
      summary: Super Admin post create only with text 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Super Admin id
        - in : body
          name: body
          schema:
            type: object
            properties:
              postTitle:
                type: string
                description: type a text here for Title
              postDescription:
                type: string
                description: type a text here for Description
              postText:
                type: string
                description: type a text here for text
              postStatus:
                type: string
                decription: status should be "Anyone" or "Private"
              people:
                type: array
                description: This is all taged users ids
                items:
                  type: string
                  description: one user id
      responses:
        "200":
          description: OK

  /api/v1/attendance/institute/{id}/staff/attendance:
    get:
      tags:
        - Staff Attendance
      summary: This is give current date particular Staff Attendance id which is use in update the staff attendance api (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: query
          name: date
          type: string
          description: This is date like (08/07/2022)
      responses:
        "200":
          description: OK

    post:
      tags:
        - Staff Attendance
      summary: Mark staff Attendance by the Intitute (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in : body
          name: body
          schema:
            type: object
            properties:
              date:
                type: string
                description: only date is accept in this format like "16/07/2022"
                required: true
              present:
                type: array
                description: This is present array of staff ids like this ["62bb4dd84f87f09b9c55b625", "62bb4dd84f87f09b9c55b625"]
                items:
                  type: string
                  description: staff id
              absent:
                type: array
                description: This is absent array of staff ids like this ["62bb4dd84f87f09b9c55b625", "62bb4dd84f87f09b9c55b625"]
                items:
                  type: string
                  description: staff id
      responses:
        "200":
          description: OK

  /api/v1/attendance/staff/update/{said}:
    patch:
      tags:
        - Staff Attendance
      summary: Update Mark staff Attendance by the Intitute (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: said
          required: true
          type: string
          description: This is  Staff Attendance id of particular date that is current date
        - in : body
          name: body
          schema:
            type: object
            properties:
              date:
                type: string
                description: only date is accept in this format like "16/07/2022"
                required: true
              present:
                type: array
                description: This is present array of staff ids like this ["62bb4dd84f87f09b9c55b625", "62bb4dd84f87f09b9c55b625"]
                items:
                  type: string
                  description: staff id
              absent:
                type: array
                description: This is absent array of staff ids like this ["62bb4dd84f87f09b9c55b625", "62bb4dd84f87f09b9c55b625"]
                items:
                  type: string
                  description: staff id
      responses:
        "200":
          description: OK
  
  /api/v1/attendance/staff-calender/{sid}:
    get:
      tags:
        - Staff Attendance
      summary: This is give the one month all attendance OR one year all attendance (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Staff id
        - in: query
          name: month
          schema:
            type: integer
          description: Enter a month in digit that month attendance you want
        - in: query
          name: year
          schema:
            type: integer
          description: Enter a year in digit that year attendance you want
      responses:
        "200":
          description: OK

  /api/v1/attendance/class/{cid}/student/attendance:
    get:
      tags:
        - Student Attendance
      summary: This is give current date particular Student Attendance id which is use in update the Student attendance api (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Class id
        - in: query
          name: date
          type: string
          description: This is date like (08/07/2022)          
      responses:
        "200":
          description: OK

    post:
      tags:
        - Student Attendance
      summary: Mark Sudent Attendance by the Class Teacher (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Class id
        - in : body
          name: body
          schema:
            type: object
            properties:
              date:
                type: string
                description: only date is accept in this format like "16/07/2022"
                required: true
              present:
                type: array
                description: This is present array of staff ids like this ["62bb4dd84f87f09b9c55b625", "62bb4dd84f87f09b9c55b625"]
                items:
                  type: string
                  description: staff id
              absent:
                type: array
                description: This is absent array of staff ids like this ["62bb4dd84f87f09b9c55b625", "62bb4dd84f87f09b9c55b625"]
                items:
                  type: string
                  description: staff id
      responses:
        "200":
          description: OK

  /api/v1/attendance/student/update/{said}:
    patch:
      tags:
        - Student Attendance
      summary: Update Mark student Attendance by the Class Teacher (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: said
          required: true
          type: string
          description: This is  student Attendance id of particular date that is current date
        - in : body
          name: body
          schema:
            type: object
            properties:
              date:
                type: string
                description: only date is accept in this format like "16/07/2022"
                required: true
              present:
                type: array
                description: This is present array of staff ids like this ["62bb4dd84f87f09b9c55b625", "62bb4dd84f87f09b9c55b625"]
                items:
                  type: string
                  description: staff id
              absent:
                type: array
                description: This is absent array of staff ids like this ["62bb4dd84f87f09b9c55b625", "62bb4dd84f87f09b9c55b625"]
                items:
                  type: string
                  description: staff id
      responses:
        "200":
          description: OK
  
  /api/v1/attendance/student-calender/{sid}:
    get:
      tags:
        - Student Attendance
      summary: This is give the one month all attendance OR one year all attendance (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id
        - in: query
          name: month
          schema:
            type: integer
          description: Enter a month in digit that month attendance you want
        - in: query
          name: year
          schema:
            type: integer
          description: Enter a year in digit that year attendance you want
      responses:
        "200":
          description: OK
  
  /api/v1/class/{cid}:
    patch:
      tags:
        - Class Related Api
      summary: It is give the class code refresh every time (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class id
      responses:
        "200":
          description: OK

  /api/v1/class/setting/{cid}:
    patch:
      tags:
        - Class Related Api
      summary: It is edit the Class Start Date for taking the attendance and much more (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class id
        - in: body
          name: body
          schema:
            type: object
            properties:
              classStartDate:
                type: string
                description: It is accept date format like "06/07/2022" only
              finalReportsSettings:
                type: object
                properties:
                  finalReport:
                    type: boolean
                    description: if it is true then class Teacher side show the report card other wise not show
                  gradeMarks:
                    type: boolean
                    description: if it is true then class Teacher side show the report card other wise not show
                  graceMarks:
                    type: boolean
                    description: if it is true then class Teacher side show the report card other wise not show                    
                  attendance:
                    type: boolean
                    description: if it is true then class Teacher side show the report card other wise not show                                        
                  behaviour:
                    type: boolean
                    description: if it is true then class Teacher side show the report card other wise not show
                  subjectPassingMarks:
                    type: integer
                    description: if it is true then class Teacher side show the report card other wise not show
                  aggregatePassingPercentage:
                    type: integer
                    description: if it is true then class Teacher side show the report card other wise not show                                                            
                description: It is class setting for the report card related function
      responses:
        "200":
          description: OK

  /api/v1/class/{sid}/all/active/mentors:
    get:
      tags:
        - Class Related Api
      summary: All Mentors of One Student (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id
      responses:
        "200":
          description: OK

  /api/v1/attendance/department/{did}/holiday:
    post:
      tags:
        - Holiday Related Api
      summary: It is create the holiday by department head (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is Department id
        - in: body
          name: body
          schema:
            type: object
            properties:
              reason:
                type: string
                description: Give reason of creating Holiday for that day
                required: true
              dates:
                type: array
                description: give the arrays of the dates
                items:
                  type: string
                  description: It is accept date format like "06/07/2022" only
      responses:
        "200":
          description: OK

  /api/v1/attendance/holiday/{did}:
    get:
      tags:
        - Holiday Related Api
      summary: It is give the holiday list that is created by department head (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is department id
      responses:
        "200":
          description: OK

  /api/v1/attendance/class/{cid}/holiday:
    get:
      tags:
        - Holiday Related Api
      summary: It is give the holiday list in class side created by department head with specific months or year (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class id
        - in: query
          name: month
          type: integer
          description: pass the month value if month less than 10 then pass month like 07
        - in: query
          name: year
          type: integer
          description: pass the year value        
      responses:
        "200":
          description: OK

  /api/v1/attendance/holiday/{hid}/delete:
    delete:
      tags:
        - Holiday Related Api
      summary: It is give the holiday (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: hid
          required: true
          type: string
          description: This is holiday id
      responses:
        "200":
          description: OK

  /api/v1/checklist/department/{did}:
    post:
      tags:
        - Checklist Related Api
      summary: It is create the checklist by department head (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is Department id
        - in: body
          name: body
          schema:
            type: object
            properties:
              checklistName:
                type: string
                description: Give checklistName of creating checklist
                required: true
              checklistFees:
                type: string
                description: Give checklistFees of two type that is "Yes" or "No"
              checklistAmount:
                type: integer
                description: Give checklistAmount in number only 
              ClassId:
                type: array
                description: give the arrays of the ClassId for which class(division) making the checklist
                required: true 
                items:
                  type: string
                  description: It is accept ClassId
              gstSlab:
                type: number
                description: Enter GST Number Percentage
              gst_number:
                type: string
                description: Enter GST Number
              business_name:
                type: string
                description: Enter Business Name
              business_address:
                type: string
                description: Enter Business Address
      responses:
        "200":
          description: OK

  /api/v1/checklist/{cid}:
    get:
      tags:
        - Checklist Related Api
      summary: It is give information about one checklist is assign how many student (student list) (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Checklist id
      responses:
        "200":
          description: OK  
    patch:
      tags:
        - Checklist Related Api
      summary: It is update checklist by department head (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Checklist id
        - in: body
          name: body
          schema:
            type: object
            properties:
              checklistName:
                type: string
                description: Give checklistName of creating checklist
              checklistFees:
                type: string
                description: Give checklistFees of two type that is "Yes" or "No"
              checklistAmount:
                type: integer
                description: Give checklistAmount in number only 
      responses:
        "200":
          description: OK

  # /api/v1/checklist/checklist-all/new:
  #   get:
  #     tags:
  #       - Checklist Related Api
  #     summary: It is give the checklist list that is created by department head (Verified)
  #     consumes:
  #       - application/json
  #     produces:
  #       - application/json
  #     parameters:
  #       - in: query
  #         name: page
  #         schema:
  #           type: integer
  #         description: Enter a page which page data you want
  #       - in: query
  #         name: limit
  #         schema:
  #           type: integer
  #         description: Enter a limit that retrieve one time
  #     responses:
  #       "200":
  #         description: OK

  /api/v1/checklist/department/{did}/all:
    get:
      tags:
        - Checklist Related Api
      summary: It is give list of all checklist in one department side (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is department id
      responses:
        "200":
          description: OK  

  /api/v1/checklist/class/{cid}/all:
    get:
      tags:
        - Checklist Related Api
      summary: It is give list of all checklist in one class side (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class id
      responses:
        "200":
          description: OK 

  /api/v1/checklist/{cid}/assign-student/{sid}:
    get:
      tags:
        - Checklist Related Api
      summary: It is assign the checklist  that student which student id you have pass in url (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Checklist id
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id          
      responses:
        "200":
          description: OK


# This is api for the only exam and report card related
  /api/v1/exam/{did}/classmaster/{bid}:
    get:
      tags:
        - Exam Related Api
      summary: It is give the total class master with their classes id(divisions) created in that particular department with according their batch id (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: it is selected Department id for creating the exam 
        - in: path
          name: bid
          required: true
          type: string
          description: It is selected Batch id for creating the exam         
      responses:
        "200":
          description: OK

  /api/v1/exam/{cmid}/subjectmaster/{bid}:
    get:
      tags:
        - Exam Related Api
      summary: It is give the total Subject master with their subjects id (divisions) created in that particular department with according their batch id (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cmid
          required: true
          type: string
          description: It is selected Class Master id for showing the subject master list 
        - in: path
          name: bid
          required: true
          type: string
          description: It is selected Batch id for showing the current batch subject list         
      responses:
        "200":
          description: OK

  /api/v1/exam/batch/{bid}:
    post:
      tags:
        - Exam Related Api
      summary: It is created exam in that particular department with according their batch id (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: bid
          required: true
          type: string
          description: It is selected Batch id for creating the exam   
        - in: body
          name: body
          schema:
            type: object
            properties:
              examName:
                type: string
                description: give name of the exam
                required: true
              examType:
                type: string
                required: true
                description: give the exam type  that is "Final" or "Other"
              examMode:
                type: string
                required: true
                description: give the exam mode  that is "Offline" or "Online"
              examWeight:
                type: integer
                description: give the exam weightage, only exam type is "Other"           
              allclasses:
                type: array
                required: true 
                description: give the arrays of the classes id that is selected by the class Master
                items:
                  type: string
                  description: It is accept classes id 
              allsubject:
                type: array
                description: give the arrays of the subject with their details
                required: true 
                items:
                  type: object
                  properties:
                    subjectIds:
                      type: array
                      required: true 
                      description: give the arrays of the subjects id that is selected by the subject Master
                      items:
                        type: string
                        description: It is accept subject id 
                    subjectName:
                      type: string
                      required: true
                      description: give the name of the subject that is show in Subject Master(subjectName)
                    totalMarks:
                      type: integer
                      required: true
                      description: give the total maximum marks of that subject
                    date:
                      type: string
                      required: true
                      description: give the date which day exam is schedule of that subject and fomate (28/07/2022) 
                    startTime:
                      type: string
                      required: true
                      description: give the exam start time of that particular subject (02:00 Pm)
                    endTime:
                      type: string
                      required: true
                      description: give the exam end time of that particular subject (04:00 Pm)
                    _id:
                      type: string
                      required: true
                      description: it is Subject Master id that is selecetd when add the subject in created time                                                                                                    
      responses:
        "200":
          description: OK

  /api/v1/exam/all/{did}:
    get:
      tags:
        - Exam Related Api
      summary: It is give the total created exams in that particular department (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: It is Department id
      responses:
        "200":
          description: OK

  /api/v1/exam/{eid}:
    get:
      tags:
        - Exam Related Api
      summary: It is give the details of exams with their slected subjects and classes (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: eid
          required: true
          type: string
          description: It is particular Exam id
      responses:
        "200":
          description: OK

  /api/v1/exam/subjectteacher/{sid}:
    get:
      tags:
        - Exam Related Api
      summary: It is give the all exams list in subject Teacher side (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Subject Teacher id
      responses:
        "200":
          description: OK

  /api/v1/exam/allstudents/subjectteacher/{sid}/exam/{eid}:
    get:
      tags:
        - Exam Related Api
      summary: It is give all students list in that selected exam in subject Teacher side with their obtain marks in that particular subject (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Subject Teacher id
        - in: path
          name: eid
          required: true
          type: string
          description: It is particular Exam id          
      responses:
        "200":
          description: OK

  /api/v1/exam/allstudents/marks/subjectteacher/{sid}:
    post:
      tags:
        - Exam Related Api
      summary: It is give all students marks in that selected exam in subject Teacher side (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Subject Teacher id
        - in: body
          name: body
          schema:
            type: object
            properties:
              examId:
                type: string
                required: true
                description: give selected Exam Id in subject teacher side when give numbers 
              marks:
                type: array
                description: give the arrays of the subject with their id and grace marks
                required: true 
                items:
                  type: object
                  properties:
                    studentId:
                      type: string
                      required: true
                      description: it is Student id
                    obtainMarks:
                      type: number
                      required: true
                      description: give the obtain marks of that student       
      responses:
        "200":
          description: OK
    patch:
      tags:
        - Exam Related Api
      summary: It is update one student marks with answer sheet by subject teacher (Verified)
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is subject Id
        - in: formData
          name: file
          type: file
          description: upload your user profile image
        - in: formData
          name: examId
          type: string
          required: true
          description: Enter a exam id 
        - in: formData
          name: studentId
          type: string
          required: true
          description: Enter a student id
        - in: formData
          name: obtainMarks
          type: integer
          required: true
          description: Enter a obtain marks of student
      responses:
        "200":
          description: OK
  /api/v1/exam/student/{sid}/allexam:
    get:
      tags:
        - Exam Related Api
      summary: It is give all exam list in student Side (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Student id
      responses:
        "200":
          description: OK

  /api/v1/exam/student/{sid}/exam/{eid}:
    get:
      tags:
        - Exam Related Api
      summary: It is give details of one exam with their subjects list with all details (time, date etc) in student Side (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Student id
        - in: path
          name: eid
          required: true
          type: string
          description: It is particular Exam id          
      responses:
        "200":
          description: OK

  /api/v1/exam/student/{sid}/exam/{eid}/answersheet:
    get:
      tags:
        - Exam Related Api
      summary: It is give details of one exam with their subjects list with all details (time, date etc) in student Side (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Student id
        - in: path
          name: eid
          required: true
          type: string
          description: It is particular Exam id
        - in: query
          name: subjectId
          required: true
          type: string
          description: It is particular subject id                    
      responses:
        "200":
          description: OK
  /api/v1/exam/class/student/{sid}/grace:
    patch:
      tags:
        - Exam Related Api
      summary: It is update the grace marks of students in class Teacher side (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Student id
        - in: body
          name: body
          schema:
            type: object
            properties:
              allsubjects:
                type: array
                description: give the arrays of the subject with their id and grace marks
                required: true 
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      required: true
                      description: it is a subject id
                    graceMarks:
                      type: number
                      required: true
                      description: it is grace marks of particular subject         
      responses:
        "200":
          description: OK

  /api/v1/exam/class/{cid}/settings:
    get:
      tags:
        - Exam Related Api
      summary: It is give details of reprot card settings in class Teacher side (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: It is particular Class id
      responses:
        "200":
          description: OK

  /api/v1/exam/class/student/{sid}/behaviour:
    get:
      tags:
        - Exam Related Api
      summary: It is give the behaviour of student (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Student id
      responses:
        "200":
          description: OK  
    post:
      tags:
        - Exam Related Api
      summary: It is created behaviour of student by class Teacher side (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Student id
        - in: body
          name: body
          schema:
            type: object
            properties:
              improvements:
                type: string
                description: Give improvements of student
                required: true
              lackIn:
                type: string
                description: Give lackin of student
              ratings:
                type: integer
                description: Give star count of student 
      responses:
        "200":
          description: OK

  /api/v1/exam/class/student/{sid}/report:
    get:
      tags:
        - Exam Related Api
      summary: It is give details of reprot card of student with their details in class Teacher side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Student id
      responses:
        "200":
          description: OK

  /api/v1/exam/class/student/{sid}/report/attendance:
    get:
      tags:
        - Exam Related Api
      summary: It is give details of reprot card Attendance of student with their details in class Teacher side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Student id
      responses:
        "200":
          description: OK

  /api/v1/exam/class/student/{sid}/report/finalize:
    post:
      tags:
        - Exam Related Api
      summary: It is finalize (created final report card) reprot card of student with their details in class Teacher side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Student id
        - in: body
          name: body
          schema:
            type: object
            properties:
              totalFinalExam:
                type: number
                description: Total of all subjects final marks
                required: true
              totalOtherExam:
                type: number
                description: Total of all subjects other marks
                required: true
              totalGraceExam:
                type: number
                description: Total of all subjects grace marks 
                required: true
              totalTotalExam:
                type: number
                description: Total of all subjects wise Total marks
                required: true
              totalPercentage:
                type: number
                description: Total percentage of student
                required: true
              attendance:
                type: integer
                description: Total number of present days of student 
                required: true
              attendanceTotal:
                type: integer
                description: Total number of attendance taken by class teacher 
                required: true
              attendancePercentage:
                type: number
                description: Total percentage of student present in class that year
                required: true
              behaviourStar:
                type: integer
                description: Total star count given by class teacher in behaviour
                required: true
              behaviourImprovement:
                type: string
                description: Improvement given by class teacher in behaviour 
                required: true
              behaviourLack:
                type: string
                description: Lack given by class teacher in behaviour 
                required: true
              subjects:
                type: array
                description: give the arrays of the subject with their details
                required: true 
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      required: true
                      description: it is a subject id
                    subjectName:
                      type: string
                      required: true
                      description: it is subject name
                    finalExamTotal:
                      type: integer
                      required: true
                      description: it is a subject wise finalExamTotal
                    finalExamObtain:
                      type: number
                      required: true
                      description: it is a subject wise finalExamObtain
                    otherExamTotal:
                      type: integer
                      required: true
                      description: it is a subject wise otherExamTotal
                    otherExamObtain:
                      type: number
                      required: true
                      description: it is a subject wise otherExamObtain
                    graceMarks:
                      type: integer
                      required: true
                      description: it is a subject wise graceMarks
                    totalMarks:
                      type: integer
                      required: true
                      description: it is a subject wise totalMarks
                    obtainTotalMarks:
                      type: number
                      required: true
                      description: it is a subject wise obtainTotalMarks                                                                                                 
      responses:
        "200":
          description: OK

  /api/v1/exam/class/student/{sid}/report/finalize/grace/update:
    patch:
      tags:
        - Exam Related Api
      summary: It is updated grace marks of student after finalize reprot card of student in class Teacher side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Student id
        - in: body
          name: body
          schema:
            type: object
            properties:
              subjects:
                type: array
                description: give the arrays of the subject with their id and grace marks
                required: true 
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      required: true
                      description: it is a subject id
                    graceMarks:
                      type: integer
                      required: true
                      description: it is grace marks of particular subject
      responses:
        "200":
          description: OK

# For the Complaints leave and transfer

  /api/v1/compleave/student/{sid}:
    get:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is give list of leave request
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Student id
      responses:
        "200":
          description: OK
    post:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is for create a leave request
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Student id
        - in: body
          name: body
          schema:
            type: object
            properties:
              reason:
                type: string
                description: Give thereasone for leaving
              dates:
                type: array
                description: give the arrays of the dates 
                required: true 
                items:
                  type: string 
                  description: it is a date like format (12/08/2022)             
      responses:
        "200":
          description: OK

  /api/v1/compleave/leave/{lid}:
    get:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is give leave details
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: lid
          required: true
          type: string
          description: It is particular Leave id
      responses:
        "200":
          description: OK          
    delete:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is delete leave request
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: lid
          required: true
          type: string
          description: It is particular Leave id          
      responses:
        "200":
          description: OK

  /api/v1/compleave/class/{cid}:
    get:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is give list of leave request in class side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: It is particular class Teacher id
      responses:
        "200":
          description: OK          
    patch:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is approve or reject the leave in class side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: It is particular Leave id 
        - in: body
          name: body
          schema:
            type: object
            properties:
              status:
                type: string
                description: pass the "Accepetd" of "Rejected" here
                
      responses:
        "200":
          description: OK

  /api/v1/compleave/student/{sid}/compdest:
    get:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is give name of the ClassHead(classTeacher) or Department Head(department) 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular student id
      responses:
        "200":
          description: OK
  
  /api/v1/compleave/student/{sid}/complaint:
    get:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is give list of all Complaints
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Student id
      responses:
        "200":
          description: OK          
    post:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is create complaint request for class or department
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Student id 
        - in: body
          name: body
          schema:
            type: object
            properties:
              classHead:
                type: string
                description: It is the class (class teacher) Id
              departmentHead:
                type: string
                description: It is the department Id
              complaintType:
                type: string
                required:  true
                description: It is complaint type "Open" or "Anonymous"      
              complaintContent:
                type: string
                required: true
                description: It is complaint content  
              complaintTo:
                type: string
                required: true
                description: It is the classHeadTitle or department dTitle according with classHead or departmentHead                      
      responses:
        "200":
          description: OK

  /api/v1/compleave/class/{cid}/complaint:
    get:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is give all list of complaints in class side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: It is particular Class id 
        - in: query
          name: status
          required: true
          type: string
          description: It is "Unsolved" or "Solved"         
      responses:
        "200":
          description: OK

  /api/v1/compleave/department/{did}/complaint:
    get:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is give all list of complaints in Department side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: It is particular Department id 
        - in: query
          name: status
          required: true
          type: string
          description: It is "Unsolved" or "Solved"         
      responses:
        "200":
          description: OK

  /api/v1/compleave/institute/{id}/complaint:
    get:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is give all list of complaints in Institute side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: It is particular Institute id 
        - in: query
          name: status
          required: true
          type: string
          description: It is "Unsolved" or "Solved"         
      responses:
        "200":
          description: OK

  /api/v1/compleave/complaint/{cid}:
    get:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is give one complaints all details
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: It is particular Complaint id
      responses:
        "200":
          description: OK          
    put:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is create complaint request for Institute Admin in student side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: It is particular Complaint id 
      responses:
        "200":
          description: OK          
    patch:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is solve complaint request by class Teacher side or Institute side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: It is particular Complaint id 
        - in: body
          name: body
          schema:
            type: object
            properties:
              status:
                type: string
                description: give the value here "Solved"
      responses:
        "200":
          description: OK
    delete:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is delete particular complaint request by student side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: It is particular Complaint id 
      responses:
        "200":
          description: OK

  /api/v1/compleave/student/{sid}/transfer:
    post:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is create transfer of student to class
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Student id 
        - in: body
          name: body
          schema:
            type: object
            properties:
              transferReason:
                type: string
                description: give the value here why you want to leave        
      responses:
        "200":
          description: OK

  /api/v1/compleave/class/{cid}/transfer:
    get:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is give all list of Transfers in Class side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: It is particular Class id 
      responses:
        "200":
          description: OK

  /api/v1/compleave/class/student/{tid}/transfer:
    put:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is Rejected the Student Transfer request by class
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: tid
          required: true
          type: string
          description: It is particular Transfer id 
        - in: body
          name: body
          schema:
            type: object
            properties:
              status:
                type: string
                description: give the value here "Rejected"       
      responses:
        "200":
          description: OK
    patch:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is Accepetd the student Transfer request by class
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: tid
          required: true
          type: string
          description: It is particular Transfer id 
        - in: body
          name: body
          schema:
            type: object
            properties:
              status:
                type: string
                description: give the value here "Accepted" 
                required: true 
      responses:
        "200":
          description: OK

#for the staff
  /api/v1/compleave/staff/{sid}:
    get:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is give list of leave request
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular staff id
      responses:
        "200":
          description: OK
    post:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is for create a leave request
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular staff id
        - in: body
          name: body
          schema:
            type: object
            properties:
              reason:
                type: string
                description: Give thereasone for leaving
              dates:
                type: array
                description: give the arrays of the dates 
                required: true 
                items:
                  type: string 
                  description: it is a date like format (12/08/2022)             
      responses:
        "200":
          description: OK

  /api/v1/compleave/staff/leave/{lid}:
    get:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is give leave details
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: lid
          required: true
          type: string
          description: It is particular Leave id
      responses:
        "200":
          description: OK          
    delete:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is delete leave request
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: lid
          required: true
          type: string
          description: It is particular Leave id          
      responses:
        "200":
          description: OK

  /api/v1/compleave/institute/{id}:
    get:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is give list of leave request in institute side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: It is particular institute id
      responses:
        "200":
          description: OK          
    patch:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is approve or reject the leave in institute side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: It is particular Leave id 
        - in: body
          name: body
          schema:
            type: object
            properties:
              status:
                type: string
                description: pass the "Accepetd" of "Rejected" here          
      responses:
        "200":
          description: OK

  /api/v1/compleave/staff/{sid}/complaint:
    get:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is give list of all Complaints in staff side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Staff id
      responses:
        "200":
          description: OK          
    post:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is create complaint request for institute side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Staff id 
        - in: body
          name: body
          schema:
            type: object
            properties:
              complaintType:
                type: string
                required:  true
                description: It is complaint type "Open" or "Anonymous"      
              complaintContent:
                type: string
                required: true
                description: It is complaint content  
      responses:
        "200":
          description: OK


  /api/v1/compleave/institute/{id}/staff/complaint:
    get:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is give all list of complaints in Institute side of staff
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: It is particular Institute id 
        - in: query
          name: status
          required: true
          type: string
          description: It is "Unsolved" or "Solved"         
      responses:
        "200":
          description: OK

  /api/v1/compleave/staff/complaint/{cid}:
    get:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is give one complaints all details in staff side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: It is particular Complaint id
      responses:
        "200":
          description: OK          
    patch:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is solve complaint request by Institute side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: It is particular Complaint id 
        - in: body
          name: body
          schema:
            type: object
            properties:
              status:
                type: string
                description: give the value here "Solved"
      responses:
        "200":
          description: OK
    delete:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is delete particular complaint request by staff side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: It is particular Complaint id 
      responses:
        "200":
          description: OK

  /api/v1/compleave/staff/{sid}/transfer:
    post:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is create transfer of staff to institute
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Staff id 
        - in: body
          name: body
          schema:
            type: object
            properties:
              transferReason:
                type: string
                description: give the value here why you want to leave        
      responses:
        "200":
          description: OK

  /api/v1/compleave/institute/{id}/transfer:
    get:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is give all list of Transfers in Institute side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: It is particular Institute id 
      responses:
        "200":
          description: OK

  /api/v1/compleave/institute/staff/{tid}/transfer:
    put:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is Rejected the staff Transfer request
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: tid
          required: true
          type: string
          description: It is particular Transfer id 
        - in: body
          name: body
          schema:
            type: object
            properties:
              status:
                type: string
                description: give the value here "Rejected"       
      responses:
        "200":
          description: OK
    patch:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is Accepetd the staff Transfer request
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: tid
          required: true
          type: string
          description: It is particular Transfer id 
        - in: body
          name: body
          schema:
            type: object
            properties:
              status:
                type: string
                description: give the value here "Accepted" 
                required: true 
              previousStaff:
                type: string
                description: It is  requested transfer staff id
                required: true  
              assignedStaff:
                type: string
                description: It is  replacement staff id
                required: true                                     
      responses:
        "200":
          description: OK

# =================END=====================
  /api/v1/chat:
    post:
      tags:
        - Qviple Socket (one to one chat)
      summary: Create One to One chat 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              userId:
                type: string
                description: Enter User Id of chat Person
      responses:
        "200":
          description: OK
  
  /api/v1/chat:
    get:
      tags:
        - Qviple Socket (one to one chat)
      summary: fetch chats of user by its userId
      consumes:
        - application/json
      produces:
        - application/json
      parameters:          
      responses:
        "200":
          description: OK

  
  /api/v1/chat/{id}/fetch/message:
    get:
      tags:
        - Qviple Socket (one to one chat)
      summary: fetch one chat messages
      consumes:
        - application/json
      produces:
        - application/json
      parameters: 
        - in: path
          name: id
          required: true
          type: string
          description: This is chat id         
      responses:
        "200":
          description: OK

  
  /api/v1/message/{chatId}:
    get:
      tags:
        - Qviple Socket (one to one chat)
      summary: fetch All messages of one Chat
      consumes:
        - application/json
      produces:
        - application/json
      parameters: 
        - in: path
          name: chatId
          required: true
          type: string
          description: This is chat id         
      responses:
        "200":
          description: OK

  /api/v1/message:
    post:
      tags:
        - Qviple Socket (one to one chat)
      summary: Create message (socket)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              content:
                type: string
                description: Enter messaging content
              chatId:
                type: string
                description: Enter current chat Id
              replyContent:
                type: string
                description: Enter Reply Content when click on reply of particular messages
              replyIndex:
                type: string
                description: Enter Reply Content Index when click on reply of particular messages
      responses:
        "200":
          description: OK

  /api/v1/message/document:
    post:
      tags:
        - Qviple Socket (one to one chat)
      summary: Create message with documents (Image, Gif, Pdf document, Doc) (socket)
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: formData
          name: file
          type: file
          required: true
          description: upload your message document
        - in: formData
          name: content
          type: string
          required: true
          description: enter messaging content
        - in: formData
          name: chatId
          type: string
          required: true
          description: Enter current chat Id
        - in: formData
          name: replyContent
          type: string
          description: Enter Reply Content when click on reply of particular messages
        - in: formData
          name: replyIndex
          type: string
          description: Enter Reply Content Index when click on reply of particular messages
      responses:
        "200":
          description: OK

  /api/v1/message/forward:
    post:
      tags:
        - Qviple Socket (one to one chat)
      summary: Create Forward Message to one or another (socket)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              Id:
                type: array
                description: Enter Array of Chat Id where a message to be forwarded
              messageQuery:
                type: string
                description: Enter Current Message Id
              forward:
                type: boolean
                description: Enter (true / false)
      responses:
        "200":
          description: OK

  
  /api/v1/message/read/receipts/{cid}:
    patch:
      tags:
        - Qviple Socket (one to one chat)
      summary: Mark all messages As a (Read)
      consumes:
        - application/json
      produces:
        - application/json
      parameters: 
        - in: path
          name: cid
          required: true
          type: string
          description: This is chat id         
      responses:
        "200":
          description: OK


  /api/v1/message/unread/receipts/{cid}:
    patch:
      tags:
        - Qviple Socket (one to one chat)
      summary: Mark all messages As a (UnRead)
      consumes:
        - application/json
      produces:
        - application/json
      parameters: 
        - in: path
          name: cid
          required: true
          type: string
          description: This is chat id         
      responses:
        "200":
          description: OK

  /api/v1/message/{mid}/chat/dump/{cid}:
    delete:
      tags:
        - Qviple Socket (one to one chat)
      summary: Delete one message of one chat
      consumes:
        - application/json
      produces:
        - application/json
      parameters: 
        - in: path
          name: mid
          required: true
          type: string
          description: This is message id
        - in: path
          name: cid
          required: true
          type: string
          description: This is chat id         
      responses:
        "200":
          description: OK

  /api/v1/chat/:
    get:
      tags:
        - Qviple Socket (one to one chat)
      summary: fetch recents chat of logged In user
      consumes:
        - application/json
      produces:
        - application/json
      parameters:         
      responses:
        "200":
          description: OK

  /api/v1/chat/new/group:
    post:
      tags:
        - Qviple Socket (one to one chat)
      summary: Create Group By Institute to Assign Admin as its user profile 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              users:
                type: array
                description: Enter Array of Staff for its user profile
              name:
                type: string
                description: Enter chat name
              admin:
                type: string
                description: Enter Institute Admin user profile Id
      responses:
        "200":
          description: OK

  /api/v1/chat/rename/group:
    patch:
      tags:
        - Qviple Socket (one to one chat)
      summary: Rename Group chat 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              chatId:
                type: string
                description: Enter chat Id
              chatName:
                type: string
                description: Enter chatName
              chatDescription:
                type: string
                description: Enter Chat Description
      responses:
        "200":
          description: OK

  /api/v1/chat/remove/user/group:
    post:
      tags:
        - Qviple Socket (one to one chat)
      summary: Remove Staff User Profile Id from group by Group Admin
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              userId:
                type: array
                description: Enter Staff User Id which want to remove
              chatId:
                type: string
                description: Enter chat Id
      responses:
        "200":
          description: OK

  /api/v1/chat/group/re/add:
    post:
      tags:
        - Qviple Socket (one to one chat)
      summary: Add Staff User Profile Id from group by Group Admin
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              userId:
                type: array
                description: Enter Staff User Id which want to add
              chatId:
                type: string
                description: Enter chat Id
      responses:
        "200":
          description: OK

  

  /api/v1/chat/{cid}/admin/group/disable:
    patch:
      tags:
        - Qviple Socket (one to one chat)
      summary: Group Admin Disable the Group (you'll be no longer accessible)
      consumes:
        - application/json
      produces:
        - application/json
      parameters: 
        - in: path
          name: cid
          required: true
          type: string
          description: This is chat id         
      responses:
        "200":
          description: OK


  /api/v1/chat/support/new/chat:
    post:
      tags:
        - Qviple Socket (one to one chat)
      summary: Create One to One support chat between user and super admin
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              userId:
                type: string
                description: Enter User Id of chat Person
      responses:
        "200":
          description: OK


  /api/v1/message/support/admin/message:
    post:
      tags:
        - Qviple Socket (one to one chat)
      summary: Super Admin Support create new message 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              content:
                type: string
                description: Enter messaging content
              chatId:
                type: string
                description: Enter current chat Id
              userId:
                type: string
                description: Enter Sender User Id
      responses:
        "200":
          description: OK




  /api/v1/message/support/admin/message/{chatId}:
    get:
      tags:
        - Qviple Socket (one to one chat)
      summary: Get Admin Support Message
      consumes:
        - application/json
      produces:
        - application/json
      parameters: 
        - in: path
          name: chatId
          required: true
          type: string
          description: This is chat id         
      responses:
        "200":
          description: OK


  /api/v1/chat/support/admin/chat:
    post:
      tags:
        - Qviple Socket (one to one chat)
      summary: fetch recents chat of user supports
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              userId:
                type: string
                description: Enter Sender User Id
      responses:
        "200":
          description: OK


  /api/v1/chat/user/subject/student:
    get:
      tags:
        - Qviple Socket (one to one chat)
      summary: Get Student List of Subject of Class 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:         
      responses:
        "200":
          description: OK


  /api/v1/chat/new/group/subject:
    post:
      tags:
        - Qviple Socket (one to one chat)
      summary: Create Group By Subject Teacher to Assign Admin as its user profile 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              users:
                type: array
                description: Enter Array of Student for its user profile
              name:
                type: string
                description: Enter chat name
      responses:
        "200":
          description: OK

  
  /api/v1/chat/institute/recent/group/{id}:
    get:
      tags:
        - Qviple Socket (one to one chat)
      summary: Get Institute Recent Message
      consumes:
        - application/json
      produces:
        - application/json
      parameters: 
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id      
      responses:
        "200":
          description: OK

  
  /api/v1/fees/department-class/fee/{did}:
    post:
      tags:
        - Fees Module Query
      summary: Add Fees By Department Head
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is Department id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              feeName:
                type: string
                description: Enter Name of Fee
              feeAmount:
                type: string
                description: Enter Amount of Fee
              feeDate:
                type: string
                description: Enter Due date of Fee
              ClassId:
                type: array
                description: Enter Multiple Class Id
              gstSlab:
                type: number
                description: Enter GST Number Percentage
              gst_number:
                type: string
                description: Enter GST Number
              business_name:
                type: string
                description: Enter Business Name
              business_address:
                type: string
                description: Enter Business Address
      responses:
        "200":
          description: OK

  /api/v1/fees/department/{did}/query:
    get:
      tags:
        - Fees Module Query
      summary: Department Fee Array
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is Department id 
      responses:
        "200":
          description: OK

  /api/v1/fees/class/{cid}/query:
    get:
      tags:
        - Fees Module Query
      summary: Class Fee Array
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Class id 
      responses:
        "200":
          description: OK

  
  /api/v1/fees/{feesId}:
    get:
      tags:
        - Fees Module Query
      summary: Get One Fees Detail
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: feesId
          required: true
          type: string
          description: This is Fees Id
      responses:
        "200":
          description: OK

  
  /api/v1/fees/class/{cid}/student/{sid}/fee/{id}:
    post:
      tags:
        - Fees Module Query
      summary: Offline Fee Paid by Student
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Class id 
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id 
        - in: path
          name: id
          required: true
          type: string
          description: This is Fees id 
      responses:
        "200":
          description: OK

  
  /api/v1/fees/class/{cid}/student/{sid}/exempt/fee/{id}:
    post:
      tags:
        - Fees Module Query
      summary: Exempted Fee Paid by Student
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Class id 
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id 
        - in: path
          name: id
          required: true
          type: string
          description: This is Fees id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              status:
                type: string
                description: Enter Status of Fee
      responses:
        "200":
          description: OK

  /api/v1/fees/student/status:
    post:
      tags:
        - Fees Module Query
      summary: One Student Detail at fee One Module
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              studentId:
                type: string
                description: Enter Student Id
      responses:
        "200":
          description: OK

  
  /api/v1/finance/ins/{id}/staff/{sid}:
    post:
      tags:
        - Finance Module Query
      summary: Assign and Activate Finance Module By The Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id 
        - in: path
          name: sid
          required: true
          type: string
          description: This is staff id 
      responses:
        "200":
          description: OK

  /api/v1/finance/add/bank/details/{id}:
    post:
      tags:
        - Finance Module Query
      summary: Add Payment Bank Details as mentioned in parameters (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              bankAccountHolderName:
                type: string
                description: Enter Bank Account Holder Name
              bankAccountNumber:
                type: string
                description: Enter Bank Account Number greater than 9 digit
              bankIfscCode:
                type: string
                description: Enter Bank ISFC Code
              bankAccountPhoneNumber:
                type: string
                description: Enter Phone Number Linked with bank Account
              GSTInfo:
                type: string
                description: Enter GST Details
              businessName:
                type: string
                description: Enter Business Name
              businessAddress:
                type: string
                description: Enter Business Address
              gstSlab:
                type: number
                description: Enter GST Slab % default -> 18
      responses:
        "200":
          description: OK


  /api/v1/finance/bank/details/{id}/update:
    patch:
      tags:
        - Finance Module Query
      summary: Update Payment Bank Details as mentioned in parameters (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              bankAccountHolderName:
                type: string
                description: Enter Bank Account Holder Name
              bankAccountNumber:
                type: string
                description: Enter Bank Account Number greater than 9 digit
              bankIfscCode:
                type: string
                description: Enter Bank ISFC Code
              bankAccountPhoneNumber:
                type: string
                description: Enter Phone Number Linked with bank Account
              GSTInfo:
                type: string
                description: Enter GST Details
              businessName:
                type: string
                description: Enter Business Name
              businessAddress:
                type: string
                description: Enter Business Address
      responses:
        "200":
          description: OK

  /api/v1/finance/ins/bank/{id}:
    post:
      tags:
        - Finance Module Query
      summary: Remove Payment Bank Details
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is  id 
      responses:
        "200":
          description: OK

  /api/v1/finance/{fid}/dashboard:
    get:
      tags:
        - Finance Module Query
      summary: Get Finance Info and Funds
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This is Finance Id
      responses:
        "200":
          description: OK

  /api/v1/finance/info/{fid}:
    post:
      tags:
        - Finance Module Query
      summary: Add Info in Finance Department
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This is Finance id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              financeAbout:
                type: string
                description: Enter Finance About 
              financeEmail:
                type: string
                description: Enter Finance Email
              financePhoneNumber:
                type: string
                description: Enter finance Phone Number
      responses:
        "200":
          description: OK

  /api/v1/finance/{fid}/income:
    post:
      tags:
        - Finance Module Query
      summary: Add Income in Finance Department
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This is Finance id 
        - in: formData
          name: incomeAccount
          type: string
          required: true
          description: Enter Type of Income Account (By Cash / By Bank )
        - in: formData
          name: incomeAmount
          type: number
          required: true
          description: Enter Income Amount in Rs.
        - in: formData
          name: incomeFrom
          type: string
          required: true
          description: Enter Sender of Income 
        - in: formData
          name: incomeFromUser
          type: string
          required: false
          description: Enter Sender of Income User Id
        - in: formData
          name: incomeDesc
          type: string
          required: true
          description: Enter Description of Income 
        - in: formData
          name: gstSlab
          type: number
          required: false
          description: Enter GST Slab Percentage %
        - in: formData
          name: gst_number
          type: string
          required: false
          description: Enter GST Number
        - in: formData
          name: business_name
          type: string
          required: false
          description: Enter Business Name 
        - in: formData
          name: business_address
          type: string
          required: false
          description: Enter Business Address
        - in: formData
          name: file
          type: file
          required: false
          description: upload Income Acknowledge Report / Receipt
        - in: formData
          name: income_utr
          type: string
          required: false
          description: Add UTR Number
      responses:
        "200":
          description: OK

  /api/v1/finance/all/incomes:
    post:
      tags:
        - Finance Module Query
      summary: Filter Income By Cash or By Bank Query
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              queryStatus:
                type: string
                description: Enter Query (By Bank) or (By Cash)
      responses:
        "200":
          description: OK

  /api/v1/finance/{fid}/expense:
    post:
      tags:
        - Finance Module Query
      summary: Add Expense in Finance Department
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This is Finance id 
        - in: query
          name: is_inventory
          required: false
          type: string
          description: This is Boolean (true || false)
        - in: formData
          name: expenseAccount
          type: string
          required: true
          description: Enter Type of Expense Account (By Cash / By Bank )
        - in: formData
          name: expenseAmount
          type: number
          required: true
          description: Enter Expense Amount in Rs.
        - in: formData
          name: expensePaid
          type: string
          required: true
          description: Enter Sender of Expense 
        - in: formData
          name: expensePaidUser
          type: string
          required: false
          description: Enter Sender of Expense User Id 
        - in: formData
          name: expenseDesc
          type: string
          required: true
          description: Enter Description of Expense 
        - in: formData
          name: gstSlab
          type: number
          required: false
          description: Enter GST Slab Percentage %
        - in: formData
          name: gst_number
          type: string
          required: false
          description: Enter GST Number
        - in: formData
          name: business_name
          type: string
          required: false
          description: Enter Business Name 
        - in: formData
          name: business_address
          type: string
          required: false
          description: Enter Business Address
        - in: formData
          name: file
          type: file
          required: false
          description: upload Expense Acknowledge Report / Receipt
        - in: formData
          name: expense_quantity
          type: number
          required: false
          description: Enter Expense Quantity
        - in: formData
          name: expense_good_name
          type: string
          required: false
          description: Enter Expense Good Name
        - in: formData
          name: expense_hsn_code
          type: string
          required: false
          description: Enter Expense HSN Code Good 
      responses:
        "200":
          description: OK

  /api/v1/finance/all/expenses:
    post:
      tags:
        - Finance Module Query
      summary: Filter Expense By Cash or By Bank Query
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              queryStatus:
                type: string
                description: Enter Query (By Bank) or (By Cash)
      responses:
        "200":
          description: OK

  /api/v1/finance/{fid}/class/collect:
    get:
      tags:
        - Finance Module Query
      summary: Get Class Collected Fee
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This is Finance Id
      responses:
        "200":
          description: OK

  /api/v1/finance/{fid}/class/{cid}/fee/{id}/receieve:
    post:
      tags:
        - Finance Module Query
      summary: Class Fee Request At Finance
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This is Finance id 
        - in: path
          name: cid
          required: true
          type: string
          description: This is Class id 
        - in: path
          name: id
          required: true
          type: string
          description: This is Fee id
        - in : body
          name: body
          schema:
            type: object
            properties:
              amount:
                type: number
                description: Enter fee in Amount
      responses:
        "200":
          description: OK

  /api/v1/finance/{fid}/class/{cid}/fee/{id}/submit:
    post:
      tags:
        - Finance Module Query
      summary: Class Fee Submitted At Finance
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This is Finance id 
        - in: path
          name: cid
          required: true
          type: string
          description: This is Class id 
        - in: path
          name: id
          required: true
          type: string
          description: This is Fee id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              amount:
                type: number
                description: Enter fee in Amount
      responses:
        "200":
          description: OK


  /api/v1/finance/{fid}/class/{cid}/fee/{id}/incorrect:
    post:
      tags:
        - Finance Module Query
      summary: Class Incorrect Fee At Finance
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This is Finance id 
        - in: path
          name: cid
          required: true
          type: string
          description: This is Class id 
        - in: path
          name: id
          required: true
          type: string
          description: This is Fee id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              amount:
                type: number
                description: Enter fee in Amount
      responses:
        "200":
          description: OK

  /api/v1/finance/class/{cid}/total/online/fee:
    post:
      tags:
        - Finance Module Query
      summary: Class Online Fee 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Class id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              fee:
                type: string
                description: Enter fee in Amount
      responses:
        "200":
          description: OK
  
  /api/v1/finance/class/{cid}/total/offline/fee:
    post:
      tags:
        - Finance Module Query
      summary: Class Offline Fee 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Class id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              fee:
                type: string
                description: Enter fee in Amount
      responses:
        "200":
          description: OK
        
  /api/v1/finance/class/{cid}/total/collected/fee:
    post:
      tags:
        - Finance Module Query
      summary: Class Collected Fee 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Class id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              fee:
                type: string
                description: Enter fee in Amount
      responses:
        "200":
          description: OK
          
  /api/v1/finance/{fid}/dashboard/income:
    get:
      tags:
        - Finance Module Query
      summary: Get All Incomes of Finance
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This is Finance Id
      responses:
        "200":
          description: OK

  /api/v1/finance/{fid}/dashboard/expense:
    get:
      tags:
        - Finance Module Query
      summary: Get All Expenses of Finance
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This is Finance Id
      responses:
        "200":
          description: OK

  /api/v1/finance/{fid}/dashboard/request/class:
    get:
      tags:
        - Finance Module Query
      summary: Get All Request At Finance
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This is Finance Id
      responses:
        "200":
          description: OK

  /api/v1/finance/{fid}/dashboard/submit/class:
    get:
      tags:
        - Finance Module Query
      summary: Get All Submit
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This is Finance Id
      responses:
        "200":
          description: OK

  /api/v1/finance/{fid}/dashboard/reject/class:
    get:
      tags:
        - Finance Module Query
      summary: Get All Rejects
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This is Finance Id
      responses:
        "200":
          description: OK

  /api/v1/finance/{id}/ins/bank/query:
    get:
      tags:
        - Finance Module Query
      summary: Get Bank Detail of Institute - (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute Id
      responses:
        "200":
          description: OK


  /api/v1/finance/{fid}/dashboard/income/balance:
    get:
      tags:
        - Finance Module Query
      summary: Get Income Balance
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This is Finance Id
      responses:
        "200":
          description: OK


  /api/v1/finance/{fid}/dashboard/expense/balance:
    get:
      tags:
        - Finance Module Query
      summary: Get Expense Balance
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This is Finance Id
      responses:
        "200":
          description: OK


  /api/v1/finance/{fid}/emp/all:
    get:
      tags:
        - Finance Module Query
      summary: Get All Employee List - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is finance id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
      responses:
        "200":
          description: OK


  /api/v1/finance/{fid}/add/emp/{sid}:
    post:
      tags:
        - Finance Module Query
      summary: Add Employee for payroll -(Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This is Finance id 
        - in: path
          name: sid
          required: true
          type: string
          description: This is Staff id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              staff_salary_month:
                type: number
                description: Enter Staff Basic Salary Per Month
              staff_total_paid_leaves:
                type: number
                description: Enter Staff Total Paid Leaves given in a month
              heads:
                type: array
                description: Enter Array of Objects [{"master_name": "TDS", "master_amount": 2000, "master_status": "Particular || Deduction", "master_id": "974398787878778788"}]
      responses:
        "200":
          description: OK


  /api/v1/finance/{eid}/one/emp/detail:
    get:
      tags:
        - Finance Module Query
      summary: Get One Employee - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: eid # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is Employee id
        - in: query
          name: type
          schema:
            type: integer
          description: (for Info --> "Detail"), (for History --> "History")
        - in: query
          name: month
          schema:
            type: integer
          description: for type --> "History" then pass this query ("2023-09") just like
      responses:
        "200":
          description: OK

  

  /api/v1/finance/{fid}/add/payroll/{eid}:
    post:
      tags:
        - Finance Module Query
      summary: For Creating Payroll of One Employee -(Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This is Finance id 
        - in: path
          name: eid
          required: true
          type: string
          description: This is Employee id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              month:
                type: string
                description: Enter Month (2022-09-05)
              attendence:
                type: number
                description: Enter Attendence Days in Number
              paid_leaves:
                type: number
                description: Enter Paid Leaves in Number
              payment_mode:
                type: string
                description: Enter Payment mode (By Cash, By Bank)
              purpose:
                type: string
                description: Enter Purpose (Like Monthly Salary, Refund)
              amount:
                type: number
                description: Enter Basic Salary in Number
              paid_to:
                type: string
                description: Enter Name of Payee
              message:
                type: string
                description: Enter Message regarding for payroll
              gross_salary:
                type: number
                description: Enter Gross Salary in Number
              net_total:
                type: number
                description: Enter Net Total in Number
              master:
                type: array
                description: Enter Array of Objects [{"month_master_name": "TDS", "month_master_amount": 2000, "month_master_status": "Particular || Deduction", "month_master_id": "974398787878778788"}]
      responses:
        "200":
          description: OK


  /api/v1/finance/{fid}/add/payroll/master:
    post:
      tags:
        - Finance Module Query
      summary: For Add Payroll Master -(Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This is Finance id
        - in : body
          name: body
          schema:
            type: object
            properties:
              payroll_head_name:
                type: string
                description: Enter Head Name
              payroll_head_type:
                type: string
                description: Enter ("Particular" || "Deduction")
      responses:
        "200":
          description: OK

  /api/v1/finance/{fid}/all/payroll/master:
    get:
      tags:
        - Finance Module Query
      summary: For All Payroll Master -(Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This is Finance id
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
        - in: query
          name: search
          required: false
          type: string
          description: This is Search Query
      responses:
        "200":
          description: OK

  /api/v1/finance/one/payroll/master/{pmid}/all/monthwise:
    get:
      tags:
        - Finance Module Query
      summary: For One Payroll Master Month Wise Seggregation -(Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pmid
          required: true
          type: string
          description: This is Payroll Master id
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
      responses:
        "200":
          description: OK

  /api/v1/finance/one/payroll/master/one/monthwise/{mwid}/all/emp:
    get:
      tags:
        - Finance Module Query
      summary: For One Payroll Master One Month Wise All Staff -(Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: mwid
          required: true
          type: string
          description: This is Month Wise id
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
      responses:
        "200":
          description: OK

  /api/v1/finance/{fid}/one/payroll/master/{mwid}/mark/pay/expense:
    patch:
      tags:
        - Finance Module Query
      summary: For Mark Account Payment Like ("TDS") -(Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This is Finance id
        - in: path
          name: mwid
          required: true
          type: string
          description: This is Month Wise id
        - in : body
          name: body
          schema:
            type: object
            properties:
              amount:
                type: number
                description: Enter Amount
              mode:
                type: string
                description: Enter Mode like as previous
              fee_payment_mode:
                type: string
                description: Enter Fee Mode ("By Cash") || ("UPI Transfer") || ("Demand Draft") || ("Cheque") || ("RTGS/NEFT/IMPS")
                required: false
              fee_payment_amount:
                type: number
                description: Enter Amount
                required: false
              transaction_date:
                type: string
                description: Enter Date Like ("2023-02-02")
                required: false
              fee_bank_name:
                type: string
                description: Enter Bank Name e.g SBI
                required: false
              fee_bank_holder:
                type: string
                description: Enter Bank Holder Name e.g Mithkal
                required: false
              fee_utr_reference:
                type: string
                description: Enter Fee Unique Transaction Reference Number (UTR)
                required: false
      responses:
        "200":
          description: OK

  /api/v1/finance/{fid}/sal/history:
    get:
      tags:
        - Finance Module Query
      summary: Get All Salary History - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is Finance id
      responses:
        "200":
          description: OK


  /api/v1/finance/{fid}/remaining/fee/list:
    get:
      tags:
        - Finance Module Query
      summary: Get All List of Student Remaining Fees - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is Finance id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: search
          schema:
            type: integer
          description: The query which you want to search
      responses:
        "200":
          description: OK

  /api/v1/finance/select/{fid}/secondary/structure/query:
    patch:
      tags:
        - Finance Module Query
      summary: Add Secondary Fee Structure By Finance Manager (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This is Finance id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              fee_category:
                type: string
                description: Enter Category ID
      responses:
        "200":
          description: OK
  

  /api/v1/post/question/{id}/text:
    post:
      tags:
        - Add Question Module
      summary: Create Post Question -(verified)
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is User Id
        - in: formData
          name: file
          type: file
          required: true
          description: upload Question Image (Optional)
        - in: formData
          name: postQuestion
          type: string
          required: true
          description: Enter Question Text
        - in: formData
          name: trend_category
          type: array
          required: true
          description: Choose category as mentioned in User Figma and enter array of strings
      responses:
        "200":
          description: OK

  /api/v1/post/question/{id}/deleted/{pid}:
    delete:
      tags:
        - Add Question Module
      summary: Delete Post Question -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is User Id
        - in: path
          name: pid # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is Post Id
      responses:
        "200":
          description: OK

  /api/v1/post/question/like/{aid}:
    get:
      tags:
        - Add Question Module
      summary: Upvote and Downvote Answer -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is Answer id
      responses:
        "200":
          description: OK

  
  /api/v1/post/question/dislike/{aid}:
    get:
      tags:
        - Add Question Module
      summary: Upvote and Downvote Answer -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is Answer id
      responses:
        "200":
          description: OK

  /api/v1/post/question/save/{pid}:
    get:
      tags:
        - Add Question Module
      summary: Question Save  -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is Post id
      responses:
        "200":
          description: OK

          

  /api/v1/post/question/answer/save/{aid}:
    get:
      tags:
        - Add Question Module
      summary: Answer Save  -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is Answer id
      responses:
        "200":
          description: OK

  /api/v1/post/question/answer/new/{id}:
    post:
      tags:
        - Add Question Module
      summary: Create Answer at Question -(verified)
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is Post Id
        - in: query
          name: post_type
          schema:
            type: integer
          description: for Only Answer Keyword
        - in: formData
          name: file
          type: file
          required: true
          description: upload Answer Image (Optional)
        - in: formData
          name: answerContent
          type: string
          required: true
          description: Enter Answer Content
      responses:
        "200":
          description: OK

  
  /api/v1/post/question/answer/reply/{rid}:
    get:
      tags:
        - Add Question Module
      summary: Get All Reply of One Answer -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: rid # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is Answer id
      responses:
        "200":
          description: OK

  /api/v1/post/question/answer/reply/new/{rid}:
    post:
      tags:
        - Add Question Module
      summary: Add Reply To Answer (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: rid
          required: true
          type: string
          description: This is Parent Answer id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              reply:
                type: string
                description: Enter Answer Reply
      responses:
        "200":
          description: OK


  /api/v1/user/{uid}/know/query:
    get:
      tags:
        - Add Question Module
      summary: Get User Profile Answer, Question & Upvote -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: uid # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is User id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK


  /api/v1/post/question/answer/{id}:
    get:
      tags:
        - Add Question Module
      summary: Get All Answers - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is Post id
        - in: path
          name: page # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is page 
        - in: path
          name: limit # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is Limit
      responses:
        "200":
          description: OK

  
  /api/v1/post/question/{pid}/deleted/{aid}/answer:
    delete:
      tags:
        - Add Question Module
      summary: Delete Post Question Answer -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is Post Id
        - in: path
          name: aid # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is Answer Id
      responses:
        "200":
          description: OK


  /api/v1/post/question/answer/new/repost/{id}:
    post:
      tags:
        - Add Question Module
      summary: Re Post Answer -(verified)
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is Post Id
        - in: query
          name: post_type
          schema:
            type: integer
          description: for Repost keyword
        - in: formData
          name: file
          type: file
          required: true
          description: upload Answer Image (Optional)
        - in: formData
          name: answerContent
          type: string
          required: true
          description: Enter Answer Content
      responses:
        "200":
          description: OK

  
  /api/v1/post/question/repost/{pid}/like/{aid}:
    get:
      tags:
        - Add Question Module
      summary: Upvote and Downvote Answer as Repost (Go To Followers, circle) -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is Repost id
        - in: path
          name: aid # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is Answer id
      responses:
        "200":
          description: OK
  

  /api/v1/post/question/help/to/other/{pid}:
    get:
      tags:
        - Add Question Module
      summary: Mark The Question for the need (Go To Followers, circle) -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is Post Question id
      responses:
        "200":
          description: OK


  /api/v1/poll/question/{id}:
    post:
      tags:
        - Add Poll Module
      summary: Create Poll Question
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is User id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              poll_question:
                type: string
                description: Enter Poll Question 
              duration_date:
                type: string
                description: Enter Poll Close Duration Date
              duration_time:
                type: string
                description: Enter Poll Close Duration Time
              trend_category:
                type: string
                description: Enter Category as mentioned in Qviple User Figma
              day:
                type: string
                description: Enter Number of Days
              pollAnswer:
                type: array
                description: Enter min. two options & max four options
                required: true 
                items:
                  type: object
                  properties:
                    content:
                      type: string
                      required: true 
                      description: Enter Answer Content
      responses:
        "200":
          description: OK

  
  /api/v1/poll/question/vote/{pid}:
    patch:
      tags:
        - Add Poll Module
      summary: Add Vote To Poll Answer
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid
          required: true
          type: string
          description: This is Post id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              answerId:
                type: string
                description: Enter Answer id which we are voting 
      responses:
        "200":
          description: OK
          
#FOR THE BATCH AND CLASS COMPLETEION ALL API
  /api/v1/batch/{bid}:
    get:
      tags:
        - Class, Subject and Preformed Batch Related Api
      summary: It is give list of selected batch all classes. It is use when promote the student (VERIFIED)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: bid
          required: true
          type: string
          description: It is particular Batch id 
      responses:
        "200":
          description: OK

    post:
      tags:
        - Class, Subject and Preformed Batch Related Api
      summary: It is make the Identical Batch that is Preformed Structure Batch (VERIFIED)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: bid
          required: true
          type: string
          description: It is particular Batch id 
        - in: body
          name: body
          schema:
            type: object
            properties:
              batchName:
                type: string
                required:  true
                description: Here type the name of batch      
      responses:
        "200":
          description: OK

  /api/v1/batch/subject/{sid}:
    patch:
      tags:
        - Class, Subject and Preformed Batch Related Api
      summary: for Lock (complete) the subject (VERIFIED)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Subject id 
        - in: body
          name: body
          schema:
            type: object
            properties:
              subjectStatus:
                type: string
                required:  true
                description: Here type the subjectStatus is "Completed"          
      responses:
        "200":
          description: OK

  /api/v1/batch/class/{cid}:
    get:
      tags:
        - Class, Subject and Preformed Batch Related Api
      summary: It is give list of department with their batches in that perticular class institute (VERIFIED)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: It is particular Class id 
      responses:
        "200":
          description: OK    

  /api/v1/batch/promote/{cid}:
    post:
      tags:
        - Class, Subject and Preformed Batch Related Api
      summary: It is promote the selected students in new batch and new class (VERIFIED)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: It is particular Current Class id       
        - in: body
          name: body
          schema:
            type: object
            properties:
              departmentId:
                type: string
                required:  true
                description: It is department Id
              batchId:
                type: string
                required:  true
                description: It is Batch Id
              classId:
                type: string
                required:  true
                description: It is Class Id
              students:
                type: array
                required:  true
                description: It is list of all selected students Id
                items:
                  type: string
                  description: It is a selected students id

      responses:
        "200":
          description: OK    

  /api/v1/batch/complete/{cid}:
    get:
      tags:
        - Class, Subject and Preformed Batch Related Api
      summary: It is give info about all subject is completed in that class or not (VERIFIED)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: It is particular Class id 
      responses:
        "200":
          description: OK

    patch:
      tags:
        - Class, Subject and Preformed Batch Related Api
      summary: It is complete the class (VERIFIED)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: It is particular Class id 
        - in: body
          name: body
          schema:
            type: object
            properties:
              classStatus:
                type: string
                required:  true
                description: Here type the classStatus is "Completed"    
      responses:
        "200":
          description: OK


  /api/v1/ins/post/question/poll/{id}:
    post:
      tags:
        - Add Institute Poll Module
      summary: Create Poll Question
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              poll_question:
                type: string
                description: Enter Poll Question 
              duration_date:
                type: string
                description: Enter Poll Close Duration Date
              duration_time:
                type: string
                description: Enter Poll Close Duration Time
              trend_category:
                type: string
                description: Enter Category as mentioned in Qviple User Figma
              day:
                type: number
                description: Enter Number of days
              pollAnswer:
                type: array
                description: Enter min. two options & max four options
                required: true 
                items:
                  type: object
                  properties:
                    content:
                      type: string
                      required: true 
                      description: Enter Answer Content
      responses:
        "200":
          description: OK

  /api/v1/ins/post/question/{id}/text:
    post:
      tags:
        - Add Institute Poll Module
      summary: Create Post Question -(verified)
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is Institute Id
        - in: formData
          name: file
          type: file
          required: true
          description: upload Question Image (Optional)
        - in: formData
          name: postQuestion
          type: string
          required: true
          description: Enter Question Text
        - in: formData
          name: trend_category
          type: string
          required: true
          description: Choose category as mentioned in User Figma
      responses:
        "200":
          description: OK

  /api/v1/ins/post/question/{id}/deleted/{pid}:
    delete:
      tags:
        - Add Institute Poll Module
      summary: Delete Post Question -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is Institute Id
        - in: path
          name: pid # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is Post Id
      responses:
        "200":
          description: OK

  
  /api/v1/user/{id}/activity:
    get:
      tags:
        - Notification WIO Socket 
      summary: Get All Activity Notification - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is User id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
      responses:
        "200":
          description: OK


  /api/v1/user/{id}/activity/total/notify:
    get:
      tags:
        - Notification WIO Socket 
      summary: Get Count of Not Viewed Activity + Notification - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is User id
      responses:
        "200":
          description: OK


  /api/v1/user/{id}/mark/viewed:
    patch:
      tags:
        - Notification WIO Socket 
      summary: Mark All View When Click on Notification Icon - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is User id
      responses:
        "200":
          description: OK

  
  /api/v1/user/read/notify/user/{rid}:
    patch:
      tags:
        - Notification WIO Socket 
      summary: Mark One Notifcation as Read - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: rid # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is Notification id
      responses:
        "200":
          description: OK

  /api/v1/post/question/{uid}/all/save/answer:
    get:
      tags:
        - Add Question Module
      summary: Get User Saved Answer -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: uid # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is User id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

#FOR THE MCQ ALL API
  /api/v1/all-images/onefile:
    patch:
      tags:
        - MCQ Related ALL Api (In Subject Teacher, Department, Students)
      summary:
        - To upload one file at a time for the add question
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: formData
          name: file
          type: file
          required: true
          description: upload your file
      responses:
        "200":
          description: OK
# Universal profile related api
  /api/v1/mcq/subject/profile/{sid}:
    get:
      tags:
        - MCQ Related ALL Api (In Subject Teacher, Department, Students)
      summary:
        - Universal subject profile data (VERIFIED)
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: sid
          type: string
          required: true
          description: It is subject teacher id
      responses:
        "200":
          description: OK
    
    patch:
      tags:
        - MCQ Related ALL Api (In Subject Teacher, Department, Students)
      summary:
        - To update Universal subject profile data (VERIFIED)
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: sid
          type: string
          required: true
          description: It is subject teacher id
        - in: body
          name: body
          schema:
            type: object
            properties:
              universalDepartment:
                type: string
                description: It is Universal profile related department ID
              universalClass:
                type: string
                description: It is Universal profile related class ID
              universalSubject:
                type: string
                description: It is Universal profile related subject ID
      responses:
        "200":
          description: OK

  /api/v1/mcq/universal/department:
    get:
      tags:
        - MCQ Related ALL Api (In Subject Teacher, Department, Students)
      summary:
        - All department of Universal Institute (VERIFIED)
      consumes:
        - application/json
      produces:
        - application/json'
      responses:
        "200":
          description: OK
  
  /api/v1/mcq/universal/class/{did}:
    get:
      tags:
        - MCQ Related ALL Api (In Subject Teacher, Department, Students)
      summary:
        - To retrieve all department related universal classes (VERIFIED)
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: did
          type: string
          required: true
          description: It is universal department ID
      responses:
        "200":
          description: OK
  
  /api/v1/mcq/universal/subject/{cid}:
    get:
      tags:
        - MCQ Related ALL Api (In Subject Teacher, Department, Students)
      summary:
        - To retrieve all classes related universal subjects (VERIFIED)
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: cid
          type: string
          required: true
          description: It is universal class ID
      responses:
        "200":
          description: OK

  /api/v1/mcq/{smid}/question/{cmid}:
    get:
      tags:
        - MCQ Related ALL Api (In Subject Teacher, Department, Students)
      summary: It is give all mcq questions (with and without universal) in subject teacher side with their respective class master and subject master (VERIFIED)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: smid
          required: true
          type: string
          description: It is particular Subject Master id
        - in: path
          name: cmid
          required: true
          type: string
          description: It is particular Class Master id  
        - in: query
          name: page
          type: integer
          description: pass the page number
        - in: query
          name: limit
          type: integer
          description: pass the limit one time how many item you want  
        - in: query
          name: usmid
          type: string
          description: It is universal Subject Master id
        - in: query
          name: ucmid
          type: string
          description: It is universal Class Master id                            
      responses:
        "200":
          description: OK

    post:
      tags:
        - MCQ Related ALL Api (In Subject Teacher, Department, Students)
      summary: It is add question by subject teacher side with their respective class master and subject master (VERIFIED)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: smid
          required: true
          type: string
          description: It is particular Subject Master id
        - in: path
          name: cmid
          required: true
          type: string
          description: It is particular Class Master id    
        - in: body
          name: body
          schema:
            type: object
            properties:
              questionSNO:
                type: string
                required:  true
                description: It is question serial number
              questionNumber:
                type: integer
                required:  true
                description: It is question number that how many marks of one question
              questionDescription:
                type: string
                required:  true
                description: It is question description
              questionImage:
                type: array
                description: It is list of all selected images key
                items:
                  type: string
              options:
                type: array
                required:  true
                description: It is list of all selected correct answer
                items:
                  type: object
                  properties:
                    option:
                      type: string
                      description: here give option description
                    optionNumber:
                      type: string
                      required: true
                      description: it is a option serial number in alphabet or number      
                    image:
                      type: string
                      description: it is option image key                  
              correctAnswer:
                type: array
                required:  true
                description: It is list of all selected correct answer
                items:
                  type: object
                  properties:
                    option:
                      type: string
                      description: here give option description
                    optionNumber:
                      type: string
                      required: true
                      description: it is a option serial number in alphabet or number      
                    image:
                      type: string
                      description: it is option image key                                     
              answerDescription:
                type: string
                required:  true
                description: It is answer description
              answerImage:
                type: array
                description: It is list of all selected images key
                items:
                  type: string                  
      responses:
        "200":
          description: OK

  /api/v1/mcq/one/question/{qid}:
    get:
      tags:
        - MCQ Related ALL Api (In Subject Teacher, Department, Students)
      summary: It is give mcq one questions details in subject teacher side with their respective class master and subject master  (VERIFIED)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: qid
          required: true
          type: string
          description: It is particular Quetion id
      responses:
        "200":
          description: OK

  /api/v1/mcq/{smid}/question/count/{cmid}:
    get:
      tags:
        - MCQ Related ALL Api (In Subject Teacher, Department, Students)
      summary: It is give mcq questions count in subject teacher side with their respective class master and subject master to ADD question in Test set (VERIFIED)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: smid
          required: true
          type: string
          description: It is particular Subject Master id
        - in: path
          name: cmid
          required: true
          type: string
          description: It is particular Class Master id 
      responses:
        "200":
          description: OK

  /api/v1/mcq/question/{smid}/testset/{cmid}:
    get:
      tags:
        - MCQ Related ALL Api (In Subject Teacher, Department, Students)
      summary: It is give all testset list (with and without universal) in subject teacher side with their respective class master and subject master (VERIFIED)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: smid
          required: true
          type: string
          description: It is particular Subject Master id
        - in: path
          name: cmid
          required: true
          type: string
          description: It is particular Class Master id 
        - in: query
          name: page
          type: integer
          description: pass the page number
        - in: query
          name: limit
          type: integer
          description: pass the limit one time how many item you want 
        - in: query
          name: usmid
          type: string
          description: It is Universal Subject Master id
        - in: query
          name: ucmid
          type: string
          description: It is Universal Class Master id                                  
      responses:
        "200":
          description: OK

    post:
      tags:
        - MCQ Related ALL Api (In Subject Teacher, Department, Students)
      summary: It is save TESTSET by subject teacher side with their respective class master and subject master (VERIFIED)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: smid
          required: true
          type: string
          description: It is particular Subject Master id
        - in: path
          name: cmid
          required: true
          type: string
          description: It is particular Class Master id    
        - in: body
          name: body
          schema:
            type: object
            properties:
              testName:
                type: string
                required:  true
                description: It is testName of the test set
              testTotalQuestion:
                type: integer
                required:  true
                description: It is testTotalQuestion number of questions
              testTotalNumber:
                type: integer
                required:  true
                description: It is testTotalNumber maximum number of test set
              questions:
                type: array
                description: it is hold all the question IDS only
                required: true 
                items:
                  type: string
                  description: It is question ID only
      responses:
              "200":
                description: OK

  /api/v1/mcq/testset/{tsid}/detail:
    get:
      tags:
        - MCQ Related ALL Api (In Subject Teacher, Department, Students)
      summary: It is give one testset all question some details in subject teacher side with their respective class master and subject master (VERIFIED)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: tsid
          required: true
          type: string
          description: It is particular TESTSET id      
        - in: query
          name: page
          type: integer
          description: pass the page number
        - in: query
          name: limit
          type: integer
          description: pass the limit one time how many item you want                        
      responses:
        "200":
          description: OK

  /api/v1/mcq/subject/{sid}/take/testset:
    post:
      tags:
        - MCQ Related ALL Api (In Subject Teacher, Department, Students)
      summary: It is take one testset mcq by subject teacher for that particular class students (VERIFIED)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Subject Teacher id      
        - in: body
          name: body
          schema:
            type: object
            properties:
              tsid:
                type: string
                required:  true
                description: It is particular TESTET ID
              testExamName:
                type: string
                required:  true
                description: It is testExamName of the test set Exam  
              testDate:
                type: string
                required:  true
                description: It is testDate of Exam that day held 2022-11-08 like 
              testStart:
                type: string
                required:  true
                description: It is start time of the testet Exam  
              testEnd:
                type: string
                required:  true
                description: It is end time of the testet Exam  
              testDuration:
                type: string
                required:  true
                description: It is duration time of the testet Exam 
      responses:
        "200":
          description: OK

  /api/v1/mcq/subject/{sid}/taken/alltestset:
    get:
      tags:
        - MCQ Related ALL Api (In Subject Teacher, Department, Students)
      summary: It is give all testset list taken by subject teacher in subject teacher (VERIFIED)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is Subject Teacher ID     
        - in: query
          name: page
          type: integer
          description: pass the page number
        - in: query
          name: limit
          type: integer
          description: pass the limit one time how many item you want                        
      responses:
        "200":
          description: OK

  /api/v1/mcq/subject/alloted/{atsid}/testset/student:
    get:
      tags:
        - MCQ Related ALL Api (In Subject Teacher, Department, Students)
      summary: It is give all student list with their number of one testset taken mcq in subject teacher (VERIFIED)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: atsid
          required: true
          type: string
          description: It is Alloted testset ID     
        - in: query
          name: page
          type: integer
          description: pass the page number
        - in: query
          name: limit
          type: integer
          description: pass the limit one time how many item you want                        
      responses:
        "200":
          description: OK
          
  /api/v1/mcq/student/{sid}/alltestset:
    get:
      tags:
        - MCQ Related ALL Api (In Subject Teacher, Department, Students)
      summary: It is give all testset list (and also give status of complete or not) in student side that assign by subject teacher (VERIFIED)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Student id      
        - in: query
          name: page
          type: integer
          description: pass the page number
        - in: query
          name: limit
          type: integer
          description: pass the limit one time how many item you want                        
      responses:
        "200":
          description: OK

  /api/v1/mcq/student/testset/{tsid}/detail:
    get:
      tags:
        - MCQ Related ALL Api (In Subject Teacher, Department, Students)
      summary: It is give one testset some detail(like start test Exam screen page) in student side that assign by subject teacher (VERIFIED)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: tsid
          required: true
          type: string
          description: It is particular TESTSET id      
      responses:
        "200":
          description: OK

  /api/v1/mcq/student/testset/paper/{tsid}:
    get:
      tags:
        - MCQ Related ALL Api (In Subject Teacher, Department, Students)
      summary: It is give one testset all questions with optins for giving the test by student side that assign by subject teacher (VERIFIED)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: tsid
          required: true
          type: string
          description: It is particular TESTSET id      
      responses:
        "200":
          description: OK

    patch:
      tags:
        - MCQ Related ALL Api (In Subject Teacher, Department, Students)
      summary: It is save one question answer giving by student (VERIFIED)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: tsid
          required: true
          type: string
          description: It is particular TESTSET id      
        - in: body
          name: body
          schema:
            type: object
            properties:
              testSetLeftTime:
                type: integer
                required:  true
                description: each time send remaining time left to give the paper           
              questionSNO:
                type: string
                required:  true
                description: It is particular Question serial number
              givenAnswer:
                type: array
                required:  true
                description: It is hold all the option giving by student  
                items:
                  type: object
                  properties:
                    option:
                      type: string
                      description: here give option description
                    optionNumber:
                      type: string
                      required: true
                      description: it is a option serial number in alphabet or number      
                    image:
                      type: string
                      description: it is option image key   
      responses:
        "200":
          description: OK

  /api/v1/mcq/student/testset/{tsid}/complete:
    get:
      tags:
        - MCQ Related ALL Api (In Subject Teacher, Department, Students)
      summary: It is give one testset results given by student side that assign by subject teacher (VERIFIED)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: tsid
          required: true
          type: string
          description: It is particular TESTSET id      
      responses:
        "200":
          description: OK

    patch:
      tags:
        - MCQ Related ALL Api (In Subject Teacher, Department, Students)
      summary: It is submit Exam of one TESTSET giving by student (VERIFIED)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: tsid
          required: true
          type: string
          description: It is particular TESTSET id      
        - in: body
          name: body
          schema:
            type: object
            properties:
              testSetComplete:
                type: boolean
                required:  true
                description: here type the testSetComplete is "true or false"
      responses:
        "200":
          description: OK

  /api/v1/mcq/exam/class/{cmid}/subject/{smid}/alltestset:
    get:
      tags:
        - MCQ Related ALL Api (In Subject Teacher, Department, Students)
      summary: It is give all save TESTSET list that created by subject teacher, And use at time of creating exam by department head (VERIFIED)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cmid
          required: true
          type: string
          description: It is particular Class Master id  
        - in: path
          name: smid
          required: true
          type: string
          description: It is particular Subject Master id          
        - in: query
          name: page
          type: integer
          description: pass the page number
        - in: query
          name: limit
          type: integer
          description: pass the limit one time how many item you want                    
      responses:
        "200":
          description: OK

  /api/v1/mcq/exam/create/batch/{bid}:
    post:
      tags:
        - MCQ Related ALL Api (In Subject Teacher, Department, Students)
      summary: It is created exam (for MCQ) in that particular department with according their batch id ((VERIFIED))
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: bid
          required: true
          type: string
          description: It is selected Batch id for creating the exam   
        - in: body
          name: body
          schema:
            type: object
            properties:
              examName:
                type: string
                description: give name of the exam
                required: true
              examType:
                type: string
                required: true
                description: give the exam type  that is "Final" or "Other"
              examMode:
                type: string
                required: true
                description: give the exam mode  that is "Offline" or "Online"
              examWeight:
                type: integer
                description: give the exam weightage, only exam type is "Other"           
              allclasses:
                type: array
                required: true 
                description: give the arrays of the classes id that is selected by the class Master
                items:
                  type: string
                  description: It is accept classes id 
              allsubject:
                type: array
                description: give the arrays of the subject with their details
                required: true 
                items:
                  type: object
                  properties:
                    subjectIds:
                      type: array
                      required: true 
                      description: give the arrays of the subjects id that is selected by the subject Master
                      items:
                        type: string
                        description: It is accept subject id 
                    subjectName:
                      type: string
                      required: true
                      description: give the name of the subject that is show in Subject Master(subjectName)
                    totalMarks:
                      type: integer
                      required: true
                      description: give the total maximum marks of that subject
                    date:
                      type: string
                      required: true
                      description: give the date which day exam is schedule of that subject and fomate (28/07/2022) 
                    startTime:
                      type: string
                      required: true
                      description: give the exam start time of that particular subject (02:00 Pm)
                    endTime:
                      type: string
                      required: true
                      description: give the exam end time of that particular subject (04:00 Pm)
                    duration:
                      type: string
                      required: true
                      description: here give total duration of the paper  
                    testSetId:
                      type: string
                      required: true
                      description: Give the particular selected TESTSET ID                                            
                    _id:
                      type: string
                      required: true
                      description: it is Subject Master id that is selecetd when add the subject in created time                                                                                                    
      responses:
        "200":
          description: OK

# fot the assignment side
  /api/v1/mcq/subject/{sid}/assignment:
    get:
      tags:
        - MCQ Related ALL Api (In Subject Teacher, Department, Students)
      summary: It is give all assignment in Subject Teacher side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular subject id    
        - in: query
          name: page
          type: integer
          description: pass the page number
        - in: query
          name: limit
          type: integer
          description: pass the limit one time how many item you want             
      responses:
        "200":
          description: OK

    post:
      tags:
        - MCQ Related ALL Api (In Subject Teacher, Department, Students)
      summary: It is Cretae Assignment by the Subject teacher side for the students
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular subject id      
        - in: body
          name: body
          schema:
            type: object
            properties:
              assignmentName:
                type: string
                required:  true
                description: here type the assignment Name
              dueDate:
                type: string
                required:  true
                description: here give the last date of the assignment
              descritpion:
                type: string
                required:  true
                description: here type the description the the assingmnet
              students:
                type: array
                description: here list of the all student ids
                items:
                  type: string
                  description: this is the student id
              testSet:
                type: array
                description: here list of the all test set ids
                items:
                  type: string
                  description: this is the test set id
              file:
                type: array
                description: here list of all files
                items:
                  type: file
                  description: this is one file
      responses:
        "200":
          description: OK

  /api/v1/mcq/subject/assignment/{aid}:
    get:
      tags:
        - MCQ Related ALL Api (In Subject Teacher, Department, Students)
      summary: It is give some details of assignment like (all assignment submitted student list with the submitted date) in Subject Teacher side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: It is particular Assignment id    
        - in: query
          name: page
          type: integer
          description: pass the page number
        - in: query
          name: limit
          type: integer
          description: pass the limit one time how many item you want             
      responses:
        "200":
          description: OK

  /api/v1/mcq/subject/assignment/{aid}/student/{sid}:
    get:
      tags:
        - MCQ Related ALL Api (In Subject Teacher, Department, Students)
      summary: It is give one student with his assignment submit details in Subject Teacher side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: It is particular Assigment id    
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Student id           
      responses:
        "200":
          description: OK

    patch:
      tags:
        - MCQ Related ALL Api (In Subject Teacher, Department, Students)
      summary: It is complete the status of student assignment by the Subject Teacher Side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: It is particular Assigment id    
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Student id     
        - in: body
          name: body
          schema:
            type: object
            properties:
              assignmentSubmit:
                type: boolean
                required:  true
                description: here type the assignmentSubmit (true or false only)
      responses:
        "200":
          description: OK

  /api/v1/mcq/student/{sid}/assignment:
    get:
      tags:
        - MCQ Related ALL Api (In Subject Teacher, Department, Students)
      summary: It is give list of the all assignment in Student side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Student id    
        - in: query
          name: page
          type: integer
          description: pass the page number
        - in: query
          name: limit
          type: integer
          description: pass the limit one time how many item you want             
      responses:
        "200":
          description: OK

  /api/v1/mcq/student/assignment/{aid}:
    get:
      tags:
        - MCQ Related ALL Api (In Subject Teacher, Department, Students)
      summary: It is give one assignment details in student side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: It is particular Assigment id    
      responses:
        "200":
          description: OK

    patch:
      tags:
        - MCQ Related ALL Api (In Subject Teacher, Department, Students)
      summary: It is submitted the student assignment to the Subject teacher in Student side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: It is particular Assigment id    
        - in: body
          name: body
          schema:
            type: object
            properties:
              studentDescritpion:
                type: string
                description: here type the description the the assignment by the student
              submmittedDate:
                type: string
                description: here type the submmittedDate of assingnment date
              assignmentSubmitRequest:
                type: boolean
                required:  true
                description: here type assignmentSubmitRequest (true or false)
              testSet:
                type: string
                description: It is the testset id
              file:
                type: array
                description: here list of all files
                items:
                  type: file
                  description: this is one file
      responses:
        "200":
          description: OK



  /api/v1/ins/profile/{username}:
    get:
      tags:
        - Institute Profile API
      summary: Institute profile page Data
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: username # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The institute username
      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/deactivate/account:
    post:
      tags:
        - Institute Profile API
      summary: Deactivate User A/c for atleast 2  -(verified)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is Institute id
        - in: body
          name: body
          schema:
            type: object
            required:
              - password
              - status
              - ddate
            properties:
              password:
                type: string
                description: Enter your A/c password
              status:
                type: string
                description: Enter Deactivated Text
              ddate:
                type: string
                description: Enter Date after 2 days
      responses:
        "200":
          description: OK


  /api/v1/ins/unblock/institute/:
    patch:
      tags:
        - Institute Profile API
      summary: UnBlock Institute to Institute Api -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: blockId # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: Enter Blocked Institute Id
      responses:
        "200":
          description: OK
  
  /api/v1/ins/report/block/institute:
    patch:
      tags:
        - Institute Profile API
      summary: Block Institute to Institute Api -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: blockId # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: Enter Blocked Institute Id
      responses:
        "200":
          description: OK

  /api/v1/user/profile/{username}:
    get:
      tags:
        - User Profile API
      summary: User Profile page Data -(verified)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: username # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The user username
      responses:
        "200":
          description: OK

  /api/v1/edit/institute/department/{did}:
    get:
      tags:
        - Edit and Delete (Institute Department, Staff, student and user member )
      summary: give department details of edit department
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: did 
          required: true
          schema:
            type: string
          description: The department ID
      responses:
        "200":
          description: OK  
    patch:
      tags:
        - Edit and Delete (Institute Department, Staff, student and user member )
      summary: Edit department of department name, department title and staff change
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: did 
          required: true
          schema:
            type: string
          description: The department ID
        - in: body
          name: body
          schema:
            type: object
            properties:
              dName:
                type: string
                description: if want to change department name then pass this parameter only
              dTitle:
                type: string
                description: if want to change department title then pass this parameter only
              sid:
                type: string
                description: if want to change department head (new staff id) then pass this parameter only
      responses:
        "200":
          description: OK

    delete:
      tags:
        - Edit and Delete (Institute Department, Staff, student and user member )
      summary: Delete department if no student in particular department
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: did 
          required: true
          schema:
            type: string
          description: The department ID
      responses:
        "200":
          description: OK

  /api/v1/edit/institute/batch/{bid}:
    patch:
      tags:
        - Edit and Delete (Institute Department, Staff, student and user member )
      summary: Edit batch of batch name only
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: bid 
          required: true
          schema:
            type: string
          description: The batch ID
        - in: body
          name: body
          schema:
            type: object
            properties:
              batchName:
                type: string
                description: if want to change batch name then pass this parameter only  
      responses:
        "200":
          description: OK

    delete:
      tags:
        - Edit and Delete (Institute Department, Staff, student and user member )
      summary: Delete batch if no students in particular batch
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: bid 
          required: true
          schema:
            type: string
          description: The batch ID
      responses:
        "200":
          description: OK

  /api/v1/edit/institute/classmaster/{cmid}:
    delete:
      tags:
        - Edit and Delete (Institute Department, Staff, student and user member )
      summary: Edit class master of className if no any subject is created by this class master
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: cmid 
          required: true
          schema:
            type: string
          description: The class master ID         
      responses:
        "200":
          description: OK

  /api/v1/edit/institute/class/{cid}:
    get:
      tags:
        - Edit and Delete (Institute Department, Staff, student and user member )
      summary: Give details of class for edit class 
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: cid 
          required: true
          schema:
            type: string
          description: The class ID
      responses:
        "200":
          description: OK  
    patch:
      tags:
        - Edit and Delete (Institute Department, Staff, student and user member )
      summary: Edit class like classTitle, class master and class teacher etc
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: cid 
          required: true
          schema:
            type: string
          description: The class ID
        - in: body
          name: body
          schema:
            type: object
            properties:
              classTitle:
                type: string
                description: if want to change department name then pass this parameter only
              mCName:
                type: string
                description: if want to change class Master for that class, pass this parameter only
              mcId:
                type: string
                description: It is change class Master Id (if change the class master for edit class)                              
              classHeadTitle:
                type: string
                description: if want to change department title then pass this parameter only
              classTeacher:
                type: string
                description: if want to change class Teacher head (new staff id) then pass this parameter only
      responses:
        "200":
          description: OK

    delete:
      tags:
        - Edit and Delete (Institute Department, Staff, student and user member )
      summary: Delete class if no students in class
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: cid 
          required: true
          schema:
            type: string
          description: The class ID
      responses:
        "200":
          description: OK

  /api/v1/edit/institute/subjectmaster/{smid}:
    delete:
      tags:
        - Edit and Delete (Institute Department, Staff, student and user member )
      summary: Edit subject master of subjectName if no subject associated with this
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: smid 
          required: true
          schema:
            type: string
          description: The subject master ID     
      responses:
        "200":
          description: OK

  /api/v1/edit/institute/subject/{sid}:
    get:
      tags:
        - Edit and Delete (Institute Department, Staff, student and user member )
      summary: Give subject details for edit subject
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: sid 
          required: true
          schema:
            type: string
          description: The subject  ID
      responses:
        "200":
          description: OK  
    patch:
      tags:
        - Edit and Delete (Institute Department, Staff, student and user member )
      summary: Edit subject with subjectTitle, subject teacher and subject master etc
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: sid 
          required: true
          schema:
            type: string
          description: The subject  ID
        - in: body
          name: body
          schema:
            type: object
            properties:
              subjectTitle:
                type: string
                description: if want to change subject title name then pass this parameter only
              smId:
                type: string
                description: It is change subject Master Id (if change the subject master for edit subject)                              
              sid:
                type: string
                description: if want to change subject Teacher head (new staff id) then pass this parameter only          
      responses:
        "200":
          description: OK

    delete:
      tags:
        - Edit and Delete (Institute Department, Staff, student and user member )
      summary: Delete subject if no students associated with this
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: sid 
          required: true
          schema:
            type: string
          description: The subject  ID
      responses:
        "200":
          description: OK

  /api/v1/edit/staff/form/photo/{sid}:
    patch:
      tags:
        - Edit and Delete (Institute Department, Staff, student and user member )
      summary: Edit staff form photo only who applied form to institute by staff Side
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: sid 
          required: true
          schema:
            type: string
          description: The staff  ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload form profile photo          
      responses:
        "200":
          description: OK

  /api/v1/edit/staff/form/detail/{sid}:
    patch:
      tags:
        - Edit and Delete (Institute Department, Staff, student and user member )
      summary: Edit staff form details by intitute Admin side
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: sid 
          required: true
          schema:
            type: string
          description: The staff  ID
        - in: body
          name: body
          schema:
            type: object
            properties:
              staffFirstName:
                type: string
                description: if want to change staffFirstName then pass this parameter only
              staffMiddleName:
                type: string
                description: if want to change staffMiddleName then pass this parameter only
              staffLastName:
                type: string
                description: if want to change staffLastName then pass this parameter only                          
              staffDOB:
                type: string
                description: if want to change staffDOB then pass this parameter only
              staffGender:
                type: string
                description: if want to change staffGender then pass this parameter only
              staffNationality:
                type: string
                description: if want to change staffNationality then pass this parameter only
              staffMTongue:
                type: string
                description: if want to change staffMTongue then pass this parameter only
              staffMotherName:
                type: string
                description: if want to change staffMotherName then pass this parameter only                             
              staffCast:
                type: string
                description: if want to change staffCast then pass this parameter only
              staffCastCategory:
                type: string
                description: if want to change staffCastCategory then pass this parameter only                
              staffReligion:
                type: string
                description: if want to change staffReligion then pass this parameter only
              staffBirthPlace:
                type: string
                description: if want to change staffBirthPlace then pass this parameter only
              staffDistrict:
                type: string
                description: if want to change staffDistrict then pass this parameter only
              staffState:
                type: string
                description: if want to change staffState then pass this parameter only                             
              staffAddress:
                type: string
                description: if want to change staffAddress then pass this parameter only
              staffPhoneNumber:
                type: string
                description: if want to change staffPhoneNumber then pass this parameter only 
              staffAadharNumber:
                type: string
                description: if want to change staffAadharNumber then pass this parameter only
              staffQualification:
                type: string
                description: if want to change staffQualification then pass this parameter only
      responses:
        "200":
          description: OK

  /api/v1/edit/student/form/photo/{sid}:
    patch:
      tags:
        - Edit and Delete (Institute Department, Staff, student and user member )
      summary: Edit form photo of student form by student Side
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: sid 
          required: true
          schema:
            type: string
          description: The student  ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload form profile photo          
      responses:
        "200":
          description: OK

  /api/v1/edit/student/form/detail/{sid}:
    patch:
      tags:
        - Edit and Delete (Institute Department, Staff, student and user member )
      summary: Edit student form details by Class Teacher
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: sid 
          required: true
          schema:
            type: string
          description: The student  ID
        - in: body
          name: body
          schema:
            type: object
            properties:
              studentFirstName:
                type: string
                description: if want to change studentFirstName then pass this parameter only
              studentMiddleName:
                type: string
                description: if want to change studentMiddleName then pass this parameter only
              studentLastName:
                type: string
                description: if want to change studentLastName then pass this parameter only                          
              studentDOB:
                type: string
                description: if want to change studentDOB then pass this parameter only
              studentGender:
                type: string
                description: if want to change studentGender then pass this parameter only
              studentNationality:
                type: string
                description: if want to change studentNationality then pass this parameter only
              studentMTongue:
                type: string
                description: if want to change studentMTongue then pass this parameter only
              studentMothersName:
                type: string
                description: if want to change studentMothersName then pass this parameter only                             
              studentCast:
                type: string
                description: if want to change studentCast then pass this parameter only
              studentCastCategory:
                type: string
                description: if want to change studentCastCategory then pass this parameter only                
              studentReligion:
                type: string
                description: if want to change studentReligion then pass this parameter only
              studentBirthPlace:
                type: string
                description: if want to change studentBirthPlace then pass this parameter only
              studentBirthPlace:
                type: string
                description: if want to change studentBirthPlace then pass this parameter only
              studentState:
                type: string
                description: if want to change studentState then pass this parameter only                             
              studentAddress:
                type: string
                description: if want to change studentAddress then pass this parameter only
              studentPhoneNumber:
                type: string
                description: if want to change studentPhoneNumber then pass this parameter only 
              studentAadharNumber:
                type: string
                description: if want to change studentAadharNumber then pass this parameter only
              studentParentsName:
                type: string
                description: if want to change studentParentsName then pass this parameter only  
              studentParentsPhoneNumber:
                type: string
                description: if want to change studentParentsPhoneNumber then pass this parameter only                          
      responses:
        "200":
          description: OK

  /api/v1/edit/student/remove/{sid}:
    patch:
      tags:
        - Edit and Delete (Institute Department, Staff, student and user member )
      summary: Remove student from class by Class Teacher
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: sid 
          required: true
          schema:
            type: string
          description: The student  ID
      responses:
        "200":
          description: OK


  /api/v1/user/post/edit/comment/{cid}:
    patch:
      tags:
        - Comment Edit and Delete (API)
      summary: One Comment edit -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is comment id
        - in: body
          name: body
          schema:
            type: object
            required:
              - commentDescription
            properties:
              commentDescription:
                type: string
                description: Type here comments
      responses:
        "200":
          description: OK
    delete:
      tags:
        - Comment Edit and Delete (API)
      summary:  One Comment delete -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Comment id
      responses:
        "200":
          description: OK

  /api/v1/user/post/edit/comment/relpy/{cid}:
    patch:
      tags:
        - Comment Edit and Delete (API)
      summary: One Reply Comment edit -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Reply comment id
        - in: body
          name: body
          schema:
            type: object
            required:
              - repliedComment
            properties:
              repliedComment:
                type: string
                description: Type here comments
      responses:
        "200":
          description: OK
    delete:
      tags:
        - Comment Edit and Delete (API)
      summary:  One Reply Comment delete -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Comment id
      responses:
        "200":
          description: OK


  /api/v1/ins/post/edit/comment/{cid}:
    patch:
      tags:
        - Comment Edit and Delete (API)
      summary: One Comment edit -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is comment id
        - in: body
          name: body
          schema:
            type: object
            required:
              - commentDescription
            properties:
              commentDescription:
                type: string
                description: Type here comments
      responses:
        "200":
          description: OK
    delete:
      tags:
        - Comment Edit and Delete (API)
      summary:  One Comment delete -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Comment id
      responses:
        "200":
          description: OK

  /api/v1/ins/post/edit/comment/relpy/{cid}:
    patch:
      tags:
        - Comment Edit and Delete (API)
      summary: One Reply Comment edit -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Reply comment id
        - in: body
          name: body
          schema:
            type: object
            required:
              - repliedComment
            properties:
              repliedComment:
                type: string
                description: Type here comments
      responses:
        "200":
          description: OK
    delete:
      tags:
        - Comment Edit and Delete (API)
      summary:  One Reply Comment delete -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Comment id
      responses:
        "200":
          description: OK

  /api/v1/post/question/edit/answer/{aid}:
    patch:
      tags:
        - Comment Edit and Delete (API)
      summary: One Answer | Repost edit -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is  answer id
        - in: body
          name: body
          schema:
            type: object
            required:
              - answerContent
            properties:
              answerContent:
                type: string
                description: Type here answer
      responses:
        "200":
          description: OK

  /api/v1/post/question/edit/answer/reply/{aid}:
    patch:
      tags:
        - Comment Edit and Delete (API)
      summary: One Answer Reply edit -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Reply answer id
        - in: body
          name: body
          schema:
            type: object
            required:
              - answerReplyContent
            properties:
              answerReplyContent:
                type: string
                description: Type here reply answer
      responses:
        "200":
          description: OK
    delete:
      tags:
        - Comment Edit and Delete (API)
      summary:  One Reply Answer delete -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Reply answer id
      responses:
        "200":
          description: OK

# fot the daily subject side update
  /api/v1/dailyupdate/subject/{sid}:
    get:
      tags:
        - Daily Update Related ALL Api (Subject Teacher)
      summary: It is give all daily updates in Subject Teacher side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular subject id    
        - in: query
          name: page
          type: integer
          description: pass the page number
        - in: query
          name: limit
          type: integer
          description: pass the limit one time how many item you want             
      responses:
        "200":
          description: OK
    post:
      tags:
        - Daily Update Related ALL Api (Subject Teacher)
      summary: It is Cretae daily update by the Subject teacher side for the students
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular subject id      
        - in: body
          name: body
          schema:
            type: object
            properties:
              date:
                type: date
                required:  true
                description: here type the daily update date
              updateDescription:
                type: string
                required:  true
                description: here give the daily update updateDescription
              arr:
                type: array
                description: Enter Array of Object Id's (Chapter Topic)
                required: true
              rec_status:
                type: string
                description: Enter Status ("Lecture" || "Practical" || "Tutorial")
                required: true
              files:
                type: array
                required:  true
                description: here list of all files
                items:
                  type: file
                  description: this is one file
      responses:
        "200":
          description: OK
    patch:
      tags:
        - Daily Update Related ALL Api (Subject Teacher)
      summary: It is Cretae daily update by the Subject teacher side for the students
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular daily update id      
        - in: body
          name: body
          schema:
            type: object
            properties:
              updateDescription:
                type: string
                required:  true
                description: here give the daily update updateDescription
              deleteImage:
                type: array
                required:  true
                description: here list of all files
                items:
                  type: string
                  description: this is one file aws key
              files:
                type: array
                required:  true
                description: here list of all files
                items:
                  type: file
                  description: this is one file                  
      responses:
        "200":
          description: OK

  /api/v1/dailyupdate/student/{sid}:
    get:
      tags:
        - Daily Update Related ALL Api (Subject Teacher)
      summary: It is give all daily updates in Student side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular student id    
        - in: query
          name: page
          type: integer
          description: pass the page number
        - in: query
          name: limit
          type: integer
          description: pass the limit one time how many item you want  
        - in: query
          name: subjectId
          type: string
          description: pass here subject id to show daily update subject wise                       
      responses:
        "200":
          description: OK
# fot the dynamic form api and previous year report
  /api/v1/ins/{id}/student/form:
    get:
      tags:
        - Dynamic form Related ALL Api (Institute Side)
      summary: It is give student form boolean in (Institute Side side, where need use this)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: It is particular Institute id    
      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/staff/form:
    get:
      tags:
        - Dynamic form Related ALL Api (Institute Side)
      summary: It is give staff form boolean in (Institute Side side, where need use this)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: It is particular institute id    
      responses:
        "200":
          description: OK
  /api/v1/ins/{id}/form/setting/update:
    patch:
      tags:
        - Dynamic form Related ALL Api (Institute Side)
      summary: It is update form boolean of staff and student by institute side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: It is particular Institute id      
        - in: body
          name: body
          schema:
            type: object
            properties:
              staffFormSetting:
                type: object
                required:  true
                description: here pass all staff form setting boolean
                properties:
                  staffNationality:
                    type: boolean
                    description: here pass value "true" or "false"
                  staffMTongue:
                    type: boolean
                    description: here pass value "true" or "false"
                  staffMotherName:
                    type: boolean
                    description: here pass value "true" or "false"
                  staffCast:
                    type: boolean
                    description: here pass value "true" or "false"
                  staffCastCategory:
                    type: boolean
                    description: here pass value "true" or "false"
                  staffReligion:
                    type: boolean
                    description: here pass value "true" or "false"
                  staffBirthPlace:
                    type: boolean
                    description: here pass value "true" or "false"
                  staffDistrict:
                    type: boolean
                    description: here pass value "true" or "false"
                  staffState:
                    type: boolean
                    description: here pass value "true" or "false"
                  staffAddress:
                    type: boolean
                    description: here pass value "true" or "false"
                  staffPhoneNumber:
                    type: boolean
                    description: here pass value "true" or "false"
                  staffAadharNumber:
                    type: boolean
                    description: here pass value "true" or "false"
                  staffQualification:
                    type: boolean
                    description: here pass value "true" or "false"
                  staffAadharFrontCard:
                    type: boolean
                    description: here pass value "true" or "false"
                  staffAadharBackCard:
                    type: boolean
                    description: here pass value "true" or "false"
                  staffPanNumber:
                    type: boolean
                    description: here pass value "true" or "false"
                  staffBankDetails:
                    type: boolean
                    description: here pass value "true" or "false"
                  staffUpiId:
                    type: boolean
                    description: here pass value "true" or "false"
                  staffHeight:
                    type: boolean
                    description: here pass value "true" or "false"
                  staffWeight:
                    type: boolean
                    description: here pass value "true" or "false"
                  staffBMI:
                    type: boolean
                    description: here pass value "true" or "false"                                                      
                  staffCasteCertificate:
                    type: boolean
                    description: here pass value "true" or "false"      
              studentFormSetting:
                type: object
                required:  true
                description: here pass all student form setting boolean
                properties:
                  studentNationality:
                    type: boolean
                    description: here pass value "true" or "false"
                  studentMTongue:
                    type: boolean
                    description: here pass value "true" or "false"
                  studentMotherName:
                    type: boolean
                    description: here pass value "true" or "false"
                  studentCast:
                    type: boolean
                    description: here pass value "true" or "false"
                  studentCastCategory:
                    type: boolean
                    description: here pass value "true" or "false"
                  studentReligion:
                    type: boolean
                    description: here pass value "true" or "false"
                  studentBirthPlace:
                    type: boolean
                    description: here pass value "true" or "false"
                  studentDistrict:
                    type: boolean
                    description: here pass value "true" or "false"
                  studentState:
                    type: boolean
                    description: here pass value "true" or "false"
                  studentAddress:
                    type: boolean
                    description: here pass value "true" or "false"
                  studentPhoneNumber:
                    type: boolean
                    description: here pass value "true" or "false"
                  studentAadharNumber:
                    type: boolean
                    description: here pass value "true" or "false"
                  studentAadharFrontCard:
                    type: boolean
                    description: here pass value "true" or "false"
                  studentAadharBackCard:
                    type: boolean
                    description: here pass value "true" or "false"
                  studentPanNumber:
                    type: boolean
                    description: here pass value "true" or "false"
                  studentBankDetails:
                    type: boolean
                    description: here pass value "true" or "false"
                  studentCasteCertificate:
                    type: boolean
                    description: here pass value "true" or "false"
                  studentParentsName:
                    type: boolean
                    description: here pass value "true" or "false"
                  studentParentsPhoneNumber:
                    type: boolean
                    description: here pass value "true" or "false"
                  studentHeight:
                    type: boolean
                    description: here pass value "true" or "false"
                  studentWeight:
                    type: boolean
                    description: here pass value "true" or "false"
                  studentBMI:
                    type: boolean
                    description: here pass value "true" or "false"                     
      responses:
        "200":
          description: OK

  /api/v1/edit/student/{sid}/previous:
    get:
      tags:
        - Student Previous Year Related ALL Api (Student Side)
      summary: It is give list of previous year of student records (Student Side, where need use this)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Student id    
      responses:
        "200":
          description: OK

  /api/v1/edit/student/{pid}/previous/report:
    get:
      tags:
        - Student Previous Year Related ALL Api (Student Side)
      summary: It is give student previous year report card (Student Side, where need use this)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid
          required: true
          type: string
          description: It is particular student previous year id    
      responses:
        "200":
          description: OK
        
# Admission Admin Module API Documentation

  /api/v1/admission/ins/{id}/staff/{sid}:
    post:
      tags:
        - Admission Admin Module Query
      summary: Assign and Activate Admission Admin Module By The Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id 
        - in: path
          name: sid
          required: true
          type: string
          description: This is staff id 
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/dashboard/query:
    get:
      tags:
        - Admission Admin Module Query
      summary: Get Admission All Details (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Admission id 
        - in: path
          name: mod_id
          required: true
          type: string
          description: This is Moderator id 
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/all/ongoing/application:
    get:
      tags:
        - Admission Admin Module Query
      summary: Get All Ongoing Application (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Admission id 
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit Count 
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/all/completed/application:
    get:
      tags:
        - Admission Admin Module Query
      summary: Get All Completed Application (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Admission id 
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit Count 
      responses:
        "200":
          description: OK


  /api/v1/admission/{aid}/application/query:
    get:
      tags:
        - Admission Admin Module Query
      summary: Get One Application Detail Query (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Application id  
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/new/application:
    post:
      tags:
        - Admission Admin Module Query
      summary: Create New Application in Admission Admin & Shared a post at all users (verified)
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Admission id 
        - in: formData
          name: file
          type: file
          required: true
          description: upload your application photo
        - in: formData
          name: applicationName
          type: string
          required: true
          description: Enter Your Application Name
        - in: formData
          name: applicationDepartment
          type: string
          required: true
          description: Enter Department Id
        - in: formData
          name: applicationBatch
          type: string
          required: true
          description: Enter Batch Id
        - in: formData
          name: applicationSeats
          type: string
          required: true
          description: Enter Application Seats Count
        - in: formData
          name: applicationType
          type: string
          required: true
          description: Enter Application Type - (Plain Application)
        - in: formData
          name: applicationAbout
          type: string
          required: true
          description: Enter Application Info
        - in: formData
          name: applicationStartDate
          type: string
          required: true
          description: Enter Application Start Date
        - in: formData
          name: applicationEndDate
          type: string
          required: true
          description: Enter Application End Date
        - in: formData
          name: admissionFee
          type: number
          required: true
          description: Enter Admission Fee
        - in: formData
          name: admissionProcess
          type: string
          required: true
          description: Enter Admission Process
        - in: formData
          name: gstSlab
          type: number
          required: false
          description: Enter GST Number Percentage
        - in: formData
          name: gst_number
          type: string
          required: false
          description: Enter GST Number
        - in: formData
          name: business_name
          type: string
          required: false
          description: Enter Business name
        - in: formData
          name: business_address
          type: string
          required: false
          description: Enter Business Address
      responses:
        "200":
          description: OK

  /api/v1/admission/{id}/application/list/array:
    get:
      tags:
        - Admission Admin Module Query
      summary: Get At Institute Profile Search All New Ongoing Application (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id 
        - in: query
          name: page
          required: true
          type: string
          description: This is page count
        - in: query
          name: limit
          required: true
          type: string
          description: This is limit count 
      responses:
        "200":
          description: OK

  /api/v1/admission/{uid}/user/{aid}/apply:
    post:
      tags:
        - Admission Admin Module Query
      summary: User as apply on New Application Student joining form -(verified )
      produces:
        - application/json
      consumes:
        - multipart/form-data
      parameters:
        - in: path
          name: uid
          required: true
          type: string
          description: This is user id which apply to institute as student
        - in: path
          name: aid
          required: true
          type: string
          description: This is application id which is choose by user to apply for as student
        - in: formData
          name: file
          type: file
          required: true
          description: upload your student profile photo
        - in: formData
          name: studentCode
          type: string
          required: true
          description: This is student code to join class which provided by the class Teacher
        - in: formData
          name: studentFirstName
          type: string
          required: true
          description: student first name
        - in: formData
          name: studentMiddleName
          type: string
          required: true
          description: student middle name
        - in: formData
          name: studentLastName
          type: string
          required: true
          description: student last name
        - in: formData
          name: studentDOB
          type: string
          required: true
          description: student studentDOB
        - in: formData
          name: studentGender
          type: string
          required: true
          description: student studentGender
        - in: formData
          name: studentNationality
          type: string
          required: true
          description: student studentNationality
        - in: formData
          name: studentMTongue
          type: string
          required: true
          description: student studentMTongue
        - in: formData
          name: studentMothersName
          type: string
          required: true
          description: student studentMotherName
        - in: formData
          name: studentCast
          type: string
          required: true
          description: student studentCast
        - in: formData
          name: studentCastCategory
          type: string
          required: true
          description: student studentCastCategory
        - in: formData
          name: studentReligion
          type: string
          required: true
          description: student studentReligion
        - in: formData
          name: studentBirthPlace
          type: string
          required: true
          description: student studentBirthPlace
        - in: formData
          name: studentDistrict
          type: string
          required: true
          description: student studentDistrict
        - in: formData
          name: studentState
          type: string
          required: true
          description: student studentState
        - in: formData
          name: studentAddress
          type: string
          required: true
          description: student studentAddress
        - in: formData
          name: studentPhoneNumber
          type: string
          required: true
          description: student studentPhoneNumber
        - in: formData
          name: studentAadharNumber
          type: string
          required: true
          description: student studentAadharNumber
        - in: formData
          name: studentParentsName
          type: string
          required: true
          description: student studentParentsName
        - in: formData
          name: studentParentsPhoneNumber
          type: string
          required: true
          description: student studentParentsPhoneNumber
        - in: formData
          name: file
          type: file
          required: true
          description: upload your addhar card front side photo  
        - in: formData
          name: file
          type: file
          required: true
          description: upload your addhar card back side photo     
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/request/application:
    get:
      tags:
        - Admission Admin Module Query
      summary: Get All Receieved Application (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Application id 
        - in: query
          name: page
          required: true
          type: string
          description: This is page count
        - in: query
          name: limit
          required: true
          type: string
          description: This is limit count 
        - in: query
          name: search
          required: false
          type: string
          description: This Search Query
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/selected/application:
    get:
      tags:
        - Admission Admin Module Query
      summary: Get All Selected Application (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Application id 
        - in: query
          name: page
          required: true
          type: string
          description: This is page count
        - in: query
          name: limit
          required: true
          type: string
          description: This is limit count 
        - in: query
          name: search
          required: false
          type: string
          description: This Search Query
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/confirmed/application:
    get:
      tags:
        - Admission Admin Module Query
      summary: Get All Confirmed Application (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Application id 
        - in: query
          name: page
          required: true
          type: string
          description: This is page count
        - in: query
          name: limit
          required: true
          type: string
          description: This is limit count 
        - in: query
          name: search
          required: false
          type: string
          description: This Search Query
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/allotted/application:
    get:
      tags:
        - Admission Admin Module Query
      summary: Get All Allotted Application (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Application id 
        - in: query
          name: page
          required: true
          type: string
          description: This is page count
        - in: query
          name: limit
          required: true
          type: string
          description: This is limit count 
        - in: query
          name: search
          required: false
          type: string
          description: This Search Query
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/cancelled/application:
    get:
      tags:
        - Admission Admin Module Query
      summary: Get All Cancelled Application (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Application id 
        - in: query
          name: page
          required: true
          type: string
          description: This is page count
        - in: query
          name: limit
          required: true
          type: string
          description: This is limit count 
        - in: query
          name: search
          required: false
          type: string
          description: This Search Query
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/confirmed/application/all/payload:
    get:
      tags:
        - Admission Admin Module Query
      summary: Get All Confirmed Application (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Application id 
        - in: query
          name: search
          required: false
          type: string
          description: This Search Query
      responses:
        "200":
          description: OK

  /api/v1/admission/{sid}/student/{aid}/select:
    post:
      tags:
        - Admission Admin Module Query
      summary: Mark Application Select by the Admission Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id 
        - in: path
          name: aid
          required: true
          type: string
          description: This is Application id 
        - in: body
          name: body
          schema:
            type: object
            required:
              - fee_struct
            properties:
              fee_struct:
                type: string
                description: Enter Fee Structure Id
      responses:
        "200":
          description: OK

  /api/v1/admission/{sid}/student/{aid}/cancel/app:
    post:
      tags:
        - Admission Admin Module Query
      summary: Mark Student Application Cancel || Reject by the Admission Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id 
        - in: path
          name: aid
          required: true
          type: string
          description: This is Application id 
      responses:
        "200":
          description: OK

  /api/v1/admission/{sid}/student/pay/mode/{aid}/apply/status/{statusId}:
    post:
      tags:
        - Admission Admin Module Query
      summary: Student Confirm Admission on selecting payment mode either online || offline (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id 
        - in: path
          name: aid
          required: true
          type: string
          description: This is Application id 
        - in: path
          name: statusId
          required: true
          type: string
          description: This is Application Status Id where cancel and confirm buttons are visible
      responses:
        "200":
          description: OK

  
  /api/v1/admission/{sid}/student/{aid}/pay/offline/confirm:
    post:
      tags:
        - Admission Admin Module Query
      summary: Mark confirm seats by Admission Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id 
        - in: path
          name: aid
          required: true
          type: string
          description: This is Application id
        - in: body
          name: body
          schema:
            type: object
            required:
              - amount
            properties:
              amount:
                type: number
                description: Enter amount
      responses:
        "200":
          description: OK

  /api/v1/admission/{sid}/student/{aid}/pay/refund:
    post:
      tags:
        - Admission Admin Module Query
      summary: Cancel One Student Admission seats by Admission Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id 
        - in: path
          name: aid
          required: true
          type: string
          description: This is Application id
        - in: body
          name: body
          schema:
            type: object
            required:
              - amount
            properties:
              amount:
                type: number
                description: Enter amount
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/application/class:
    get:
      tags:
        - Admission Admin Module Query
      summary: Get All Classes of New Application Batch (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Application id 
        - in: query
          name: page
          required: true
          type: string
          description: This is page count
        - in: query
          name: limit
          required: true
          type: string
          description: This is limit count 
      responses:
        "200":
          description: OK

  /api/v1/admission/{sid}/student/{aid}/allot/class/{cid}:
    post:
      tags:
        - Admission Admin Module Query
      summary: Class Allot to Student by Admission Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id 
        - in: path
          name: aid
          required: true
          type: string
          description: This is Application id
        - in: path
          name: cid
          required: true
          type: string
          description: This is class id
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/application/complete:
    patch:
      tags:
        - Admission Admin Module Query
      summary: Mark as New Ongoing Application to be Complete (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Application id 
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/all/remaining/array:
    get:
      tags:
        - Admission Admin Module Query
      summary: Get At Remaining Fee Array of Student (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Admission id 
        - in: query
          name: page
          required: true
          type: string
          description: This is page count
        - in: query
          name: limit
          required: true
          type: string
          description: This is limit count 
      responses:
        "200":
          description: OK

  /api/v1/admission/{sid}/student/view/fee:
    get:
      tags:
        - Admission Admin Module Query
      summary: View one student remaining fee (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id 
      responses:
        "200":
          description: OK
  
  /api/v1/admission/{aid}/paid/remaining/fee/{sid}/student/{appId}:
    post:
      tags:
        - Admission Admin Module Query
      summary: Mark Remaining Fee paid by Admission Admin + add body content (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Admission id 
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id
        - in: path
          name: appId
          required: true
          type: string
          description: This is Application id
        - in: body
          name: body
          schema:
            type: object
            required:
              - amount
              - mode
              - type
            properties:
              amount:
                type: number
                description: Enter amount
              mode:
                type: string
                description: Enter payment mode ("Online" | "Offline" | "Exempted")
              type:
                type: string
                description: Enter Installment Value
      responses:
        "200":
          description: OK

  /api/v1/admission/{statusId}/status/cancel/app/{aid}/student/{sid}:
    patch:
      tags:
        - Admission Admin Module Query
      summary: Cancel Admission At Student Side (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: statusId
          required: true
          type: string
          description: This is Status Id
        - in: path
          name: aid
          required: true
          type: string
          description: This is Application Id
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student Id
      responses:
        "200":
          description: OK


# FOR NEW ATTENDANCE RELATED API

  /api/v1/attendance/class/{cid}/daywise:
    get:
      tags:
        - Student Attendance
      summary: give day wise details of week (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Class id
        - in: query
          name: status
          type: string
          description: here pass all week day one by one "Monday"           
      responses:
        "200":
          description: OK  
    patch:
      tags:
        - Student Attendance
      summary: give day wise details of week (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              day:
                type: string
                description: here pass day like "Monday" or "Tuesday"
                required: true
              from:
                type: string
                description: here pass time like "01:00 Pm"
                required: true
              to:
                type: string
                description: here pass time like "05:00 Pm"
                required: true
              half:
                type: string
                description: here pass time like "03:00 Pm"
                required: true                                
      responses:
        "200":
          description: OK

  /api/v1/attendance/class/{cid}/datewise:
    get:
      tags:
        - Student Attendance
      summary: give date wise details (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Class id
        - in: query
          name: status
          type: string
          description: here pass all week day one by one "Monday" 
        - in: query
          name: date
          type: string
          description: here pass date like 2022-09-23                   
      responses:
        "200":
          description: OK  
    patch:
      tags:
        - Student Attendance
      summary: give date wise details of week (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              date:
                type: string
                description: here pass date like 2022-09-23
                required: true            
              day:
                type: string
                description: here pass day like "Monday" or "Tuesday"
                required: true
              from:
                type: string
                description: here pass time like "01:00 Pm"
                required: true
              to:
                type: string
                description: here pass time like "05:00 Pm"
                required: true
              half:
                type: string
                description: here pass time like "03:00 Pm"
                required: true                                
      responses:
        "200":
          description: OK


  /api/v1/attendance/department/{did}/daywise:
    get:
      tags:
        - Staff Attendance
      summary: give day wise details of week (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is department id
        - in: query
          name: status
          type: string
          description: here pass all week day one by one "Monday"           
      responses:
        "200":
          description: OK  
    patch:
      tags:
        - Staff Attendance
      summary: give day wise details of week (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is department Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              day:
                type: string
                description: here pass day like "Monday" or "Tuesday"
                required: true
              from:
                type: string
                description: here pass time like "01:00 Pm"
                required: true
              to:
                type: string
                description: here pass time like "05:00 Pm"
                required: true
              half:
                type: string
                description: here pass time like "03:00 Pm"
                required: true                                
      responses:
        "200":
          description: OK

  /api/v1/attendance/department/{did}/datewise:
    get:
      tags:
        - Staff Attendance
      summary: give date wise details (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is department id
        - in: query
          name: status
          type: string
          description: here pass all week day one by one "Monday" 
        - in: query
          name: date
          type: string
          description: here pass date like 2022-09-23                   
      responses:
        "200":
          description: OK  
    patch:
      tags:
        - Staff Attendance
      summary: give date wise details of week (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is department Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              date:
                type: string
                description: here pass date like 2022-09-23
                required: true            
              day:
                type: string
                description: here pass day like "Monday" or "Tuesday"
                required: true
              from:
                type: string
                description: here pass time like "01:00 Pm"
                required: true
              to:
                type: string
                description: here pass time like "05:00 Pm"
                required: true
              half:
                type: string
                description: here pass time like "03:00 Pm"
                required: true                                
      responses:
        "200":
          description: OK


  /api/v1/class/setting/{cid}/report:
    patch:
      tags:
        - Class Related Api
      summary: give detail of report setting (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              finalReport:
                type: boolean
                description: boolean like true or false
              attendance:
                type: boolean
                description: boolean like true or false
              behaviour:
                type: boolean
                description: boolean like true or false
              gradeMarks:
                type: boolean
                description: boolean like true or false
              aggregatePassingPercentage:
                type: integer
                description: here passing percentage
                                              
      responses:
        "200":
          description: OK

  /api/v1/batch/subject/{sid}/setting:
    patch:
      tags:
        - Subject Related Api
      summary: It is update subject teacher setting (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is subject Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              setting:
                type: object
                description: It is contain all related setting
                required: true
                properties:
                  subjectPassingMarks:
                    type: integer
                    description: here enter subject wise passing marks
                    required: true
      responses:
        "200":
          description: OK



# FOR TIMETABLE OF CLASS
  /api/v1/timetable/{cid}/day/timetable:
    get:
      tags:
        - Time Table Related API
      summary: give day wise time table schedule (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class id
        - in: query
          name: status
          type: string
          description: here pass all week day one by one "Monday"           
      responses:
        "200":
          description: OK  
    patch:
      tags:
        - Time Table Related API
      summary: Add day wise schedule of week (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              day:
                type: string
                description: here pass day like "Monday" or "Tuesday"
                required: true
              from:
                type: string
                description: here pass time like "01:00 Pm"
                required: true
              to:
                type: string
                description: here pass time like "05:00 Pm"
                required: true
              subjectId:
                type: string
                description: pass subject Id
                required: true                                
      responses:
        "200":
          description: OK

  /api/v1/timetable/{cid}/date/timetable:
    get:
      tags:
        - Time Table Related API
      summary: give date wise time table schedule (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class id
        - in: query
          name: status
          type: string
          description: here pass all week day one by one "Monday" 
        - in: query
          name: date
          type: string
          description: here pass date like 2022-09-19                   
      responses:
        "200":
          description: OK  
    patch:
      tags:
        - Time Table Related API
      summary: Change date wise schedule of week (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              date:
                type: string
                description: here pass date like 2022-09-23
                required: true            
              day:
                type: string
                description: here pass day like "Monday" or "Tuesday"
                required: true
              from:
                type: string
                description: here pass time like "01:00 Pm"
                required: true
              to:
                type: string
                description: here pass time like "05:00 Pm"
                required: true
              subjectId:
                type: string
                description: pass subject Id
                required: true                                
      responses:
        "200":
          description: OK

  /api/v1/timetable/staff/{sid}/schedule:
    get:
      tags:
        - Time Table Related API
      summary: Give list of schedule in staff that seen by institute (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Staff id
        - in: query
          name: status
          type: string
          description: here pass all week day one by one "Monday" 
        - in: query
          name: date
          type: string
          description: here pass date like 2022-09-19                   
      responses:
        "200":
          description: OK  
    patch:
      tags:
        - Time Table Related API
      summary: Change staff schedule by new staff if that staff is absent or leave (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is staff Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              date:
                type: string
                description: here pass date like 2022-09-23
                required: true            
              day:
                type: string
                description: here pass day like "Monday" or "Tuesday"
                required: true
              from:
                type: string
                description: here pass time like "01:00 Pm"
                required: true
              to:
                type: string
                description: here pass time like "05:00 Pm"
                required: true
              subjectId:
                type: string
                description: pass subject Id
                required: true  
              classId:
                type: string
                description: pass class Id
                required: true 
              replacedStaffId:
                type: string
                description: pass new staff Id that is present
                required: true                                                
      responses:
        "200":
          description: OK

  /api/v1/timetable/institute/{id}/allot/staff:
    get:
      tags:
        - Time Table Related API
      summary: Give list of staff that is free alloted time => by institute Side (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: query
          name: status
          type: string
          description: here pass all week day one by one "Monday" 
        - in: query
          name: date
          type: string
          description: here pass date like 2022-09-19   
        - in: query
          name: from
          type: string
          description: here pass "04:00 Pm"
        - in: query
          name: to
          type: string
          description: here pass "05:00 Pm"                           
      responses:
        "200":
          description: OK  

  /api/v1/timetable/staff/{sid}/schedule/list:
    get:
      tags:
        - Time Table Related API
      summary: Give list of schedule in staff side (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is staff id
        - in: query
          name: status
          type: string
          description: here pass all week day one by one "Monday" 
        - in: query
          name: date
          type: string
          description: here pass date like 2022-09-19   
      responses:
        "200":
          description: OK 

  /api/v1/timetable/student/{cid}/schedule/list:
    get:
      tags:
        - Time Table Related API
      summary: Give list of schedule in student side (Verified)
      consumes:
      - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class id
        - in: query
          name: status
          type: string
          description: here pass all week day one by one "Monday" 
        - in: query
          name: date
          type: string
          description: here pass date like 2022-09-19   
      responses:
        "200":
          description: OK 

# Dashboard All Platform Filter API

  /api/v1/feed/filter/by/learn:
    get:
      tags:
        - Platform All Feed Query
      summary: Get All Learn (Repost) (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: page
          required: true
          type: string
          description: This is page count
        - in: query
          name: limit
          required: true
          type: string
          description: This is limit count 
      responses:
        "200":
          description: OK

  /api/v1/feed/filter/by/answer:
    get:
      tags:
        - Platform All Feed Query
      summary: Get All Answer (Question) (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: page
          required: true
          type: string
          description: This is page count
        - in: query
          name: limit
          required: true
          type: string
          description: This is limit count 
        - in: query
          name: filter_by
          required: true
          type: string
          description: Filter by Trending Category
      responses:
        "200":
          description: OK

  /api/v1/feed/filter/by/date/collection/{aid}/query:
    get:
      tags:
        - Platform All Feed Query
      summary: Get Date Wise Collection + RSCAC TAB (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Application ID
        - in: query
          name: valid_date
          required: true
          type: string
          description: This is Date ("2023-01-01")
      responses:
        "200":
          description: OK

  /api/v1/feed/filter/by/participate:
    get:
      tags:
        - Platform All Feed Query
      summary: Get All Participate (Poll) (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: page
          required: true
          type: string
          description: This is page count
        - in: query
          name: limit
          required: true
          type: string
          description: This is limit count 
        - in: query
          name: filter_by
          required: true
          type: string
          description: Filter by Trending Category
      responses:
        "200":
          description: OK

  /api/v1/feed/filter/by/{id}/student:
    get:
      tags:
        - Platform All Feed Query
      summary: Get All Active Batch (Student Chart) - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute Id
        - in: query
          name: type
          required: true
          type: string
          description: Type ("All" || "Active") 
        - in: query
          name: role
          required: true
          type: string
          description: Type ("Gender" || "Caste") 
      responses:
        "200":
          description: OK

  /api/v1/feed/filter/by/{id}/staff:
    get:
      tags:
        - Platform All Feed Query
      summary: Get All (Staff Chart) - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute Id
        - in: query
          name: type
          required: true
          type: string
          description: Type ("All") 
        - in: query
          name: role
          required: true
          type: string
          description: Type ("Gender" || "Caste") 
      responses:
        "200":
          description: OK


# Recommendation API
  /api/v1/prod/access/all/recommendation/ins/user/by/{uid}:
    get:
      tags:
        - Recommendation API Query
      summary: Get Recommended Institute and User (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: uid
          required: true
          type: string
          description: This is User id 
        - in: query
          name: expand_search
          required: false
          type: number
          description: Enter a no. in km to expand your network
      responses:
        "200":
          description: OK

  /api/v1/prod/access/all/recommendation/post/app/{id}:
    get:
      tags:
        - Recommendation API Query
      summary: Get Recommended Admission App Post By Expand Area (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id 
        - in: query
          name: expand_search
          required: false
          type: number
          description: Enter a no. in km to expand your network
        - in: query
          name: post_query
          required: true
          type: number
          description: Enter a Post Id which is visible to user's near by expand area
      responses:
        "200":
          description: OK


# Reward Based Ads API
  /api/v1/prod/access/all/profile/{uid}/reward/ads:
    get:
      tags:
        - Reward Ads API Query
      summary: Get Ads Profile Count (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: uid
          required: true
          type: string
          description: This is User id 
        - in: query
          name: trigger_count
          required: false
          type: number
          description: Enter a no. for profile View Ads
        - in: query
          name: ads_display
          required: false
          type: string
          description: Enter a value for stop Ads "Trigger" before 6 times profile Open
      responses:
        "200":
          description: OK

# Sport & Arts Module API Documentation

  /api/v1/sport/arts/ins/{id}/staff/{sid}:
    post:
      tags:
        - Sport and Arts Module Query
      summary: Assign and Activate Sport and Arts Module By The Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id 
        - in: path
          name: sid
          required: true
          type: string
          description: This is staff id 
      responses:
        "200":
          description: OK

  /api/v1/sport/arts/detail/{id}:
    get:
      tags:
        - Sport and Arts Module Query
      summary: Get Sport Details (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Sport & Arts id 
      responses:
        "200":
          description: OK

  /api/v1/sport/arts/detail/{id}/event:
    get:
      tags:
        - Sport and Arts Module Query
      summary: Get Sport All Events (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Sport & Arts id
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page No.
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
        - in: query
          name: status
          required: true
          type: string
          description: Enter Status ('Upcoming' || 'Completed')
      responses:
        "200":
          description: OK

  /api/v1/sport/arts/ins/{id}/sport/{sid}/class:
    post:
      tags:
        - Sport and Arts Module Query
      summary: Assign and Activate Sport and Arts Module Class By The Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id 
        - in: path
          name: sid
          required: true
          type: string
          description: This is staff id 
      responses:
        "200":
          description: OK

  /api/v1/sport/arts/{sid}/event:
    post:
      tags:
        - Sport and Arts Module Query
      summary: Create New Event at Sport and Arts (verified)
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Sport & Arts id 
        - in: formData
          name: file
          type: file
          required: true
          description: upload your event photo
        - in: formData
          name: sportEventName
          type: string
          required: true
          description: Enter Your Sport Event Name
        - in: formData
          name: sportEventCategory
          type: string
          required: true
          description: Enter Your Sport Event Category
        - in: formData
          name: sportEventCategoryLevel
          type: string
          required: true
          description: Enter Your Sport Event Category ("Final" || "Other")
        - in: formData
          name: sportEventPlace
          type: string
          required: true
          description: Enter Sport Event Place
        - in: formData
          name: sportEventDate
          type: string
          required: true
          description: Enter Sport Event Date
        - in: formData
          name: sportEventDescription
          type: string
          required: true
          description: Enter Sport Event Description
      responses:
        "200":
          description: OK

  /api/v1/sport/arts/event/detail/{id}:
    get:
      tags:
        - Sport and Arts Module Query
      summary: Get Sport Event Details (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Sport Event id 
      responses:
        "200":
          description: OK

  /api/v1/sport/arts/event/{eid}/match:
    get:
      tags:
        - Sport and Arts Module Query
      summary: Get Sport Event All Match (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: eid
          required: true
          type: string
          description: This is Sport Event id 
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page No.
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
      responses:
        "200":
          description: OK


  /api/v1/sport/arts/class/{cid}/student/add:
    post:
      tags:
        - Sport and Arts Module Query
      summary: Add Student by Sport class Admin (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              request:
                type: array
                description: give the arrays of the Student Id for Sports Class
                required: true 
                items:
                  type: string
                  description: It is Student Id                                              
      responses:
        "200":
          description: OK


  /api/v1/sport/arts/class/{cid}/student/remove:
    post:
      tags:
        - Sport and Arts Module Query
      summary: Remove Student by Sport class Admin (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              remove:
                type: array
                description: give the arrays of the Student Id for Sports Class
                required: true 
                items:
                  type: string
                  description: It is Student Id                                              
      responses:
        "200":
          description: OK


  /api/v1/sport/arts/class/detail/{cid}:
    get:
      tags:
        - Sport and Arts Module Query
      summary: Get Sport Class Details (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Sport Class id 
      responses:
        "200":
          description: OK

  /api/v1/sport/arts/class/{cid}/team:
    post:
      tags:
        - Sport and Arts Module Query
      summary: Create New Team at Sport and Arts Class (verified)
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: formData
          name: file
          type: file
          required: true
          description: upload your event photo
        - in: formData
          name: sportClassTeamName
          type: string
          required: true
          description: Enter Sport Class Team Name
        - in: formData
          name: cid
          type: string
          required: true
          description: Enter Sport Class Id
        - in: formData
          name: captain
          type: string
          required: true
          description: Enter Student Id select captain
        - in: formData
          name: request
          type: array
          required: true
          description: Enter Array of Student Id
          items:
            type: string
            description: It is Student Id
      responses:
        "200":
          description: OK

  /api/v1/sport/arts/event/{eid}/match/intra:
    post:
      tags:
        - Sport and Arts Module Query
      summary: Add Intra Match at Event (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: eid
          required: true
          type: string
          description: This is Sport Event Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              sportEventMatchName:
                type: string
                description: Enter Sport Event Match Name
                required: true 
              sportEventMatchCategory:
                type: string
                description: Enter Sport Event Match Category
                required: true 
              sportEventMatchDate:
                type: string
                description: Enter Sport Event Match Date
                required: true 
              sportEventMatchCategoryLevel:
                type: string
                description: Enter Sport Event Match Category Level
                required: true  
              sportEventMatchClass:
                type: string
                description: Enter Sport Event Match Class Id
                required: true  
              sportInPlayer1:
                type: string
                description: Enter Sport Event Match Student Id
                required: false  
              sportInPlayer2:
                type: string
                description: Enter Sport Event Match Student Id
                required: false 
              sportTPlayer1:
                type: string
                description: Enter Sport Event Match Team Id
                required: false 
              sportTPlayer2:
                type: string
                description: Enter Sport Event Match Team Id
                required: false  
              sportPlayerFree:
                type: array
                description: give the arrays of the Student Id for Sports Event
                required: false
                items:
                  type: string
                  description: It is Student Id                                       
      responses:
        "200":
          description: OK

  
  /api/v1/sport/arts/event/{eid}/match/inter:
    post:
      tags:
        - Sport and Arts Module Query
      summary: Add Inter Match at Event (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: eid
          required: true
          type: string
          description: This is Sport Event Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              sportEventMatchName:
                type: string
                description: Enter Sport Event Match Name
                required: true 
              sportEventMatchCategory:
                type: string
                description: Enter Sport Event Match Category
                required: true 
              sportEventMatchDate:
                type: string
                description: Enter Sport Event Match Date
                required: true 
              sportEventMatchCategoryLevel:
                type: string
                description: Enter Sport Event Match Category Level
                required: true  
              sportEventMatchClass:
                type: string
                description: Enter Sport Event Match Class Id
                required: true  
              sportPlayer:
                type: string
                description: Enter Sport Event Match Student Name
                required: false  
              sportTeam:
                type: string
                description: Enter Sport Event Match Team Name
                required: false 
              sportPlayerFree:
                type: array
                description: give the arrays of the Student Id for Sports Event
                required: false
                items:
                  type: string
                  description: It is Student Name                                       
      responses:
        "200":
          description: OK


  /api/v1/sport/arts/match/detail/{mid}:
    get:
      tags:
        - Sport and Arts Module Query
      summary: Get Sport Event Match Details (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: mid
          required: true
          type: string
          description: This is Sport Event Match id 
      responses:
        "200":
          description: OK

  
  /api/v1/sport/arts/match/{mid}/update/intra/individual:
    post:
      tags:
        - Sport and Arts Module Query
      summary: Update Sport Event Intra Match Result Update (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: mid
          required: true
          type: string
          description: This is Sport Event Match id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              studentWinner:
                type: string
                description: This is Sport Winner Student id 
                required: true 
              studentRunner:
                type: string
                description: This is Sport Runner Student id 
                required: true 
      responses:
        "200":
          description: OK

  /api/v1/sport/arts/match/{mid}/update/inter/individual:
    post:
      tags:
        - Sport and Arts Module Query
      summary: Update Sport Event Inter Match Result Update (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: mid
          required: true
          type: string
          description: This is Sport Event Match id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              studentPlayer:
                type: string
                description: This is Sport Student Player Id
                required: true 
              studentRankTitle:
                type: string
                description: Select "Winner" || "Runner"
                required: true
              studentOpponentPlayer:
                type: string
                description: This is Sport Student Opponent Player Name
                required: true  
      responses:
        "200":
          description: OK

  /api/v1/sport/arts/match/{mid}/update/intra/team:
    post:
      tags:
        - Sport and Arts Module Query
      summary: Update Sport Event Intra Team Match Result Update (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: mid
          required: true
          type: string
          description: This is Sport Event Match id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              teamWinner:
                type: string
                description: This is Sport Team Winner Id
                required: true 
              teamRunner:
                type: string
                description: This is Sport Team Runner Id
                required: true  
      responses:
        "200":
          description: OK

  /api/v1/sport/arts/match/{mid}/update/inter/team:
    post:
      tags:
        - Sport and Arts Module Query
      summary: Update Sport Event Inter Team Match Result Update (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: mid
          required: true
          type: string
          description: This is Sport Event Match id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              teamPlayer:
                type: string
                description: This is Sport Team Id
                required: true 
              studentRankTitle:
                type: string
                description: Select "Winner" || "Runner"
                required: true
              teamOpponentPlayer:
                type: string
                description: This is Sport Team Opponent Name
                required: true  
      responses:
        "200":
          description: OK

  /api/v1/sport/arts/match/{mid}/update/intra/free:
    post:
      tags:
        - Sport and Arts Module Query
      summary: Update Sport Event Intra Free Match Result Update (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: mid
          required: true
          type: string
          description: This is Sport Event Match id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              studentWinner:
                type: string
                description: This is Sport Student Player Id
                required: true 
              studentRunner:
                type: string
                description: This is Sport Student Player Id
                required: true
              studentParticipants:
                type: array
                description: Array of String ["27924928934898349", "83779839989899"]
                items:
                  type: string
                  description: Enter Student Id
      responses:
        "200":
          description: OK


  /api/v1/sport/arts/match/{mid}/update/inter/free:
    post:
      tags:
        - Sport and Arts Module Query
      summary: Update Sport Event Inter Free Match Result Update (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: mid
          required: true
          type: string
          description: This is Sport Event Match id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              studentPlayer:
                type: string
                description: This is Sport Student Player Id
                required: true 
              studentRankTitle:
                type: string
                description: Enter "Winner" || "Runner"
                required: true
              studentOpponentPlayer:
                type: string
                description: This is Sport Opponent Student Player Id
                required: true
              studentParticipants:
                type: array
                description: Array of String ["27924928934898349", "83779839989899"]
                items:
                  type: string
                  description: Enter Student Id
      responses:
        "200":
          description: OK

  /api/v1/sport/arts/detail/{id}/all/class:
    get:
      tags:
        - Sport and Arts Module Query
      summary: Get Sport All Classes (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Sport & Arts id
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page No.
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
      responses:
        "200":
          description: OK

  /api/v1/sport/arts/class/{cid}/all/student:
    get:
      tags:
        - Sport and Arts Module Query
      summary: Get Sport Classes All Student (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Sport & Arts Class id
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page No.
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
      responses:
        "200":
          description: OK

  /api/v1/sport/arts/class/{cid}/all/team:
    get:
      tags:
        - Sport and Arts Module Query
      summary: Get Sport Classes All Team (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Sport & Arts Class id
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page No.
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
      responses:
        "200":
          description: OK

  /api/v1/sport/arts/student/event/query/{sid}/all:
    get:
      tags:
        - Sport and Arts Module Query
      summary: One Student All Event in Extra-Skill (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id
      responses:
        "200":
          description: OK

  /api/v1/sport/arts/student/event/query/{sid}/all/match/{eid}:
    get:
      tags:
        - Sport and Arts Module Query
      summary: One Student One Event All Event Matches in Extra-Skill (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id
        - in: path
          name: eid
          required: true
          type: string
          description: This is Sport Event id
      responses:
        "200":
          description: OK

  /api/v1/sport/arts/student/class/{sid}/query:
    get:
      tags:
        - Sport and Arts Module Query
      summary: Get All Sport Classes Of One Student  (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page No.
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
      responses:
        "200":
          description: OK

  /api/v1/sport/arts/student/team/{cid}/query:
    get:
      tags:
        - Sport and Arts Module Query
      summary: One Student Team By One Sport Class  (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Sport Class id
        - in: query
          name: sid
          required: true
          type: string
          description: Enter Student Id
      responses:
        "200":
          description: OK
        

  /api/v1/sport/arts/team/{tid}/query:
    get:
      tags:
        - Sport and Arts Module Query
      summary: One Team Details (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: tid
          required: true
          type: string
          description: This is Sport Team id 
      responses:
        "200":
          description: OK

  /api/v1/sport/arts/{Student}/{Profile}:
    get:
      tags:
        - Sport and Arts Module Query
      summary: Points from Student Profile API (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
      responses:
        "200":
          description: OK

  
# Poll & Post Edit Query

  /api/v1/user/post/edit/{pid}:
    patch:
      tags:
        - Poll & Post Edit
      summary: One Text, Image, Question Post Update -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid
          required: true
          type: string
          description: This is Post id
        - in: formData
          name: postTitle
          type: string
          required: false
          description: Enter a post title for Text, Image
        - in: formData
          name: postDescription
          type: string
          required: false
          description: Enter a post desc for Text post
        - in: formData
          name: postQuestion
          type: string
          required: false
          description: Enter a question for Question Post
        - in: formData
          name: trend_category
          type: string
          required: false
          description: Enter a question category for Question Post
        - in: formData
          name: deleteImage
          type: array
          required: false
          description: Enter a image key of replace 
        - in: formData
          name: file
          type: array
          required: false
          description: Enter a new image 
      responses:
        "200":
          description: OK

  /api/v1/poll/edit/{pid}:
    patch:
      tags:
        - Poll & Post Edit
      summary: One Poll Update -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid
          required: true
          type: string
          description: This is Post id
        - in : body
          name: body
          schema:
            type: object
            properties:
              poll_question:
                type: string
                description: This is for Question Poll
                required: false
              trend_category:
                type: string
                description: This is for Question post category
                required: false
              pollAnswer:
                type: array
                description: Array of Object with poll answer id & content [{"oid": "8389", "content": "here"}, {"oid": "8389", "content": "here"}]
                items:
                  type: string
                  description: Enter Poll Answer Id & Content
      responses:
        "200":
          description: OK

  /api/v1/user/post/{pid}/query:
    get:
      tags:
        - Poll & Post Edit
      summary: One Post detail (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid
          required: true
          type: string
          description: This is Post Id
      responses:
        "200":
          description: OK

# Featured HashTag
  /api/v1/hashtag/{hid}/query:
    get:
      tags:
        - Featured HashTag Query
      summary: One HashTag detail (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: hid
          required: true
          type: string
          description: This is Hashtag Id
      responses:
        "200":
          description: OK

  /api/v1/hashtag/{hid}/query/post:
    get:
      tags:
        - Featured HashTag Query
      summary: One HashTag detail & Post (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: hid
          required: true
          type: string
          description: This is Hashtag Id
      responses:
        "200":
          description: OK

  /api/v1/hashtag/all/array:
    get:
      tags:
        - Featured HashTag Query
      summary: All HashTag By Follower's (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: page
          required: true
          type: string
          description: Enter page no.
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit No.
      responses:
        "200":
          description: OK

  /api/v1/hashtag/follow:
    patch:
      tags:
        - Featured HashTag Query
      summary: Follow & UnFollow HashTag By User (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: hid
          required: true
          type: string
          description: This is Hashtag Id
      responses:
        "200":
          description: OK

#Election Events
  /api/v1/election/event/new/{did}:
    post:
      tags:
        - Election Event Query
      summary: Create new election event (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is Department Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              election_position:
                type: string
                description: Enter election -> President Election 2027 
                required: true
              election_visible:
                type: string
                description: visible ("Only Institute" || "Only Department")
                required: true
              date:
                type: string
                description: Enter Date ("2022-11-05")
                required: true
      responses:
        "200":
          description: OK

  /api/v1/election/event/{did}/all/query:
    get:
      tags:
        - Election Event Query
      summary: All Election Event Array of Department (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: Enter Department ID
        - in: query
          name: page
          required: true
          type: string
          description: Enter page no.
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit No.
      responses:
        "200":
          description: OK

  /api/v1/election/event/one/{eid}:
    get:
      tags:
        - Election Event Query
      summary: One Election Event Detail (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: eid
          required: true
          type: string
          description: Enter Election Event Id
      responses:
        "200":
          description: OK

  /api/v1/election/event/one/{eid}/all/candidate:
    get:
      tags:
        - Election Event Query
      summary: One Election Event All Candidate Detail (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: eid
          required: true
          type: string
          description: Enter Election Event Id
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
      responses:
        "200":
          description: OK

  /api/v1/election/event/{eid}/apply/{sid}:
    post:
      tags:
        - Election Event Query
      summary: One Student Apply at election event (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: eid
          required: true
          type: string
          description: This is Election Event Id
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              tagLine:
                type: string
                description: Enter Tag Line
                required: true
              description:
                type: string
                description: Enter Desc
                required: true
              members:
                type: array
                description: Array of String ["9898493898", "38989393898"]
                items:
                  type: string
                  description: Enter Student Id
      responses:
        "200":
          description: OK


  /api/v1/election/event/{eid}/status/{applyId}/candidate/{sid}:
    patch:
      tags:
        - Election Event Query
      summary: Election Event Status (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: eid
          required: true
          type: string
          description: Enter Election Event Id
        - in: path
          name: applyId
          required: true
          type: string
          description: Enter Election Event application Id
        - in: path
          name: sid
          required: true
          type: string
          description: Enter Student Id
        - in: query
          name: status
          required: true
          type: string
          description: Enter Status ("Approved" || "Rejected")
      responses:
        "200":
          description: OK

  /api/v1/election/event/{eid}/status/{applyId}/candidate/{sid}/vote/{nid}:
    patch:
      tags:
        - Election Event Query
      summary: One Vote One Nation (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: eid
          required: true
          type: string
          description: Enter Election Event Id
        - in: path
          name: applyId
          required: true
          type: string
          description: Enter Election Event application Id
        - in: path
          name: sid
          required: true
          type: string
          description: Enter Student Id
        - in: path
          name: nid
          required: true
          type: string
          description: Enter Student Notification Id
      responses:
        "200":
          description: OK

  /api/v1/election/event/{did}/one/institute:
    get:
      tags:
        - Election Event Query
      summary: One Election Event All Students List Detail (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: Enter Department Id
        - in: query
          name: search
          required: false
          type: string
          description: Enter Search Query
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
      responses:
        "200":
          description: OK


  /api/v1/election/event/all/{sid}/query:
    get:
      tags:
        - Election Event Query
      summary: One Student All Election Event List Detail (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: Enter Student Id
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
      responses:
        "200":
          description: OK

  /api/v1/election/event/department/{did}/setting:
    patch:
      tags:
        - Election Event Query
      summary: Department Head Update Election Event Date Setting Field (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: Enter Department Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              election_date_setting:
                type: object
                properties:
                  end_date:
                    type: number
                    description: Enter End Date Count
                    required: true
                  select_date:
                    type: number
                    description: Enter Select Date Count
                    required: true
                  campaign_date:
                    type: number
                    description: Enter Campaign Date Count
                    required: true
                  campaign_last_date:
                    type: number
                    description: Enter Campaign Last Date Count
                    required: true
                  vote_date:
                    type: number
                    description: Enter Vote Date Count
                    required: true
                  result_date:
                    type: number
                    description: Enter Result Date Count
                    required: true
      responses:
        "200":
          description: OK


  /api/v1/election/event/{sid}/query/one/election/{eid}:
    get:
      tags:
        - Election Event Query
      summary: One Student One Election Event List Detail (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: Enter Student Id
        - in: path
          name: eid
          required: true
          type: string
          description: Enter Election Id
      responses:
        "200":
          description: OK


#Participate Event
  /api/v1/participate/event/new/{did}:
    post:
      tags:
        - Participate Event Query
      summary: Create new Participate event (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is Department Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              event_name:
                type: string
                description: Enter Event Name 
                required: true
              date:
                type: string
                description: Enter Date ("2022-11-05")
                required: true
              lastDate:
                type: string
                description: Enter Last Date ("2022-11-07")
                required: true
              event_about:
                type: string
                description: Enter Event About
                required: true
              event_fee:
                type: number
                description: Enter Event Fee
                required: true
              event_fee_critiria:
                type: string
                description: Enter Fee Critiria ("Yes" || "No")
                required: true
              event_checklist_critiria:
                type: string
                description: Enter Fee Critiria ("Yes" || "No")
                required: true
              event_ranking_critiria:
                type: string
                description: Enter Fee Critiria ("Yes" || "No")
                required: true
              classes:
                type: array
                description: Array of String ["9898493898", "38989393898"]
                items:
                  type: string
                  description: Enter Class Id
      responses:
        "200":
          description: OK

  /api/v1/participate/event/all/query/{did}:
    get:
      tags:
        - Participate Event Query
      summary: All Participate Event Array (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: Enter Department ID
        - in: query
          name: page
          required: true
          type: string
          description: Enter page no.
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit No.
      responses:
        "200":
          description: OK

  /api/v1/participate/event/one/{pid}:
    get:
      tags:
        - Participate Event Query
      summary: One Participate Event Detail (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid
          required: true
          type: string
          description: Enter Participate Event Id
      responses:
        "200":
          description: OK

  /api/v1/participate/event/one/{pid}/student/array:
    get:
      tags:
        - Participate Event Query
      summary: All Participate Event Student List (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid
          required: true
          type: string
          description: Enter Participate Event Id
        - in: query
          name: page
          required: false
          type: string
          description: Enter Page No.
        - in: query
          name: limit
          required: false
          type: string
          description: Enter Limit No.
      responses:
        "200":
          description: OK

  /api/v1/participate/event/one/{pid}/student/{sid}/checklist:
    patch:
      tags:
        - Participate Event Query
      summary: Assign Checklist to student (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid
          required: true
          type: string
          description: Enter Participate Event Id
        - in: path
          name: sid
          required: true
          type: string
          description: Enter Student Id
      responses:
        "200":
          description: OK


  /api/v1/participate/event/one/{pid}/apply/{sid}/activity/{statusId}:
    patch:
      tags:
        - Participate Event Query
      summary: Apply By Student (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid
          required: true
          type: string
          description: Enter Participate Event Id
        - in: path
          name: sid
          required: true
          type: string
          description: Enter Student Id
        - in: path
          name: statusId
          required: true
          type: string
          description: Enter Student Notification Id
      responses:
        "200":
          description: OK

  /api/v1/participate/event/one/{pid}/result:
    patch:
      tags:
        - Participate Event Query
      summary: Result Declaration (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid
          required: true
          type: string
          description: Enter Participate Event Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              result_set:
                type: array
                description: Array of Objects
                sid:
                  type: string
                  description: Enter Student Id
                rank:
                  type: string
                  description: Enter Enter Rank ("Winner" || "Ist Runner" || "IInd Runner")
      responses:
        "200":
          description: OK


# Payment History (Institute, user)

  /api/v1/pay/history/by:
    get:
      tags:
        - Payment History
      summary: Get Pay By a User (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: uid
          required: true
          type: string
          description: Enter User Id
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page
        - in: query
          name: filter
          required: true
          type: string
          description: Enter Filter By Module Type
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
      responses:
        "200":
          description: OK

  /api/v1/pay/history/to:
    get:
      tags:
        - Payment History
      summary: Receieve At Institute (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: uid
          required: true
          type: string
          description: Enter Institute Id
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page
        - in: query
          name: filter
          required: true
          type: string
          description: Enter Filter By Module Type
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
      responses:
        "200":
          description: OK

  
  /api/v1/pay/one/{pid}:
    get:
      tags:
        - Payment History
      summary: view one payment detail (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid
          required: true
          type: string
          description: Enter Payment Id
      responses:
        "200":
          description: OK

  /api/v1/pay/merchant/author/{id}:
    get:
      tags:
        - Payment History
      summary: Create a order instance from Merchant Owner (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: Enter Institute Id
      responses:
        "200":
          description: OK

# Sorted By Alpha || Gender

  /api/v1/feed/filter/by/class/catalog/{cid}:
    get:
      tags:
        - Filter Query
      summary: Get Sorted Students List By Gender || Alpha (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: Enter Class Id
        - in: query
          name: sort_query
          required: true
          type: string
          description: for only gender -> ("Gender"), for only Alphabetical -> ("Alpha"), for both -> ("Gender_Alpha")
      responses:
        "200":
          description: OK


# Edit Admins of Department (Finance,Admission, Sport Head || Class Head, Library)
  /api/v1/edit/staff/finance/staff/{osid}:
    patch:
      tags:
        - Edit Admins
      summary: Update Finance Admins (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: osid
          required: true
          type: string
          description: Enter Old staff id
        - in: query
          name: nsid
          required: true
          type: string
          description: Enter New staff id
      responses:
        "200":
          description: OK


  /api/v1/edit/staff/admission/staff/{osid}:
    patch:
      tags:
        - Edit Admins
      summary: Update Admission Admins (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: osid
          required: true
          type: string
          description: Enter Old staff id
        - in: query
          name: nsid
          required: true
          type: string
          description: Enter New staff id
      responses:
        "200":
          description: OK

  /api/v1/edit/staff/sport/arts/staff/{osid}:
    patch:
      tags:
        - Edit Admins
      summary: Update Sport Head Admins (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: osid
          required: true
          type: string
          description: Enter Old staff id
        - in: query
          name: nsid
          required: true
          type: string
          description: Enter New staff id
      responses:
        "200":
          description: OK
  
  /api/v1/edit/staff/sport/arts/class/staff/{osid}:
    patch:
      tags:
        - Edit Admins
      summary: Update Sport Class Head Admins (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: osid
          required: true
          type: string
          description: Enter Old staff id
        - in: query
          name: nsid
          required: true
          type: string
          description: Enter New staff id
      responses:
        "200":
          description: OK
  
  /api/v1/edit/staff/library/staff/{osid}:
    patch:
      tags:
        - Edit Admins
      summary: Update Library Admins (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: osid
          required: true
          type: string
          description: Enter Old staff id
        - in: query
          name: nsid
          required: true
          type: string
          description: Enter New staff id
      responses:
        "200":
          description: OK


  /api/v1/edit/staff/transport/staff/{osid}:
    patch:
      tags:
        - Edit Admins
      summary: Update Transport Admins (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: osid
          required: true
          type: string
          description: Enter Old staff id
        - in: query
          name: nsid
          required: true
          type: string
          description: Enter New staff id
      responses:
        "200":
          description: OK

  /api/v1/edit/staff/event/manager/staff/{osid}:
    patch:
      tags:
        - Edit Admins
      summary: Update Event Manager Admins (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: osid
          required: true
          type: string
          description: Enter Old staff id
        - in: query
          name: nsid
          required: true
          type: string
          description: Enter New staff id
      responses:
        "200":
          description: OK

  /api/v1/edit/staff/hostel/manager/staff/{osid}:
    patch:
      tags:
        - Edit Admins
      summary: Update Hostel Manager Admins (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: osid
          required: true
          type: string
          description: Enter Old staff id
        - in: query
          name: nsid
          required: true
          type: string
          description: Enter New staff id
      responses:
        "200":
          description: OK


# Backlog Api Module

  /api/v1/exam/backlog/class/master/{did}:
    get:
      tags:
        - Backlog Module
      summary: Get All Masters - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: Enter Department Id
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page No.
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit No.
      responses:
        "200":
          description: OK

  /api/v1/exam/backlog/one/master/{cmid}/subjects:
    get:
      tags:
        - Backlog Module
      summary: Get All Subjects Of One Class Master - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cmid
          required: true
          type: string
          description: Enter One Class Master Id
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page No.
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit No.
      responses:
        "200":
          description: OK

  /api/v1/exam/backlog/one/subject/{smid}/students:
    get:
      tags:
        - Backlog Module
      summary: Get All Students Of One Selected Subject Master - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: smid
          required: true
          type: string
          description: Enter Subject Master Id
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page No.
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit No.
      responses:
        "200":
          description: OK

  /api/v1/exam/backlog/one/subject/{smid}/students/dropout:
    get:
      tags:
        - Backlog Module
      summary: Get All Drop Students Of One Selected Subject Master - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: smid
          required: true
          type: string
          description: Enter Subject Master Id
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page No.
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit No.
      responses:
        "200":
          description: OK

  /api/v1/exam/backlog/one/previous/student/{sid}/subject:
    get:
      tags:
        - Backlog Module
      summary: Get All Subjects Of One Selected Previous Students - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: Enter Student Id
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page No.
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit No.
      responses:
        "200":
          description: OK

  /api/v1/exam/backlog/one/previous/student/{sid}/mark/status:
    patch:
      tags:
        - Backlog Module
      summary: Mark Clear || Dropout Backlog of One Student - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: Enter Student Id
        - in: query
          name: smid
          required: true
          type: string
          description: Enter Subject Master Id
        - in: query
          name: status
          required: true
          type: string
          description: Enter Status ("Clear" || "Dropout")
      responses:
        "200":
          description: OK

#Inquiry of Admission Module

  /api/v1/admission/{aid}/new/inquiry:
    post:
      tags:
        - Admission Inquiry Module 
      summary: New Inquiry from Inside App || Web - (verified)
      produces:
        - application/json
      consumes:
        - multipart/form-data
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: Enter Application Id
        - in: query
          name: flow_status
          required: true
          type: string
          description: Enter Flow Status ("By Admission Admin" || "By Existing User")
        - in: query
          name: uid
          required: false
          type: string
          description: Enter User Id if flow_status is "By Existing User"
        - in: formData
          name: inquiry_student_name
          type: string
          required: true
          description: Enter Student Name
        - in: formData
          name: inquiry_student_gender
          type: string
          required: true
          description: Enter Student Gender
        - in: formData
          name: inquiry_student_dob
          type: string
          required: true
          description: Enter Date of Birth
        - in: formData
          name: inquiry_student_address
          type: string
          required: true
          description: Enter Student Address
        - in: formData
          name: file
          type: string
          required: true
          description: Enter Student Profile Photo
        - in: formData
          name: inquiry_student_previous
          type: string
          required: false
          description: Enter Student Previous School
        - in: formData
          name: inquiry_student_mobileNo
          type: string
          required: false
          description: Enter Student Mobile No.
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/direct/{id}/inquiry:
    post:
      tags:
        - Admission Inquiry Module 
      summary: New Inquiry from Direct Qr Code Scan + User Account Creation - (verified)
      produces:
        - application/json
      consumes:
        - multipart/form-data
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: Enter Application Id
        - in: path
          name: id
          required: true
          type: string
          description: Enter User Phone Number
        - in: formData
          name: inquiry_student_name
          type: string
          required: true
          description: Enter Student Name
        - in: formData
          name: inquiry_student_gender
          type: string
          required: true
          description: Enter Student Gender
        - in: formData
          name: inquiry_student_dob
          type: string
          required: true
          description: Enter Date of Birth
        - in: formData
          name: inquiry_student_address
          type: string
          required: true
          description: Enter Student Address
        - in: formData
          name: file
          type: string
          required: true
          description: Enter Student Profile Photo
        - in: formData
          name: inquiry_student_previous
          type: string
          required: false
          description: Enter Student Previous School
        - in: formData
          name: sample_pic
          type: string
          required: false
          description: Enter CDN Avatar
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/all/inquiry:
    get:
      tags:
        - Admission Inquiry Module 
      summary: Get All Inquiry List - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: Enter Admission Id
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page No.
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit No.
        - in: query
          name: status
          required: true
          type: string
          description: Enter Status ("Ongoing" || "Reviewed")
      responses:
        "200":
          description: OK

  /api/v1/admission/{id}/one/inquiry:
    get:
      tags:
        - Admission Inquiry Module 
      summary: Get One Inquiry Detail - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: Enter Inquiry Id
      responses:
        "200":
          description: OK

  /api/v1/admission/{id}/inquiry/remark:
    patch:
      tags:
        - Admission Inquiry Module 
      summary: Mark Remark of One Inquiry - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: Enter Inquiry Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              remark:
                type: string
                description: Enter Remark
                required: true
      responses:
        "200":
          description: OK

#Inventory Module

  /api/v1/finance/{fid}/all/inventory/query:
    get:
      tags:
        - Inventory Module 
      summary: All Stores of Inventory - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: Enter Finance Id
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page No.
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit No.
      responses:
        "200":
          description: OK

  /api/v1/finance/one/inventory/{inid}/query:
    get:
      tags:
        - Inventory Module 
      summary: One Store of All Expenses Inventory - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: inid
          required: true
          type: string
          description: Enter Store Id
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page No.
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit No.
      responses:
        "200":
          description: OK

  /api/v1/manage/admin/all/user:
    get:
      tags:
        - Inventory Module 
      summary: All Users of Platform - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page No.
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit No.
        - in: query
          name: search
          required: false
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK

#Transport Module

  /api/v1/transport/ins/{id}/staff/{sid}:
    post:
      tags:
        - Transport Module Query
      summary: Assign and Activate Transport Module By The Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id 
        - in: path
          name: sid
          required: true
          type: string
          description: This is staff id 
      responses:
        "200":
          description: OK

  /api/v1/transport/{tid}/dashboard:
    get:
      tags:
        - Transport Module Query
      summary: Get Dashboard Detail of Transport  (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: tid
          required: true
          type: string
          description: This is Transport id 
      responses:
        "200":
          description: OK

  /api/v1/transport/{tid}/new/vehicle:
    post:
      tags:
        - Transport Module Query
      summary: Add New Vehicle To Transport Module  (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: tid
          required: true
          type: string
          description: This is Transport id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              dsid:
                type: string
                description: Enter Driver Staff Id if(vehicle Type is "Own")
              csid:
                type: string
                description: Enter Conductor Staff Id if(vehicle Type is "Own")
              duid:
                type: string
                description: Enter Driver User Id if(vehicle Type is "Outsider")
              cuid:
                type: string
                decription: Enter Conductor User Id if(vehicle Type is "Outsider")
              vehicle_number:
                type: string
                description: Enter Vehicle Number (Required)
              vehicle_type:
                type: string
                description: Enter Vehicle Type (Required) ("Own" || "Outsider")
              vehicle_tracking_id:
                type: string
                description: Enter Vehicle Tracking Id
      responses:
        "200":
          description: OK

  /api/v1/transport/vehicle/{vid}/new/route:
    post:
      tags:
        - Transport Module Query
      summary: Add New Route To One Vehicle  (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: vid
          required: true
          type: string
          description: This is Vehicle id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              route_path:
                type: array
                description: Array of Objects { "stop": "Singar Nagar", "fee": 100 }
                items:
                  type: string
                  description: Stop, Fees
      responses:
        "200":
          description: OK

  /api/v1/transport/vehicle/{vid}/route/update:
    patch:
      tags:
        - Transport Module Query
      summary: Update Previous Route || Add New Route To One Vehicle  (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: vid
          required: true
          type: string
          description: This is Vehicle id 
        - in: query
          name: route_status
          required: true
          type: string
          description: Enter Route Status ("Renaming_Route" || "Add_New_Stop_Point")
        - in : body
          name: body
          schema:
            type: object
            properties:
              edit_path:
                type: array
                description: Array of Objects { "stop": "Vidhan Sabha", "fee": 210, "index": 9 }
                items:
                  type: string
                  description: Stop, Fees & Index
              rid:
                type: string
                description: Enter Route Id
              route_stop:
                type: string
                description: Enter Route Stop
              route_fees:
                type: number
                description: Enter Route Fees
      responses:
        "200":
          description: OK

  /api/v1/transport/vehicle/{vid}/new/passenger:
    post:
      tags:
        - Transport Module Query
      summary: Add New Passenger To One Vehicle  (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: vid
          required: true
          type: string
          description: This is Vehicle id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              sid:
                type: string
                description: Enter Student Id
              rid:
                type: string
                description: Enter Route Id
              amount:
                type: number
                description: Enter Remain Fees
      responses:
        "200":
          description: OK

  /api/v1/transport/{tid}/all/vehicles:
    get:
      tags:
        - Transport Module Query
      summary: Get All Vehicles of Transport Module  (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: tid
          required: true
          type: string
          description: This is Transport id 
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page No.
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit No.
        - in: query
          name: search
          required: false
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK

  /api/v1/transport/{tid}/all/passengers:
    get:
      tags:
        - Transport Module Query
      summary: Get All Passengers of Transport Module  (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: tid
          required: true
          type: string
          description: This is Transport id 
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page No.
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit No.
        - in: query
          name: search
          required: false
          type: string
          description: Enter Search Query
        # - in: query
        #   name: filter_by
        #   required: true
        #   type: boolean
        #   description: Enter Boolean (true for Transport Side User) (false for Institute Transport Side)
        - in: query
          name: filter_by
          required: true
          type: string
          description: Enter a 'true' of 'false' in string type          
        - in: query
          name: batch_filter
          required: true
          type: string
          description: it is consits of three values like ("ALL" or "PAST" or "")       
      responses:
        "200":
          description: OK

  /api/v1/transport/{tid}/all/vehicles/staff:
    get:
      tags:
        - Transport Module Query
      summary: Get All Drivers / Conductors of Transport Module  (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: tid
          required: true
          type: string
          description: This is Transport id 
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page No.
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit No.
      responses:
        "200":
          description: OK

  /api/v1/transport/one/vehicle/{vid}/query:
    get:
      tags:
        - Transport Module Query
      summary: Get One Vehicle Details With Students List  (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: vid
          required: true
          type: string
          description: This is Vehicle id 
      responses:
        "200":
          description: OK

  /api/v1/transport/one/vehicle/{vid}/query/all/passengers:
    get:
      tags:
        - Transport Module Query
      summary: Get One Vehicle Details With All Passengers  (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: vid
          required: true
          type: string
          description: This is Vehicle id 
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page No.
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit No.
        - in: query
          name: search
          required: true
          type: string
          description: Enter Search Query
        - in: query
          name: filter_by
          required: true
          type: string
          description: Enter a 'true' of 'false' in string type          
        - in: query
          name: batch_filter
          required: true
          type: string
          description: it is consits of three values like ("ALL" or "PAST" or "")        
      responses:
        "200":
          description: OK

  /api/v1/transport/one/vehicle/{vid}/route:
    get:
      tags:
        - Transport Module Query
      summary: Get One Vehicle All Routes   (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: vid
          required: true
          type: string
          description: This is Vehicle id 
        - in: query
          name: search
          required: false
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK

  /api/v1/transport/vehicle/{vid}/student/{sid}/route:
    get:
      tags:
        - Transport Module Query
      summary: Get One Vehicle Details Of One Students   (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: vid
          required: true
          type: string
          description: This is Vehicle id 
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id 
      responses:
        "200":
          description: OK

  /api/v1/transport/staff/{sid}/manage:
    get:
      tags:
        - Transport Module Query
      summary: Access Transport Profile From Staff Side   (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Staff id 
      responses:
        "200":
          description: OK

  /api/v1/transport/user/{uid}/manage:
    get:
      tags:
        - Transport Module Query
      summary: Access Transport Profile From User Side   (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: uid
          required: true
          type: string
          description: This is Staff id 
      responses:
        "200":
          description: OK

  /api/v1/transport/{tid}/students/{sid}/collect/offline:
    post:
      tags:
        - Transport Module Query
      summary: Collect Transport Fees  (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: tid
          required: true
          type: string
          description: This is Transport id 
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              amount:
                type: number
                description: Enter Amount 
              mode:
                type: string
                description: Enter Mode ("Online" || "Offline")
              is_install:
                type: boolean
                description: Enter Boolean (true || false)
      responses:
        "200":
          description: OK

  /api/v1/transport/{tid}/request/finance:
    patch:
      tags:
        - Transport Module Query
      summary: Request || Submit To Finance Manager  (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: tid
          required: true
          type: string
          description: This is Transport id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              amount:
                type: number
                description: Enter Amount 
      responses:
        "200":
          description: OK

  /api/v1/finance/{fid}/dashboard/cash/flow/transport/query:
    get:
      tags:
        - Transport Module Query
      summary: Get All Finance Transport Cash Flow  (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This is Finance id 
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page No.
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit No.
        - in: query
          name: filter_by
          required: true
          type: string
          description: Enter Filter Keywords ("ALL_REQUEST" || "ALL_SUBMIT" || "ALL_CANCEL")
      responses:
        "200":
          description: OK

  /api/v1/finance/{fid}/transport/{tid}/submit/{rid}/status:
    post:
      tags:
        - Transport Module Query
      summary: Accepted || Rejected Transport Request At Finance  (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This is Finance id 
        - in: path
          name: tid
          required: true
          type: string
          description: This is Transport id 
        - in: path
          name: rid
          required: true
          type: string
          description: This is Transport Request id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              amount:
                type: number
                required: true
                description: Enter Amount
              status:
                type: string
                required: true
                description: Enter Status ("Accepted" || "Rejected") 
      responses:
        "200":
          description: OK

  
  /api/v1/transport/vehicle/{vid}/route/{rid}/destroy:
    delete:
      tags:
        - Transport Module Query
      summary: Delete One Route of vehicle if no passenger available at this route (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: vid
          required: true
          type: string
          description: This is Vehicle id 
        - in: path
          name: rid
          required: true
          type: string
          description: Enter Route Id
      responses:
        "200":
          description: OK

  /api/v1/transport/vehicle/{vid}/destroy/passenger/{sid}:
    delete:
      tags:
        - Transport Module Query
      summary: Delete One Passenger From vehicle  (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: vid
          required: true
          type: string
          description: This is Vehicle id 
        - in: path
          name: sid
          required: true
          type: string
          description: Enter Student Id
      responses:
        "200":
          description: OK


# Export Module All Data

  /api/v1/extra/export/student/all/admission/{aid}:
    get:
      tags:
        - Export Data Module
      summary: Get All Students Remaining Fee At Admission Module Exported Data -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: Enter Admission Module Id
      responses:
        "200":
          description: OK

  /api/v1/extra/export/student/all/{fid}:
    get:
      tags:
        - Export Data Module
      summary: Get All Students Remaining Fee At Finance Exported Data -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: Enter Finance Id
      responses:
        "200":
          description: OK

  /api/v1/extra/export/student/all/{id}:
    get:
      tags:
        - Export Data Module
      summary: Get All Students Exported Data -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: Enter institute Id
      responses:
        "200":
          description: OK

  /api/v1/extra/export/student/card:
    post:
      tags:
        - Setting Control API
      summary: Get Id Card Student Exported Data -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              request:
                type: string
                description: Enter Array of Class Id ["987482734878274387328", "893728947892374872847"]
      responses:
        "200":
          description: OK

  /api/v1/extra/export/staff/card/{did}:
    get:
      tags:
        - Setting Control API
      summary: Get All Staff Exported Data -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: Enter Institute Id
      responses:
        "200":
          description: OK

  
  /api/v1/extra/{id}/original/copy/query:
    patch:
      tags:
        - Setting Control API
      summary: Download Only Original Copy -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: Enter Institute Id
        - in: query
          name: original
          required: true
          type: string
          description: Enter ("false" || "true")
      responses:
        "200":
          description: OK


# Admission To Finance

  /api/v1/finance/{aid}/admission/request:
    post:
      tags:
        - Cash Flow Module Query
      summary: Request || Submit To Finance Manager  (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Admission id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              amount:
                type: number
                required: true
                description: Enter Amount 
      responses:
        "200":
          description: OK

  /api/v1/finance/{fid}/dashboard/cash/flow/admission/query:
    get:
      tags:
        - Cash Flow Module Query
      summary: Get All Finance Admission Cash Flow  (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This is Finance id 
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page No.
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit No.
        - in: query
          name: filter_by
          required: true
          type: string
          description: Enter Filter Keywords ("ALL_REQUEST" || "ALL_SUBMIT" || "ALL_CANCEL")
      responses:
        "200":
          description: OK

  /api/v1/finance/{fid}/admission/{aid}/submit/{rid}/status:
    post:
      tags:
        - Cash Flow Module Query
      summary: Accepted or Rejected Admission Request At Finance  (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This is Finance id 
        - in: path
          name: aid
          required: true
          type: string
          description: This is Admission id 
        - in: path
          name: rid
          required: true
          type: string
          description: This is Admission Request id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              amount:
                type: number
                required: true
                description: Enter Amount 
              status:
                type: number
                required: true
                description: Enter Status ("Accepted" || "Rejected") 
      responses:
        "200":
          description: OK


  /api/v1/finance/{lid}/library/request:
    post:
      tags:
        - Cash Flow Module Query
      summary: Request || Submit To Finance Manager  (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: lid
          required: true
          type: string
          description: This is Library id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              amount:
                type: number
                required: true
                description: Enter Amount 
      responses:
        "200":
          description: OK

  /api/v1/finance/{fid}/dashboard/cash/flow/library/query:
    get:
      tags:
        - Cash Flow Module Query
      summary: Get All Finance Library Cash Flow  (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This is Finance id 
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page No.
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit No.
        - in: query
          name: filter_by
          required: true
          type: string
          description: Enter Filter Keywords ("ALL_REQUEST" || "ALL_SUBMIT" || "ALL_CANCEL")
      responses:
        "200":
          description: OK

  /api/v1/finance/{fid}/library/{lid}/submit/{rid}/status:
    post:
      tags:
        - Cash Flow Module Query
      summary: Accepted or Rejected Library Request At Finance  (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This is Finance id 
        - in: path
          name: lid
          required: true
          type: string
          description: This is Library id 
        - in: path
          name: rid
          required: true
          type: string
          description: This is Admission Request id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              amount:
                type: number
                required: true
                description: Enter Amount 
              status:
                type: number
                required: true
                description: Enter Status ("Accepted" || "Rejected") 
      responses:
        "200":
          description: OK

  /api/v1/finance/{hid}/hostel/request:
    post:
      tags:
        - Cash Flow Module Query
      summary: Request || Submit To Finance Manager  (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: hid
          required: true
          type: string
          description: This is Hostel id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              amount:
                type: number
                required: true
                description: Enter Amount 
      responses:
        "200":
          description: OK

  /api/v1/finance/{fid}/dashboard/cash/flow/hostel/query:
    get:
      tags:
        - Cash Flow Module Query
      summary: Get All Finance Hostel Cash Flow  (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This is Finance id 
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page No.
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit No.
        - in: query
          name: filter_by
          required: true
          type: string
          description: Enter Filter Keywords ("ALL_REQUEST" || "ALL_SUBMIT" || "ALL_CANCEL")
      responses:
        "200":
          description: OK

  /api/v1/finance/{fid}/hostel/{hid}/submit/{rid}/status:
    post:
      tags:
        - Cash Flow Module Query
      summary: Accepted or Rejected Hostel Request At Finance  (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This is Finance id 
        - in: path
          name: hid
          required: true
          type: string
          description: This is Hostel id 
        - in: path
          name: rid
          required: true
          type: string
          description: This is Hostel Request id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              amount:
                type: number
                required: true
                description: Enter Amount 
              status:
                type: number
                required: true
                description: Enter Status ("Accepted" || "Rejected") 
      responses:
        "200":
          description: OK

# library side all list
  /api/v1/library/activate/{id}:
    post:
      tags:
        - Library Module 
      summary: Assign library Head (VERIFIED ‚úî)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: Enter Institute Id to activate library
        - in : body
          name: body
          schema:
            type: object
            properties:
              sid:
                type: string
                description: It is a staff id 
                required: true
      responses:
        "200":
          description: OK          

  /api/v1/library/info/{lid}:
    get:
      tags:
        - Library Module 
      summary: Give library Info like (count of book, members and etc) (VERIFIED ‚úî)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: lid
          required: true
          type: string
          description: It is a library id
      responses:
        "200":
          description: OK    

  /api/v1/library/books/{lid}:
    get:
      tags:
        - Library Module 
      summary: List of all books that is created at particular institute side (VERIFIED ‚úî)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: lid
          required: true
          type: string
          description: It is a library id 
        - in: query
          name: page
          type: integer
          description: Enter a page 
        - in: query
          name: limit
          type: integer
          description: Enter a limit  
        - in: query
          name: search
          type: string
          description: here type book name or author name of publication base search 
      responses:
        "200":
          description: OK                             
    
    post:
      tags:
        - Library Module 
      summary: create a book to a particular library (VERIFIED ‚úî)
      consumes:
        - application/json      
      produces:
        - application/json
      parameters:
        - in: path
          name: lid
          required: true
          type: string
          description: It is a library Id
        - in: body
          name: body
          schema:
            type: object
            properties:
              bookName:
                type: string
                description: Here type the book name
                required: true
              bookStatus:
                type: string
                description: It is a book type that is a (Offline or Online)  
                required: true  
              author:
                type: string
                description: Here type the book author name
                required: true
              publication:
                type: string
                description: It is a book type book publication name  
              language:
                type: string
                description: Here type the language of book written in (hindi, english)
                required: true
              totalPage:
                type: integer
                description: Here type total number of pages that book contains  
              price:
                type: integer
                description: Here type the price of book
              totalCopies:
                type: integer
                description: Here type the total book copy available (Note-It is only for the bookStatus Offline)  
              shellNumber:
                type: string
                description: Here type the  book shell number where book is place.  
              description:
                type: string
                description: Here type the  book description.  
              photo:
                type: string
                description: Here type the key of particular uploaded image of thumbnail of book.  
              attachment:
                type: array
                description: It is contain file key when bookStatus is Online only.
                items: 
                  type: object
                  description: one file in list.
                  properties:
                    documentType:
                      type: string
                      description: It is a uploaded document type
                    documentName:
                      type: string
                      description: it is a uploaded document file name
                    documentSize:
                      type: string
                      description: It is a file size
                    documentKey: 
                      type: string
                      description: Here type the key of particular uploaded image thumbnail of book.  
      responses:
        "200":
          description: OK  

  /api/v1/library/book/detail/{bid}:
    get:
      tags:
        - Library Module 
      summary: It is give the particular book details (VERIFIED ‚úî)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: bid
          required: true
          type: string
          description: It is a book Id 
      responses:
        "200":
          description: OK    
    patch:
      tags:
        - Library Module 
      summary: It is updated particular book (VERIFIED ‚úî)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: bid
          required: true
          type: string
          description: It is a book Id
        - in: body
          name: body
          schema:
            type: object
            properties:
              bookName:
                type: string
                description: Here type the book name
                required: true
              bookStatus:
                type: string
                description: It is a book type that is a (Offline or Online)  
                required: true  
              author:
                type: string
                description: Here type the book author name
                required: true
              publication:
                type: string
                description: It is a book type book publication name  
              language:
                type: string
                description: Here type the language of book written in (hindi, english)
                required: true
              totalPage:
                type: integer
                description: Here type total number of pages that book contains  
              price:
                type: integer
                description: Here type the price of book
              totalCopies:
                type: integer
                description: Here type the total book copy available (Note-It is only for the bookStatus Offline)  
              shellNumber:
                type: string
                description: Here type the  book shell number where book is place.  
              description:
                type: string
                description: Here type the  book description.  
              photo:
                type: string
                description: Here type the key of particular uploaded image of thumbnail of book.  
              attachment:
                type: array
                description: It is contain file key when bookStatus is Online only.
                items: 
                  type: object
                  description: one file in list.
                  properties:
                    documentType:
                      type: string
                      description: It is a uploaded document type
                    documentName:
                      type: string
                      description: it is a uploaded document file name
                    documentSize:
                      type: string
                      description: It is a file size
                    documentKey: 
                      type: string
                      description: Here type the key of particular uploaded image thumbnail of book.  
      responses:
        "200":
          description: OK

  /api/v1/library/issued/{lid}:
    get:
      tags:
        - Library Module 
      summary: Give the list of all issue book in particular librarian head  (VERIFIED ‚úî)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: lid
          required: true
          type: string
          description: It is a Library Id  
        - in: query
          name: page
          type: integer
          description: Enter a page 
        - in: query
          name: limit
          type: integer
          description: Enter a limit   
      responses:
        "200":
          description: OK    
    
    patch:
      tags:
        - Library Module 
      summary: It is issue a book to any particular member (VERIFIED ‚úî)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: lid
          required: true
          type: string
          description: It is a Library Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              memberId:
                type: string
                description: It is a particular member(student) Id
                required: true
              bookId:
                type: string
                description: It is a book id that is selected
                required: true                
      responses:
        "200":
          description: OK     

  /api/v1/library/collected/{lid}:
    get:
      tags:
        - Library Module 
      summary: Give the list of all collected book in particular librarian head  (VERIFIED ‚úî)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: lid
          required: true
          type: string
          description: It is a Library Id  
        - in: query
          name: page
          type: integer
          description: Enter a page 
        - in: query
          name: limit
          type: integer
          description: Enter a limit   
      responses:
        "200":
          description: OK    
    patch:
      tags:
        - Library Module 
      summary: It is collect particular book from member (VERIFIED ‚úî)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: lid
          required: true
          type: string
          description: It is a Issued Id that is provided in particular issue card section
        - in : body
          name: body
          schema:
            type: object
            properties:
              chargeBy:
                type: string
                description: It is a selection of type of charges you want ot add when collect a book ("" || Damaged ||Lost ) three type of value
              fineCharge:
                type: integer
                description: It is a charges apply based upon selection of chargeBy
              paymentType:
                type: string
                description: It is a payment mode type that is "Offline" or "Online"
      responses:
        "200":
          description: OK     


  /api/v1/library/onecollected/{cid}:
    get:
      tags:
        - Library Module 
      summary: It is give detail of on collected books, who has taken this book (VERIFIED ‚úî)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: It is a collected Id  
      responses:
        "200":
          description: OK     

  /api/v1/library/members/{lid}:
    get:
      tags:
        - Library Module 
      summary: Give the all members list in librarian head and institute side. (VERIFIED ‚úî)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: lid
          required: true
          type: string
          description: It is a library Id  
        - in: query
          name: page
          type: integer
          description: Enter a page 
        - in: query
          name: limit
          type: integer
          description: Enter a limit   
      responses:
        "200":
          description: OK  

  /api/v1/library/member/{sid}/issued:
    get:
      tags:
        - Library Module 
      summary: It is give one member with all list of issue or borrow book in librarian or student side. (VERIFIED ‚úî)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is a student Id  
        - in: query
          name: page
          type: integer
          description: Enter a page 
        - in: query
          name: limit
          type: integer
          description: Enter a limit   
      responses:
        "200":
          description: OK  

  /api/v1/library/member/{sid}/history:
    get:
      tags:
        - Library Module 
      summary: It is give one member with all list of history or deposite book in librarian or student side. (VERIFIED ‚úî)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: Enter student Id  
        - in: query
          name: page
          type: integer
          description: Enter a page 
        - in: query
          name: limit
          type: integer
          description: Enter a limit   
      responses:
        "200":
          description: OK  

  /api/v1/library/all/fine/history/{lid}:
    get:
      tags:
        - Library Module 
      summary: Give the list of all collected book fine charges in particular librarian head  (VERIFIED ‚úî)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: lid
          required: true
          type: string
          description: It is a Library Id  
        - in: query
          name: page
          type: integer
          description: Enter a page 
        - in: query
          name: limit
          type: integer
          description: Enter a limit   
      responses:
        "200":
          description: OK



# Some Edit and Delete Section Part
  /api/v1/admission/{aid}/destroy/{appId}:
    delete:
      tags:
        - Edit & Delete Module API
      summary: New Application Delete When No One Applied -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: Enter Admission Id
        - in: path
          name: appId
          required: true
          type: string
          description: Enter New Application Id   
      responses:
        "200":
          description: OK

  /api/v1/admission/edit/{appId}:
    patch:
      tags:
        - Edit & Delete Module API
      summary: New Application Edit with limited Data -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: appId
          required: true
          type: string
          description: Enter New Application Id  
      responses:
        "200":
          description: OK

  /api/v1/fees/{fid}/edit:
    patch:
      tags:
        - Edit & Delete Module API
      summary: Fees Edit with limited Data (name, date) -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: appId
          required: true
          type: string
          description: Enter Fees Id  
      responses:
        "200":
          description: OK

  /api/v1/fees/{fid}/destroy/{did}:
    delete:
      tags:
        - Edit & Delete Module API
      summary: Fees Delete When No One Paid for This -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: Enter Fees Id
        - in: path
          name: did
          required: true
          type: string
          description: Enter Department Id
      responses:
        "200":
          description: OK

  /api/v1/checklist/{cid}/destroy/{did}:
    delete:
      tags:
        - Edit & Delete Module API
      summary: Checklist Delete When No Student Get Allotted Checklist -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: Enter Checklist Id
        - in: path
          name: did
          required: true
          type: string
          description: Enter Department Id
      responses:
        "200":
          description: OK


# Moderator Section Module

  /api/v1/role/permission/{aid}/new/app/mod:
    post:
      tags:
        - Moderator Role & Permission
      summary: Add New Moderator Role (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: Enter Admission Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              mod_role:
                type: string
                description: Enter Role as per given 
                required: true
              sid:
                type: string
                description: Enter Staff Id
                required: true 
              app_array:
                type: array
                description: Enter Array of Application Id
                required: true  
      responses:
        "200":
          description: OK

  /api/v1/role/permission/{aid}/all/moderator:
    get:
      tags:
        - Moderator Role & Permission
      summary: All Moderator Role of Admission Super Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: Enter Admission Id
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
        - in: query
          name: search
          required: true
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK

  /api/v1/role/permission/update/app/mod/{mid}:
    patch:
      tags:
        - Moderator Role & Permission
      summary: Edit One Moderator Role By Admission Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: mid
          required: true
          type: string
          description: Enter One Moderator Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              role:
                type: string
                description: Enter Role as per given 
                required: false
              staffId:
                type: string
                description: Enter Staff Id
                required: true 
              app_array:
                type: string
                description: Enter Array of Application Id
                required: true 
      responses:
        "200":
          description: OK

  /api/v1/role/permission/{aid}/destroy/app/mod/{mid}:
    delete:
      tags:
        - Moderator Role & Permission
      summary: Delete One Moderator Role By Admission Super Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: Enter Admission Id
        - in: path
          name: mid
          required: true
          type: string
          description: Enter One Moderator Id
      responses:
        "200":
          description: OK

  /api/v1/role/permission/one/moderator/{mid}/all/apps:
    get:
      tags:
        - Moderator Role & Permission
      summary: One Moderator Role All Applications (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: mid
          required: true
          type: string
          description: Enter Moderator Id
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
        - in: query
          name: search
          required: false
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK

  /api/v1/role/permission/{fid}/finance/moderator:
    post:
      tags:
        - Moderator Role & Permission
      summary: Add New Moderator Role (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: Enter Finance Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              mod_role:
                type: string
                description: Enter Role as per given 
                required: true
              sid:
                type: string
                description: Enter Staff Id
                required: true  
      responses:
        "200":
          description: OK

  /api/v1/role/permission/{fid}/all/finance/moderator:
    get:
      tags:
        - Moderator Role & Permission
      summary: All Moderator Role of Finance Super Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: Enter Finance Id
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
        - in: query
          name: search
          required: true
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK


  /api/v1/role/permission/update/finance/mod/{mid}:
    patch:
      tags:
        - Moderator Role & Permission
      summary: Edit One Moderator Role By Finance Manager (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: mid
          required: true
          type: string
          description: Enter One Moderator Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              role:
                type: string
                description: Enter Role as per given 
                required: false
              staffId:
                type: string
                description: Enter Staff Id
                required: true 
      responses:
        "200":
          description: OK

  /api/v1/role/permission/{fid}/destroy/finance/mod/{mid}:
    delete:
      tags:
        - Moderator Role & Permission
      summary: Delete One Moderator Role By Finance Super Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: Enter Finance Id
        - in: path
          name: mid
          required: true
          type: string
          description: Enter One Moderator Id
      responses:
        "200":
          description: OK


  /api/v1/role/permission/{id}/ins/moderator:
    post:
      tags:
        - Moderator Role & Permission
      summary: Add New Moderator Role ("CERTIFICATE_ACCESS" || "STUDENT_PROMOTE_ACCESS") (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: Enter Institute Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              mod_role:
                type: string
                description: Enter Role as per given 
                required: true
              sid:
                type: string
                description: Enter Staff Id
                required: true  
      responses:
        "200":
          description: OK

  /api/v1/role/permission/{id}/all/ins/moderator:
    get:
      tags:
        - Moderator Role & Permission
      summary: All Moderator Role of Institute Super Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: Enter Institute Id
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
        - in: query
          name: search
          required: true
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK


  /api/v1/role/permission/update/ins/mod/{mid}:
    patch:
      tags:
        - Moderator Role & Permission
      summary: Edit One Moderator Role By Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: mid
          required: true
          type: string
          description: Enter One Moderator Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              role:
                type: string
                description: Enter Role as per given 
                required: false
              staffId:
                type: string
                description: Enter Staff Id
                required: true 
      responses:
        "200":
          description: OK

  /api/v1/role/permission/{id}/destroy/ins/mod/{mid}:
    delete:
      tags:
        - Moderator Role & Permission
      summary: Delete One Moderator Role By Institute Super Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: Enter Institute Id
        - in: path
          name: mid
          required: true
          type: string
          description: Enter One Moderator Id
      responses:
        "200":
          description: OK


  /api/v1/role/permission/{hid}/new/hostel/app/mod:
    post:
      tags:
        - Moderator Role & Permission
      summary: Add New Moderator Role (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: hid
          required: true
          type: string
          description: Enter Hostel Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              mod_role:
                type: string
                description: Enter Role as per given 
                required: true
              sid:
                type: string
                description: Enter Staff Id
                required: true 
              app_array:
                type: array
                description: Enter Array of Application Id
                required: true  
      responses:
        "200":
          description: OK

  /api/v1/role/permission/{hid}/all/hostel/moderator:
    get:
      tags:
        - Moderator Role & Permission
      summary: All Moderator Role of Hostel Super Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: hid
          required: true
          type: string
          description: Enter Hostel Id
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
        - in: query
          name: search
          required: true
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK

  /api/v1/role/permission/update/app/hostel/mod/{mid}:
    patch:
      tags:
        - Moderator Role & Permission
      summary: Edit One Moderator Role By Hostel Manager (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: mid
          required: true
          type: string
          description: Enter One Moderator Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              role:
                type: string
                description: Enter Role as per given 
                required: false
              staffId:
                type: string
                description: Enter Staff Id
                required: true 
              app_array:
                type: string
                description: Enter Array of Application Id
                required: true 
      responses:
        "200":
          description: OK

  /api/v1/role/permission/{hid}/destroy/app/hostel/mod/{mid}:
    delete:
      tags:
        - Moderator Role & Permission
      summary: Delete One Moderator Role By Hostel Super Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: hid
          required: true
          type: string
          description: Enter Hostel Id
        - in: path
          name: mid
          required: true
          type: string
          description: Enter One Moderator Id
      responses:
        "200":
          description: OK


#Manage Admin Module

  /api/v1/manage/admin/{mid}/all/mentors:
    get:
      tags:
        - Manage Admin Affiliation
      summary: All Mentors / Staff of Affiliated Institute (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: mid
          required: true
          type: string
          description: Enter Manage Admin Id
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit 
        - in: query
          name: search
          required: false
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK


  /api/v1/manage/admin/{mid}/all/students:
    get:
      tags:
        - Manage Admin Affiliation
      summary: All Students of Affiliated Institute (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: mid
          required: true
          type: string
          description: Enter Manage Admin Id
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit 
        - in: query
          name: search
          required: false
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK

  /api/v1/manage/admin/{mid}/personal/query:
    patch:
      tags:
        - Manage Admin Affiliation
      summary: Edit Manage Admin Profile (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: mid
          required: true
          type: string
          description: Enter Manage Admin Id
        - in: query
          name: delete_pic
          required: true
          type: string
          description: Enter Old Profile Photo
      responses:
        "200":
          description: OK


#New Flow Finance + Admission 
  /api/v1/finance/{fid}/add/bank/query:
    post:
      tags:
        - New Flow Finance + Admission
      summary: Add Bank Details By Finance Manager in body ("finance_bank_account_number", "finance_bank_name", "finance_bank_account_name", "finance_bank_ifsc_code", "finance_bank_branch_address", "finance_bank_upi_id", "finance_bank_upi_qrcode") (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: Enter Finance Id
        - in: query
          name: flow
          required: true
          type: string
          description: Enter Flow Status ("Department" || "Transport" || "Library")
        - in: query
          name: flow_id
          required: true
          type: string
          description: Enter Flow ID
      responses:
        "200":
          description: OK


  /api/v1/finance/{fid}/all/bank/account:
    get:
      tags:
        - New Flow Finance + Admission
      summary: All Bank Account By Finance Manager (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: Enter Finance Id
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
        - in: query
          name: search
          required: true
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK

  /api/v1/finance/{acid}/one/bank/account:
    get:
      tags:
        - New Flow Finance + Admission
      summary: One Bank Account Query -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: acid
          required: true
          type: string
          description: Enter Bank Account Id
      responses:
        "200":
          description: OK

  /api/v1/finance/{acid}/bank/account/query:
    patch:
      tags:
        - New Flow Finance + Admission
      summary: Add Bank Details By Finance Manager in body ("finance_bank_account_number", "finance_bank_name", "finance_bank_account_name", "finance_bank_ifsc_code", "finance_bank_branch_address", "finance_bank_upi_id", "finance_bank_upi_qrcode") (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: acid
          required: true
          type: string
          description: Enter Bank Account Id
        - in: query
          name: delete_pic
          required: true
          type: string
          description: Enter Old Qr Photo
      responses:
        "200":
          description: OK

  /api/v1/finance/{acid}/bank/account/destroy/query:
    delete:
      tags:
        - New Flow Finance + Admission
      summary: Delete Bank Account By Finance Manager (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: acid
          required: true
          type: string
          description: Enter Bank Account Id
      responses:
        "200":
          description: OK

  Get From Finance Master API:
    get:
      tags:
        - New Flow Finance + Admission
      summary: Get Bank Details from Finance Master API (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
      responses:
        "200":
          description: OK

  /api/v1/finance/{fid}/all/fee/category/query:
    get:
      tags:
        - New Flow Finance + Admission
      summary: Get All Fees Category (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: Enter Finance Id
      responses:
        "200":
          description: OK

  /api/v1/finance/{fid}/fee/category/new:
    post:
      tags:
        - New Flow Finance + Admission
      summary: Add New Fees Category (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: Enter Finance Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              category_name:
                type: string
                description: Enter Category as per given
                required: true
      responses:
        "200":
          description: OK

  Old All Internal Department API:
    get:
      tags:
        - New Flow Finance + Admission
      summary: Get All Internal Department from Previous API (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
      responses:
        "200":
          description: OK
  
  Old One Internal Department All Class Master API:
    get:
      tags:
        - New Flow Finance + Admission
      summary: Get One Internal Department All Class Master from Previous API (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
      responses:
        "200":
          description: OK

  /api/v1/finance/{fid}/fee/structure/new:
    post:
      tags:
        - New Flow Finance + Admission
      summary: Add New Fees Structure By Finance + Endpoint Changed (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: Enter Finance Id
        - in: query
          name: flow
          required: true
          type: string
          description: Enter for Finance ("Finance_Manager" || "Hostel_Manager")
        - in : body
          name: body
          schema:
            type: object
            properties:
              category_master:
                type: string
                description: Enter Fees Category Id
                required: true
              class_master:
                type: string
                description: Enter Class Master Id
                required: true
              structure_name:
                type: string
                description: Enter Structure Name
                required: true
              applicable_fees:
                type: string
                description: Enter Applicable Fees Fee Head are not greater than Applicable Fees
                required: true
              due_date:
                type: string
                description: Enter Due Date ("2023-01-02")
                required: false
              total_admission_fees:
                type: number
                description: Enter Admission Fees
                required: true
              total_installments:
                type: string
                description: Enter Total Installments
                required: true
              one_installments:
                type: object
                properties:
                  fees:
                    type: number
                    description: Enter Fees
                    required: true
                  dueDate:
                    type: string
                    description: Enter Date ("2023-01-01")
                    required: false
              heads:
                type: array
                description: Enter "[{ "name": "Library Fees", "price": 1000 }, {"name": "Tution Fees", "price": 1000}]"
                required: true
              did:
                type: string
                description: Enter Department ID for Department
                required: true
              hid:
                type: string
                description: Enter Hostel ID for Hostel
                required: true
      responses:
        "200":
          description: OK


  /api/v1/finance/fee/structure/{fsid}/retro/query:
    patch:
      tags:
        - New Flow Finance + Admission
      summary: Update Fees Structure By Finance (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fsid
          required: true
          type: string
          description: Enter Fees Structure Id
        - in: query
          name: flow
          required: true
          type: string
          description: Enter for Finance ("Finance_Manager" || "Hostel_Manager")
        - in : body
          name: body
          schema:
            type: object
            properties:
              category_master:
                type: string
                description: Enter Fees Category Id
                required: true
              class_master:
                type: string
                description: Enter Class Master Id
                required: true
              due_date:
                type: string
                description: Enter Due Date ("2023-01-02")
                required: false
              total_admission_fees:
                type: number
                description: Enter Admission Fees
                required: true
              total_installments:
                type: string
                description: Enter Total Installments
                required: true
              one_installments:
                type: object
                properties:
                  fees:
                    type: number
                    description: Enter Fees
                    required: true
                  dueDate:
                    type: string
                    description: Enter Date ("2023-01-01")
                    required: false
              heads:
                type: array
                description: Enter "[{ "name": "Library Fees", "price": 1000 }, {"name": "Tution Fees", "price": 1000}]"
                required: true
      responses:
        "200":
          description: OK

  /api/v1/finance/depart/{did}/all/fee/structure:
    get:
      tags:
        - New Flow Finance + Admission
      summary: Get All Fees Structures (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: Enter Department Id
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
        - in: query
          name: filter_by
          required: false
          type: string
          description: Enter Class Master ID from Admission Side
      responses:
        "200":
          description: OK

  
  /api/v1/finance/one/{fsid}/structure:
    get:
      tags:
        - New Flow Finance + Admission
      summary: Get One Fees Structures (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fsid
          required: true
          type: string
          description: Enter Fees Structure Id
      responses:
        "200":
          description: OK

  
  /api/v1/finance/{fid}/all/exempt/query:
    get:
      tags:
        - New Flow Finance + Admission
      summary: Get All Exempted Array (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: Enter Finance Id
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
      responses:
        "200":
          description: OK

  /api/v1/finance/{fid}/all/government/query:
    get:
      tags:
        - New Flow Finance + Admission
      summary: Get All Government Grants Array (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: Enter Finance Id
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
      responses:
        "200":
          description: OK


  /api/v1/finance/{frid}/one/receipt:
    get:
      tags:
        - New Flow Finance + Admission
      summary: Get One Receipt Query Response Changed @Birat (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: frid
          required: true
          type: string
          description: Enter Fee Receipt Id
      responses:
        "200":
          description: OK

  Old Admission Select Student API Same as:
    post:
      tags:
        - New Flow Finance + Admission
      summary: Get Select Student API Same as fee_struct (verified)
      consumes:
        - application/json
      produces:
        - application/json
        - in : body
          name: body
          schema:
            type: object
            properties:
              fee_struct:
                type: string
                description: Enter Fee Structure Id
                required: true
      parameters:
      responses:
        "200":
          description: OK

  Old Admission Mode Selection By Student Side:
    post:
      tags:
        - New Flow Finance + Admission
      summary: Select Mode From Student Side if mode is cash pass fee_payment_mode "By Cash" other no mention fields are required (verified)
      consumes:
        - application/json
      produces:
        - application/json
        - in : body
          name: body
          schema:
            type: object
            properties:
              fee_payment_mode:
                type: string
                description: Enter Fee Mode ("By Cash") || ("UPI Transfer") || ("Demand Draft") || ("Cheque") || ("RTGS/NEFT/IMPS")
                required: false
              fee_payment_amount:
                type: number
                description: Enter Amount
                required: false
              transaction_date:
                type: string
                description: Enter Date Like ("2023-02-02")
                required: false
              fee_bank_name:
                type: string
                description: Enter Bank Name e.g SBI
                required: false
              fee_bank_holder:
                type: string
                description: Enter Bank Holder Name e.g Mithkal
                required: false
              fee_utr_reference:
                type: string
                description: Enter Fee Unique Transaction Reference Number (UTR)
                required: false
      parameters:
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/all/receipts/by:
    get:
      tags:
        - New Flow Finance + Admission
      summary: Get All Requested Receipts || Approved Receipts || Rejected Receipts (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: Enter Admission Id
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
        - in: query
          name: filter_by
          required: true
          type: string
          description: Enter Filter Query for ("ALL_REQUEST") || ("ALL_APPROVE") || ("ALL_REJECT")
        - in: query
          name: over_filter
          required: false
          type: string
          description: Enter Application Department ID
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/one/receipts/{rid}/status:
    patch:
      tags:
        - New Flow Finance + Admission
      summary: Update One Receipts By Admission Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: Enter Admission Id
        - in: path
          name: rid
          required: true
          type: string
          description: Enter Receipt Id
        - in: query
          name: status
          required: true
          type: string
          description: Enter Status As Mention for Operation ("Approved") || ("Rejected") || ("Over_Rejection") || ("Rejection_Notify")
        - in: query
          name: reqId
          required: true
          type: string
          description: Enter Receipts Holding Document Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              reason:
                type: string
                description: Enter Reason if Receipt is going for Rejected
                required: false
      responses:
        "200":
          description: OK

  /api/v1/admission/{sid}/re/apply/receipts/{rid}:
    patch:
      tags:
        - New Flow Finance + Admission
      summary: Re-Apply Receipt From Student Application Status Tab Receipt Content is Updated not created (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: Enter Status Id
        - in: path
          name: rid
          required: true
          type: string
          description: Enter Receipt Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              fee_payment_mode:
                type: string
                description: Enter Fee Mode ("By Cash") || ("UPI Transfer") || ("Demand Draft") || ("Cheque") || ("RTGS/NEFT/IMPS")
                required: false
              fee_payment_amount:
                type: number
                description: Enter Amount
                required: false
              transaction_date:
                type: string
                description: Enter Date Like ("2023-02-02")
                required: false
              fee_bank_name:
                type: string
                description: Enter Bank Name e.g SBI
                required: false
              fee_bank_holder:
                type: string
                description: Enter Bank Holder Name e.g Mithkal
                required: false
              fee_utr_reference:
                type: string
                description: Enter Fee Unique Transaction Reference Number (UTR)
                required: false
      responses:
        "200":
          description: OK

  Old Admission Pay Offline Confirm Same as:
    post:
      tags:
        - New Flow Finance + Admission
      summary: Old Pay Offline Confirm API all previous things + add body content (verified)
      consumes:
        - application/json
      produces:
        - application/json
        - in : body
          name: body
          schema:
            type: object
            properties:
              fee_payment_mode:
                type: string
                description: Enter Fee Mode ("By Cash") || ("UPI Transfer") || ("Demand Draft") || ("Cheque") || ("RTGS/NEFT/IMPS")
                required: false
              fee_payment_amount:
                type: number
                description: Enter Amount
                required: false
              transaction_date:
                type: string
                description: Enter Date Like ("2023-02-02")
                required: false
              fee_bank_name:
                type: string
                description: Enter Bank Name e.g SBI
                required: false
              fee_bank_holder:
                type: string
                description: Enter Bank Holder Name e.g Mithkal
                required: false
              fee_utr_reference:
                type: string
                description: Enter Fee Unique Transaction Reference Number (UTR)
                required: false
      parameters:
      responses:
        "200":
          description: OK

  Old Admission Collect Docs Type is pass for One Time Fees Same as for Installment:
    get:
      tags:
        - New Flow Finance + Admission
      summary: Old Collect Docs Type is pass for One Time Fees Same as for Installment (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
      responses:
        "200":
          description: OK

  Old Admission Cancel & Refund API Same as:
    post:
      tags:
        - New Flow Finance + Admission
      summary: Old Cancel & Refund API all previous things + add body content (verified)
      consumes:
        - application/json
      produces:
        - application/json
        - in : body
          name: body
          schema:
            type: object
            properties:
              fee_payment_mode:
                type: string
                description: Enter Fee Mode ("By Cash") || ("UPI Transfer") || ("Demand Draft") || ("Cheque") || ("RTGS/NEFT/IMPS")
                required: false
              fee_payment_amount:
                type: number
                description: Enter Amount
                required: false
              transaction_date:
                type: string
                description: Enter Date Like ("2023-02-02")
                required: false
              fee_bank_name:
                type: string
                description: Enter Bank Name e.g SBI
                required: false
              fee_bank_holder:
                type: string
                description: Enter Bank Holder Name e.g Mithkal
                required: false
              fee_utr_reference:
                type: string
                description: Enter Fee Unique Transaction Reference Number (UTR)
                required: false
      parameters:
      responses:
        "200":
          description: OK

  Old Admission All Admission Fees At Fees Data TAB Same as:
    get:
      tags:
        - New Flow Finance + Admission
      summary: Old All Admission Fees At Fees Data TAB response is changed (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
      responses:
        "200":
          description: OK


  Old Admission Mark Remaining Fees API at Fees Data Tab Same as:
    post:
      tags:
        - New Flow Finance + Admission
      summary: Old Mark Remaining Fees API at Fees Data Tab all previous things + add body content (verified)
      consumes:
        - application/json
      produces:
        - application/json
        - in : body
          name: body
          schema:
            type: object
            properties:
              fee_payment_mode:
                type: string
                description: Enter Fee Mode ("By Cash") || ("UPI Transfer") || ("Demand Draft") || ("Cheque") || ("RTGS/NEFT/IMPS") || ("Exempted/Unrecovered") || ("Government/Scholarship")
                required: false
              fee_payment_amount:
                type: number
                description: Enter Amount
                required: false
              transaction_date:
                type: string
                description: Enter Date Like ("2023-02-02")
                required: false
              fee_bank_name:
                type: string
                description: Enter Bank Name e.g SBI
                required: false
              fee_bank_holder:
                type: string
                description: Enter Bank Holder Name e.g Mithkal
                required: false
              fee_utr_reference:
                type: string
                description: Enter Fee Unique Transaction Reference Number (UTR)
                required: false
      parameters:
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/trigger/alarm:
    post:
      tags:
        - New Flow Finance + Admission
      summary: Create a new Alarm only 3 Attempts - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: Enter Admission Id
        - in: query
          name: alarm_mode
          required: true
          type: string
          description: Enter Alarm Mode ("APP_NOTIFICATION" || "EMAIL_NOTIFICATION" || "SMS_NOTIFICATION")
        - in: query
          name: content
          required: true
          type: string
          description: Enter Content For Alarm Mode ("EMAIL_NOTIFICATION" || "SMS_NOTIFICATION")
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/select/student/mode/{sid}:
    post:
      tags:
        - New Flow Finance + Admission
      summary: Confirm Student Mode By Admission Admin - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: Enter Application Id
        - in: path
          name: sid
          required: true
          type: string
          description: Enter Student Id
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/cancel/select/student/{sid}:
    post:
      tags:
        - New Flow Finance + Admission
      summary: Cancel Student Admission Mode By Admission Admin - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: Enter Application Id
        - in: path
          name: sid
          required: true
          type: string
          description: Enter Student Id
      responses:
        "200":
          description: OK

  /api/v1/finance/{fid}/update/payment/mode:
    patch:
      tags:
        - New Flow Finance + Admission
      summary: Update Finance Payment Modes for Students - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: Enter Finance Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              payment_modes_type:
                type: object
                properties:
                  cash:
                    type: boolean
                    description: Default Cash To true update to false if not required
                    required: false
                  upi_transfer:
                    type: boolean
                    description: Default UPI Transfer To true update to false if not required
                    required: false
                  net_banking:
                    type: boolean
                    description: Default Netbanking To true update to false if not required
                    required: false
                  cheque:
                    type: boolean
                    description: Default Cheque To true update to false if not required
                    required: false
                  demand_draft:
                    type: boolean
                    description: Default Demand Draft To true update to false if not required
                    required: false
      responses:
        "200":
          description: OK

  /api/v1/finance/{fid}/all/bank/details:
    get:
      tags:
        - New Flow Finance + Admission
      summary: get Finance Payment Modes + Bank Details for Students Side Response Changed @Ankush, @Tushar - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: Enter Finance Id
        - in: query
          name: filter_by
          required: true
          type: string
          description: Enter Flow ID
        - in: query
          name: flow
          required: true
          type: string
          description: Enter Flow Status ("Department" || "Transport" || "Library")
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/student/{sid}/edit/structure:
    patch:
      tags:
        - New Flow Finance + Admission
      summary: Edit Fee Structure After Select by the Admission Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id 
        - in: path
          name: aid
          required: true
          type: string
          description: This is Application id 
        - in: body
          name: body
          schema:
            type: object
            required:
              - fee_struct
            properties:
              fee_struct:
                type: string
                description: Enter Fee Structure Id
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/add/document/flow:
    post:
      tags:
        - New Flow Finance + Admission
      summary: Add Required Documents by the Admission Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Admission id 
        - in: body
          name: body
          schema:
            type: object
            required:
              - doc_name
              - doc_key
            properties:
              doc_name:
                type: string
                description: Enter Document Name
              doc_key:
                type: string
                description: Enter Document Key
              applicable_to:
                type: string
                description: Enter Applicable To
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/all/document/array:
    get:
      tags:
        - New Flow Finance + Admission
      summary: Get All Required Documents by the Admission Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Admission id 
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/edit/document/flow:
    patch:
      tags:
        - New Flow Finance + Admission
      summary: Update Existing Required Documents by the Admission Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Admission id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              doc:
                type: object
                properties:
                  id:
                    type: string
                    description: Enter Document "_id"
                    required: true
                  name:
                    type: string
                    description: Enter Changed Document Name
                    required: true
                  newKey:
                    type: string
                    description: send existing old key if no new document is available
                    required: true
                  applicable_to:
                    type: string
                    description: Enter Applicable To
                    required: true
                  oldKey:
                    type: string
                    description: if available New Upload Document Key if available then send existing old key
                    required: true
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/delete/document/{docId}:
    delete:
      tags:
        - New Flow Finance + Admission
      summary: Delete Existing Required Document by the Admission Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Admission id 
        - in: path
          name: docId
          required: true
          type: string
          description: This is Document id 
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/paid/remaining/fee/{sid}/student/{appId}/refund/by:
    patch:
      tags:
        - New Flow Finance + Admission
      summary: Mark Refund Fee paid by Admission Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Admission id 
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id
        - in: path
          name: appId
          required: true
          type: string
          description: This is Application id
        - in: body
          name: body
          schema:
            type: object
            required:
              - amount
              - mode
            properties:
              amount:
                type: number
                description: Enter amount
              mode:
                type: string
                description: Enter payment mode ("Online" | "Offline")
              fee_payment_mode:
                type: string
                description: Default "Refunded"
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/refund/array:
    get:
      tags:
        - New Flow Finance + Admission
      summary: All Refund List - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: Enter Admission Id
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit Number
        - in: query
          name: search
          required: true
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK

  /api/v1/admission/{sid}/fees:
    get:
      tags:
        - New Flow Finance + Admission
      summary: Get All Fees by the Admission Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student ID 
      responses:
        "200":
          description: OK

  /api/v1/admission/paid/government/grant/fee/{sid}/student/{appId}:
    post:
      tags:
        - New Flow Finance + Admission
      summary: Mark Government Grant Fee paid by Finance Manager + add body content (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id
        - in: path
          name: appId
          required: true
          type: string
          description: This is Application id
        - in : body
          name: body
          schema:
            type: object
            properties:
              fee_payment_mode:
                type: string
                description: Enter Fee Mode ("Government/Scholarship")
                required: false
              fee_payment_amount:
                type: number
                description: Enter Amount
                required: false
              transaction_date:
                type: string
                description: Enter Date Like ("2023-02-02")
                required: false
              fee_bank_name:
                type: string
                description: Enter Bank Name e.g SBI
                required: false
              fee_bank_holder:
                type: string
                description: Enter Bank Holder Name e.g Mithkal
                required: false
              fee_utr_reference:
                type: string
                description: Enter Fee Unique Transaction Reference Number (UTR)
                required: false
              amount:
                type: number
                description: Enter amount
              mode:
                type: string
                description: Enter payment mode ("Online" | "Offline" | "Exempted")
              type:
                type: string
                description: Enter Installment Value
              scid:
                type: string
                description: Enter ScholarShip ID
                required: true
      responses:
        "200":
          description: OK

  /api/v1/admission/{rid}/remark/query:
    patch:
      tags:
        - New Flow Finance + Admission
      summary: Update Remark By Admission Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: rid
          required: true
          type: string
          description: This is Remaining List Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              remark:
                type: string
                description: Enter remark
                required: true
      responses:
        "200":
          description: OK

  /api/v1/admission/{sid}/go/offline/receipt/{appId}:
    patch:
      tags:
        - New Flow Finance + Admission
      summary: Request for Offline Procedure (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student Id
        - in: path
          name: appId
          required: true
          type: string
          description: This is Application Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              fee_payment_type:
                type: string
                description: Enter payment Type (i.e installmentValue)
                required: true
              fee_payment_mode:
                type: string
                description: Enter payment Mode except "By Cash"
                required: true
              fee_payment_amount:
                type: number
                description: Enter payment Amount
                required: true
              transaction_date:
                type: string
                description: Enter Date ("2023-02-02")
                required: true
              fee_bank_name:
                type: string
                description: Enter Bank Name e.g SBI
                required: false
              fee_bank_holder:
                type: string
                description: Enter Bank Holder Name e.g Mithkal
                required: false
              fee_utr_reference:
                type: string
                description: Enter Fee Unique Transaction Reference Number (UTR)
                required: false
              rid:
                type: string
                description: Enter Remaining List ID
                required: true
              raid:
                type: string
                description: Enter Remaining Array ID i.e coming from installmentValue Card
                required: true
      responses:
        "200":
          description: OK

  /api/v1/finance/fee/structure/{fsid}/retro/delete:
    delete:
      tags:
        - New Flow Finance + Admission
      summary: Delete Fees Structure By Finance Manager (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fsid
          required: true
          type: string
          description: This is Fee Structure Id
        - in: query
          name: flow
          required: true
          type: string
          description: Enter for Finance ("Finance_Manager" || "Hostel_Manager")
      responses:
        "200":
          description: OK

  /api/v1/finance/{fcid}/fee/category/delete/query:
    delete:
      tags:
        - New Flow Finance + Admission
      summary: Delete Fees Category By Finance Manager (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fcid
          required: true
          type: string
          description: This is Fee Category Id
      responses:
        "200":
          description: OK

  /api/v1/finance/{fid}/fee/master/new:
    post:
      tags:
        - New Flow Finance + Admission
      summary: New Master Head By Finance Manager (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This is Finance Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              master_name:
                type: string
                description: Enter Master Head Name
                required: true
              master_amount:
                type: number
                description: Enter Master Price
                required: true
      responses:
        "200":
          description: OK

  /api/v1/finance/{fid}/all/master/head/query:
    get:
      tags:
        - New Flow Finance + Admission
      summary: Get All Master Head By Finance Manager (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This is Finance Id
        - in: query
          name: page
          required: true
          type: string
          description: This is Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: This is Limit
        - in: query
          name: search
          required: false
          type: string
          description: This is Search Query
      responses:
        "200":
          description: OK
  
  /api/v1/finance/fee/master/{fmid}/edit/query:
    patch:
      tags:
        - New Flow Finance + Admission
      summary: Edit Master Head By Finance Manager (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fmid
          required: true
          type: string
          description: This is Master Head Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              master_name:
                type: string
                description: Enter Master Head Name
                required: true
              master_amount:
                type: number
                description: Enter Master Price
                required: true
      responses:
        "200":
          description: OK

  
  /api/v1/finance/{fid}/fee/master/{fmid}/destroy/query:
    delete:
      tags:
        - New Flow Finance + Admission
      summary: Delete Master Head By Finance Manager (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This is Finance Id
        - in: path
          name: fmid
          required: true
          type: string
          description: This is Master Head ID
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/all/structures:
    get:
      tags:
        - New Flow Finance + Admission
      summary: All Fee Structure By Admission Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Admission Id
      responses:
        "200":
          description: OK

#Events & Seminars

  /api/v1/event/process/ins/{id}/staff/{sid}/manager:
    post:
      tags:
        - Event Manager Query
      summary: Activate Event Manager / Administrator (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This Institute ID
        - in: path
          name: sid
          required: true
          type: string
          description: This Staff ID
      responses:
        "200":
          description: OK

  /api/v1/event/process/manager/{eid}:
    get:
      tags:
        - Event Manager Query
      summary: Get Master Data from Event Manager (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: eid
          required: true
          type: string
          description: This Event Manager Module ID
      responses:
        "200":
          description: OK

  /api/v1/event/process/manager/{eid}/all/events:
    get:
      tags:
        - Event Manager Query
      summary: Get All Events from Event Manager (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: eid
          required: true
          type: string
          description: This Event Manager Module ID
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit Number
        - in: query
          name: search
          required: false
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK

  /api/v1/event/process/manager/{eid}/all/seminars:
    get:
      tags:
        - Event Manager Query
      summary: Get All Seminars from Event Manager (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: eid
          required: true
          type: string
          description: This Event Manager Module ID
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit Number
        - in: query
          name: search
          required: false
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK

  /api/v1/event/process/department/{did}/all/events:
    get:
      tags:
        - Event Manager Query
      summary: Get All Events from Department Side (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This Department Module ID
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit Number
        - in: query
          name: search
          required: false
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK

  /api/v1/event/process/department/{did}/all/seminars:
    get:
      tags:
        - Event Manager Query
      summary: Get All Seminars from Department Side (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This Department Module ID
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit Number
        - in: query
          name: search
          required: false
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK

  /api/v1/event/process/one/event/{evid}:
    get:
      tags:
        - Event Manager Query
      summary: Get One Event Details Query (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: evid
          required: true
          type: string
          description: This Event ID
      responses:
        "200":
          description: OK

  /api/v1/event/process/one/seminar/{smid}:
    get:
      tags:
        - Event Manager Query
      summary: Get One Seminar Details Query (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: smid
          required: true
          type: string
          description: This Seminar ID
      responses:
        "200":
          description: OK

  /api/v1/event/process/manager/{eid}/new/event:
    post:
      tags:
        - Event Manager Query
      summary: New Event By Event Manager (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: eid
          required: true
          type: string
          description: This Event Manager Module ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              event_name:
                type: string
                description: Enter Event Name / Title
                required: true
              event_guest:
                type: string
                description: Enter Guest Optional
                required: false
              event_date:
                type: string
                description: Enter Date Like ("2023-02-02")
                required: true
              event_time:
                type: string
                description: Enter Time Like ("13:10")
                required: true
              event_place:
                type: string
                description: Enter Event Place / Location
                required: false
              event_description:
                type: string
                description: Enter Event Description
                required: false
              event_banner:
                type: string
                description: Enter Banner KEY
                required: false
              depart:
                type: array
                description: Enter Array of Department ID's ["823487328748", "987348973878"]
                required: true
      responses:
        "200":
          description: OK

  /api/v1/event/process/manager/{eid}/new/seminar:
    post:
      tags:
        - Event Manager Query
      summary: New Seminar By Event Manager (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: eid
          required: true
          type: string
          description: This Event Manager Module ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              seminar_name:
                type: string
                description: Enter Event Name / Title
                required: true
              seminar_guest:
                type: string
                description: Enter Guest
                required: true
              seminar_date:
                type: string
                description: Enter Date Like ("2023-02-02")
                required: true
              seminar_time:
                type: string
                description: Enter Time Like ("13:10")
                required: true
              seminar_place:
                type: string
                description: Enter Seminar Place / Location if seminar mode is OFFLINE
                required: false
              seminar_joining_link:
                type: string
                description: Enter Seminar Joining LINK if seminar mode is Virtual / ONline
                required: false
              seminar_mode:
                type: string
                description: Enter Seminar Mode  ("Offline" || "Online" || "Virtual")
                required: true
              seminar_description:
                type: string
                description: Enter Seminar Description
                required: false
              seminar_banner:
                type: string
                description: Enter Banner KEY
                required: false
              depart:
                type: array
                description: Enter Array of Department ID's ["823487328748", "987348973878"]
                required: true
      responses:
        "200":
          description: OK

  /api/v1/event/process/one/event/{eid}/destroy:
    delete:
      tags:
        - Event Manager Query
      summary: Delete One Event By Event Manager (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: eid
          required: true
          type: string
          description: This Event ID
      responses:
        "200":
          description: OK

  /api/v1/event/process/one/seminar/{smid}/destroy:
    delete:
      tags:
        - Event Manager Query
      summary: Delete One Seminar By Event Manager (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: smid
          required: true
          type: string
          description: This Seminar ID
      responses:
        "200":
          description: OK

  /api/v1/event/process/one/seminar/{smid}/edit:
    patch:
      tags:
        - Event Manager Query
      summary: Edit Seminar By Event Manager (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: smid
          required: true
          type: string
          description: This Seminar ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              seminar_name:
                type: string
                description: Enter Event Name / Title
                required: true
              seminar_guest:
                type: string
                description: Enter Guest
                required: true
              date:
                type: string
                description: Enter new Date Date Like ("2023-02-02")
                required: false
              time:
                type: string
                description: Enter new Time Time Like ("13:10")
                required: false
              seminar_place:
                type: string
                description: Enter Seminar Place / Location if seminar mode is OFFLINE
                required: false
              seminar_joining_link:
                type: string
                description: Enter Seminar Joining LINK if seminar mode is Virtual / ONline
                required: false
              seminar_mode:
                type: string
                description: Enter Seminar Mode  ("Offline" || "Online" || "Virtual")
                required: true
              seminar_description:
                type: string
                description: Enter Seminar Description
                required: false
              seminar_banner:
                type: string
                description: Enter new Banner KEY
                required: false
              delete_pic:
                type: string
                description: Enter old Banner KEY
                required: false
              deletedepart:
                type: array
                description: Enter Array of old remove / unselect Department ID's ["823487328748", "987348973878"]
                required: false
              new_depart:
                type: array
                description: Enter Array of new add Department ID's ["823487328748", "987348973878"]
                required: false
      responses:
        "200":
          description: OK
        
  /api/v1/event/process/one/event/{eid}/edit:
    patch:
      tags:
        - Event Manager Query
      summary: Edit Event By Event Manager (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: eid
          required: true
          type: string
          description: This Event ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              event_name:
                type: string
                description: Enter Event Name / Title
                required: true
              event_guest:
                type: string
                description: Enter Guest
                required: true
              date:
                type: string
                description: Enter new Date Date Like ("2023-02-02")
                required: false
              time:
                type: string
                description: Enter new Time Time Like ("13:10")
                required: false
              event_place:
                type: string
                description: Enter Event Place / Location
                required: false
              event_description:
                type: string
                description: Enter Event Description
                required: false
              event_banner:
                type: string
                description: Enter new Banner KEY
                required: false
              delete_pic:
                type: string
                description: Enter old Banner KEY
                required: false
              deletedepart:
                type: array
                description: Enter Array of old remove / unselect Department ID's ["823487328748", "987348973878"]
                required: false
              new_depart:
                type: array
                description: Enter Array of new add Department ID's ["823487328748", "987348973878"]
                required: false
      responses:
        "200":
          description: OK


#Upload Excel and Process Data

  /api/v1/extra/excel/to/json/query/{cid}:
    patch:
      tags:
        - Process Excel + Database Processing
      summary: Upload One Excel File To Directly Current Class (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This Class ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              excel_file:
                type: string
                description: Enter Key here
                required: true
      responses:
        "200":
          description: OK

  /api/v1/extra/excel/to/json/query/fee/category/{fid}:
    patch:
      tags:
        - Process Excel + Database Processing
      summary: Upload One Excel File for Fee Category To Directly Finance Manager (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This Finance ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              excel_file:
                type: string
                description: Enter Key here
                required: true
      responses:
        "200":
          description: OK

  /api/v1/extra/excel/to/json/{aid}/query/scholarship/{scid}:
    patch:
      tags:
        - Process Excel + Database Processing
      summary: Upload One Excel File for Fee Category To Directly Finance Manager (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This Admission ID
        - in: path
          name: scid
          required: true
          type: string
          description: This Scholar Ship ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              excel_file:
                type: string
                description: Enter Key here
                required: true
      responses:
        "200":
          description: OK

  /api/v1/extra/excel/to/json/{id}/query/scholarship/gr/batch:
    patch:
      tags:
        - Process Excel + Database Processing
      summary: Upload One Excel File for Fee Category To Directly Finance Manager (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This Institute ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              excel_file:
                type: string
                description: Enter Key here
                required: true
      responses:
        "200":
          description: OK

  /api/v1/extra/excel/to/json/{lid}/add/book/query:
    patch:
      tags:
        - Process Excel + Database Processing
      summary: Upload One Excel File for Upload New Book By Librarian (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: lid
          required: true
          type: string
          description: This Library ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              excel_file:
                type: string
                description: Enter Key here
                required: true
      responses:
        "200":
          description: OK

  /api/v1/extra/excel/to/json/query/fee/head/master/{fid}:
    patch:
      tags:
        - Process Excel + Database Processing
      summary: Upload One Excel File for Fee Head Master To Directly Finance Manager (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This Finance ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              excel_file:
                type: string
                description: Enter Key here
                required: true
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/all/export/excel/array:
    get:
      tags:
        - Process Excel + Database Processing
      summary: All Exported Excel Downloadable File (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This Admission ID
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/export/excel/{exid}/edit:
    patch:
      tags:
        - Process Excel + Database Processing
      summary: Edit One Exported Excel Downloadable File (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: exid
          required: true
          type: string
          description: This Export Excel ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              excel_file_name:
                type: string
                description: Enter Name Here
                required: true
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/export/excel/{exid}/destroy/query:
    delete:
      tags:
        - Process Excel + Database Processing
      summary: Delete One Exported Excel Downloadable File By Admission Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This Admission ID
        - in: path
          name: exid
          required: true
          type: string
          description: This Export Excel ID
      responses:
        "200":
          description: OK

  /api/v1/extra/excel/to/json/{id}/staff/query:
    patch:
      tags:
        - Process Excel + Database Processing
      summary: Upload One Excel File To Directly Institute (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: Enter Institute Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              excel_file:
                type: string
                description: Enter Key here
                required: true
      responses:
        "200":
          description: OK

  /api/v1/extra/excel/to/json/{id}/un/approved/student/query:
    patch:
      tags:
        - Process Excel + Database Processing
      summary: Upload One Excel File To Directly Un Approved Institute (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: Enter Institute Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              excel_file:
                type: string
                description: Enter Key here
                required: true
      responses:
        "200":
          description: OK


  /api/v1/extra/excel/to/json/query/{sid}/chapter/query:
    patch:
      tags:
        - Process Excel + Database Processing
      summary: Upload One Excel File To Directly Subject Chapter (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid 
          required: true
          type: string
          description: Enter Subject Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              excel_file:
                type: string
                description: Enter Key here
                required: true
      responses:
        "200":
          description: OK

  /api/v1/finance/{id}/all/export/excel/array:
    get:
      tags:
        - Process Excel + Database Processing
      summary: All Exported Excel Downloadable File (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This Institute Admin ID
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
      responses:
        "200":
          description: OK

  /api/v1/finance/{id}/export/excel/{exid}/edit:
    patch:
      tags:
        - Process Excel + Database Processing
      summary: Edit One Exported Excel Downloadable File (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: exid
          required: true
          type: string
          description: This Export Excel ID
        - in: path
          name: id
          required: true
          type: string
          description: This Institute Admin ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              excel_file_name:
                type: string
                description: Enter Name Here
                required: true
      responses:
        "200":
          description: OK

  /api/v1/finance/{id}/export/excel/{exid}/destroy/query:
    delete:
      tags:
        - Process Excel + Database Processing
      summary: Delete One Exported Excel Downloadable File By Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This Institute Admin ID
        - in: path
          name: exid
          required: true
          type: string
          description: This Export Excel ID
      responses:
        "200":
          description: OK

# New Filter

  /api/v1/feed/filter/pending/fee/{aid}:
    patch:
      tags:
        - New Custom Filter
      summary: Get All Filtered Student Pending Fees (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Admission ID
        - in: query
          name: gender
          required: false
          type: string
          description: This is Gender ("Male" || "Female" || "Other")
        - in: query
          name: category
          required: false
          type: string
          description: This is Cast Category 
        - in: query
          name: is_all
          required: false
          type: string
          description: This is ("false" || "true")
        - in: query
          name: all_depart
          required: false
          type: string
          description: This is All Department ("All" || "Particular")
        - in: query
          name: batch_status
          required: false
          type: string
          description: This is ("All" || "Current")
        - in : body
          name: body
          schema:
            type: object
            properties:
              depart:
                type: string
                description: Enter Department ID if all_depart is "Particular"
                required: true
              batch:
                type: string
                description: Enter Batch ID if all_depart is "Particular"
                required: true
              master:
                type: string
                description: Enter Array of Object ID's if all_depart is "Particular"
                required: false
              fee_struct:
                type: string
                description: Enter Fee Category ID
                required: false
      responses:
        "200":
          description: OK


  /api/v1/feed/filter/transaction/history/{id}:
    get:
      tags:
        - New Custom Filter
      summary: Get All Transaction History (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute ID
        - in: query
          name: tab_flow
          required: true
          type: string
          description: This is Tab Flow ("BY_DATE" || "BY_FEE_TYPE" || "BY_EXPENSES" || "BY_INCOMES")
        - in: query
          name: timeline
          required: true
          type: string
          description: This is TimeLine ("true" || "false") 
        - in: query
          name: timeline_content
          required: false
          type: string
          description: This is TimeLine Content if timeline is true ("Past Week" || "Past Month" || "Past Year")
        - in: query
          name: from
          required: false
          type: string
          description: This is From Date Like ("2023-02-02") if timeline is false
        - in: query
          name: to
          required: false
          type: string
          description: This is To Date Like ("2023-02-02") if timeline is false
        - in: query
          name: fee_type
          required: false
          type: string
          description: This is Fees Type ("Admission Fees" || "Expense" || "Income" || "Internal Fees") if Tab Flow is "BY_FEE_TYPE"
        - in: query
          name: fee_mode
          required: false
          type: string
          description: This is Fees Mode ("Online" || "Offline" || "By Bank" || "By Cash") if Tab Flow is "BY_FEE_TYPE"
      responses:
        "200":
          description: OK


  /api/v1/feed/filter/heads/by/{fsid}:
    get:
      tags:
        - New Custom Filter
      summary: Get All Student Fee Heads By Fee Structure + Department + Application (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fsid
          required: true
          type: string
          description: This is Fee Structure ID
        - in: query
          name: depart
          required: true
          type: string
          description: This is Department ID
        - in: query
          name: appId
          required: true
          type: string
          description: This is Application ID
      responses:
        "200":
          description: OK


  /api/v1/feed/filter/heads/by/{fid}/receipt/query:
    get:
      tags:
        - New Custom Filter
      summary: Get All Student Fee Receipts Heads By Finance + Narration (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This is Finance ID
        - in: query
          name: fsid
          required: false
          type: string
          description: This is Fee Structure ID
        - in: query
          name: depart
          required: false
          type: string
          description: This is Department ID
        - in: query
          name: timeline
          required: true
          type: string
          description: This is Time Line pass ("true" || "false")
        - in: query
          name: timeline_content
          required: false
          type: string
          description: This is Time Line Content if timeline is true then pass
        - in: query
          name: from
          required: false
          type: string
          description: This is From Date ("2023-02-02") if timeline is false then pass
        - in: query
          name: to
          required: false
          type: string
          description: This is To Date ("2023-02-11") if timeline is false then pass
      responses:
        "200":
          description: OK


#Landing Career

  /api/v1/landing/ins/{id}/activate:
    post:
      tags:
        - Landing Career Page Query
      summary: Activate Career Module By Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This Institute Admin ID
      responses:
        "200":
          description: OK

  /api/v1/landing/one/career/{lcid}:
    get:
      tags:
        - Landing Career Page Query
      summary: One Career Module Details By Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: lcid
          required: true
          type: string
          description: This Landing Career Module ID
      responses:
        "200":
          description: OK

  /api/v1/landing/one/career/{lcid}/new/vacancy:
    post:
      tags:
        - Landing Career Page Query
      summary: New Vacancies Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: lcid
          required: true
          type: string
          description: This Landing Career Module ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              vacancy_job_type:
                type: string
                description: Enter Vacancy JOB Type ("Administrative Job" || "Teaching Job" || "Other")
                required: true
              vacancy_position:
                type: string
                description: Enter Vacancy Position
                required: true
              vacancy_package:
                type: number
                description: Enter Vacancy Package
                required: false
              vacancy_about:
                type: string
                description: Enter Vacancy Description
                required: false
              vacancy_banner:
                type: string
                description: Enter Vacancy Banner Key
                required: false
              department:
                type: string
                description: Enter Department Id
                required: true
      responses:
        "200":
          description: OK

  /api/v1/landing/one/career/{lcid}/all/vacancy:
    get:
      tags:
        - Landing Career Page Query
      summary: All Career Module Vacancies Details By Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: lcid
          required: true
          type: string
          description: This Landing Career Module ID
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
        - in: query
          name: status
          required: true
          type: string
          description: Enter Status ("Ongoing" || "Completed")
      responses:
        "200":
          description: OK

  /api/v1/landing/one/vacancy/{vid}/status:
    patch:
      tags:
        - Landing Career Page Query
      summary: Mark One Vacancies Completed By Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: vid
          required: true
          type: string
          description: This Vacancy ID
      responses:
        "200":
          description: OK
  
  /api/v1/landing/one/vacancy/{vid}/query:
    get:
      tags:
        - Landing Career Page Query
      summary: One Vacancies (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: vid
          required: true
          type: string
          description: This Vacancy ID
      responses:
        "200":
          description: OK

  /api/v1/landing/one/vacancy/{vid}/apply:
    patch:
      tags:
        - Landing Career Page Query
      summary: Apply On Vacancies Completed By Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: vid
          required: true
          type: string
          description: This Vacancy ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              endUserName:
                type: string
                description: Enter name here
                required: true
              endUserEmail:
                type: string
                description: Enter email here
                required: true
              endUserPhoneNumber:
                type: string
                description: Enter Phone Number
                required: true
              endUserAddress:
                type: string
                description: Enter address here
                required: true
              endUserResume:
                type: string
                description: Enter Resume Key
                required: true
              endUserDOB:
                type: string
                description: Enter DOB here
                required: true
      responses:
        "200":
          description: OK

  /api/v1/landing/one/vacancy/{vid}/all/applications:
    get:
      tags:
        - Landing Career Page Query
      summary: All Applications By Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: vid
          required: true
          type: string
          description: This Vacancy Module ID
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
        - in: query
          name: search
          required: true
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK

  /api/v1/landing/one/app/schedule/{acid}:
    patch:
      tags:
        - Landing Career Page Query
      summary: One Application Schedule By Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: acid
          required: true
          type: string
          description: This Applicant Candidate ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              interview_type:
                type: string
                description: Enter Type ("Virtual Interview" || "In Person Interview")
                required: true
              interview_date:
                type: string
                description: Enter date ("2023-02-02")
                required: true
              interview_time:
                type: string
                description: Enter Time ("18:10")
                required: true
              interview_link:
                type: string
                description: Enter Link if (type is "Virtual")
                required: false
              interview_place:
                type: string
                description: Enter place here (if type is "In Person")
                required: false
              interview_guidelines:
                type: string
                description: Enter Guide Line
                required: false
      responses:
        "200":
          description: OK

  /api/v1/landing/one/vacancy/{vid}/destroy:
    delete:
      tags:
        - Landing Career Page Query
      summary: Delete One Vacancy By Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: vid
          required: true
          type: string
          description: This Vacancy Module ID
      responses:
        "200":
          description: OK


# Landing Tender

  /api/v1/landing/ins/{id}/activate/tender:
    post:
      tags:
        - Landing Tender Page Query
      summary: Activate Tender Module By Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This Institute Admin ID
      responses:
        "200":
          description: OK

  /api/v1/landing/one/landing/tender/{ltid}:
    get:
      tags:
        - Landing Tender Page Query
      summary: One Landing Tender Module Details By Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: ltid
          required: true
          type: string
          description: This Landing Tender Module ID
      responses:
        "200":
          description: OK

  /api/v1/landing/one/{ltid}/new/tender:
    post:
      tags:
        - Landing Tender Page Query
      summary: New Tender Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: ltid
          required: true
          type: string
          description: This Landing Tender Module ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              tender_requirement:
                type: string
                description: Enter Tender Requirement
                required: true
              tender_budget:
                type: number
                description: Enter Tender Budget
                required: false
              tender_about:
                type: string
                description: Enter Tender Description
                required: false
              tender_order:
                type: string
                description: Enter Tender Order Key
                required: false
              department:
                type: string
                description: Enter Department Id
                required: true
      responses:
        "200":
          description: OK

  /api/v1/landing/one/{ltid}/all/tender:
    get:
      tags:
        - Landing Tender Page Query
      summary: All Landing Tender Module Tenders Details By Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: ltid
          required: true
          type: string
          description: This Landing Tender Module ID
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
        - in: query
          name: status
          required: true
          type: string
          description: Enter Status ("Open" || "Closed")
      responses:
        "200":
          description: OK

  /api/v1/landing/one/tender/{tid}/status:
    patch:
      tags:
        - Landing Tender Page Query
      summary: Mark One Tender Closed By Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: tid
          required: true
          type: string
          description: This Tender ID
      responses:
        "200":
          description: OK
  
  /api/v1/landing/one/tender/{tid}/query:
    get:
      tags:
        - Landing Tender Page Query
      summary: One Tender (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: tid
          required: true
          type: string
          description: This Tender ID
      responses:
        "200":
          description: OK

  /api/v1/landing/one/tender/{tid}/apply/bid:
    patch:
      tags:
        - Landing Tender Page Query
      summary: Bid On Tender Completed By Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: tid
          required: true
          type: string
          description: This Tender ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              bidder_name:
                type: string
                description: Enter name here
                required: true
              bidder_email:
                type: string
                description: Enter email here
                required: true
              bidder_phone_number:
                type: string
                description: Enter Phone Number
                required: true
              bidder_address:
                type: string
                description: Enter address here
                required: true
              bidder_quotation:
                type: string
                description: Enter Quotation Key
                required: true
      responses:
        "200":
          description: OK

  /api/v1/landing/one/tender/{tid}/all/bidder:
    get:
      tags:
        - Landing Tender Page Query
      summary: All Bidder By Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: tid
          required: true
          type: string
          description: This Tender Module ID
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
      responses:
        "200":
          description: OK

  /api/v1/landing/one/tender/{tid}/bid/offer/{bid}:
    patch:
      tags:
        - Landing Tender Page Query
      summary: One Bidder Offer  By Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: tid
          required: true
          type: string
          description: This Tender ID
        - in: path
          name: bid
          required: true
          type: string
          description: This Bidder ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              offer_price:
                type: number
                description: Enter Offer Price
                required: true
              order_detail:
                type: string
                description: Enter Order Details
                required: false
              purchase_order:
                type: string
                description: Enter Purchase Order
                required: false
      responses:
        "200":
          description: OK


  /api/v1/landing/one/tender/{tid}/destroy:
    delete:
      tags:
        - Landing Tender Page Query
      summary: Delete One Tender By Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: tid
          required: true
          type: string
          description: This Tender Module ID
      responses:
        "200":
          description: OK


#Landing Page Toggle
  /api/v1/landing/{id}/website/looks:
    patch:
      tags:
        - Landing Page Addons Query
      summary: Update Web site Looks By Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This Institute Admin ID 
        - in : body
          name: body
          schema:
            type: object
            properties:
              website_looks:
                type: object
                properties:
                  logo:
                    type: string
                    description: Enter Your Logo Here...
                    required: false
                  background_image:
                    type: string
                    description: Enter Background Image Here...
                    required: false
                  vision:
                    type: string
                    description: Enter Institute Vision here...
                    required: false
                  mission:
                    type: string
                    description: Enter Institute Mission Here...
                    required: false
                  about:
                    type: string
                    description: Enter Institute About here
                    required: false
                  color:
                    type: string
                    description: Enter Selected Color Here...
                    required: false
                  leading_person:
                    type: string
                    description: Enter Institute Leading Person User Id
                    required: false
                  leading_person_position: 
                    type: string
                    description: Enter Institute Leading Person Position here...
                    required: false
                  leading_person_message: 
                    type: string
                    description: Enter Institute Leading Person Message here...
                    required: false
                  linkedin_link: 
                    type: string
                    description: Enter Social Media Linkedin Profile Link
                    required: false
                  instagram_link: 
                    type: string
                    description: Enter Social Media Instagram Profile Link
                    required: false
                  twitter_link: 
                    type: string
                    description: Enter Social Media Twitter Profile Link
                    required: false
                  qviple_link:
                    type: string
                    description: Enter Social Media Qviple Profile Link
                    required: false
      responses:
        "200":
          description: OK

  /api/v1/landing/{id}/website/active/tabs:
    patch:
      tags:
        - Landing Page Addons Query
      summary: Update Web Active Tabs By Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This Institute Admin ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              website_active_tab:
                type: object
                properties:
                  home:
                    type: boolean
                    description: Select true of false for Toggle
                    required: false
                  about:
                    type: boolean
                    description: Select true of false for Toggle
                    required: false
                  department:
                    type: boolean
                    description: Select true of false for Toggle
                    required: false
                  contact_us:
                    type: boolean
                    description: Select true of false for Toggle
                    required: false
                  admission:
                    type: boolean
                    description: Select true of false for Toggle
                    required: false
                  library:
                    type: boolean
                    description: Select true of false for Toggle
                    required: false
                  announcements:
                    type: boolean
                    description: Select true of false for Toggle
                    required: false
                  events: 
                    type: boolean
                    description: Select true of false for Toggle
                    required: false
                  tender: 
                    type: boolean
                    description: Select true of false for Toggle
                    required: false
                  career: 
                    type: boolean
                    description: Select true of false for Toggle
                    required: false
                  alumini: 
                    type: boolean
                    description: Select true of false for Toggle
                    required: false
                  tpo_cell: 
                    type: boolean
                    description: Select true of false for Toggle
                    required: false
                  rnd_cell:
                    type: boolean
                    description: Select true of false for Toggle
                    required: false
                  timetable:
                    type: boolean
                    description: Select true of false for Toggle
                    required: false
                  student_projects:
                    type: boolean
                    description: Select true of false for Toggle
                    required: false
                  student_articles:
                    type: boolean
                    description: Select true of false for Toggle
                    required: false
      responses:
        "200":
          description: OK

  # /api/v1/landing/{id}/website/contacts:
  #   patch:
  #     tags:
  #       - Landing Page Addons Query
  #     summary: Update Web Contacts By Institute Admin (verified)
  #     consumes:
  #       - application/json
  #     produces:
  #       - application/json
  #     parameters:
  #       - in: path
  #         name: id
  #         required: true
  #         type: string
  #         description: This Institute Admin ID
  #       - in : body
  #         name: body
  #         schema:
  #           type: object
  #           properties:
  #             website_active_tab:
  #               type: object
  #               properties:
  #                 home:
  #                   type: boolean
  #                   description: Select true of false for Toggle
  #                   required: false
  #                 about:
  #                   type: boolean
  #                   description: Select true of false for Toggle
  #                   required: false
  #                 department:
  #                   type: boolean
  #                   description: Select true of false for Toggle
  #                   required: false
  #                 contact_us:
  #                   type: boolean
  #                   description: Select true of false for Toggle
  #                   required: false
  #                 admission:
  #                   type: boolean
  #                   description: Select true of false for Toggle
  #                   required: false
  #                 library:
  #                   type: boolean
  #                   description: Select true of false for Toggle
  #                   required: false
  #                 announcements:
  #                   type: boolean
  #                   description: Select true of false for Toggle
  #                   required: false
  #                 events: 
  #                   type: boolean
  #                   description: Select true of false for Toggle
  #                   required: false
  #                 tender: 
  #                   type: boolean
  #                   description: Select true of false for Toggle
  #                   required: false
  #                 career: 
  #                   type: boolean
  #                   description: Select true of false for Toggle
  #                   required: false
  #                 alumini: 
  #                   type: boolean
  #                   description: Select true of false for Toggle
  #                   required: false
  #                 tpo_cell: 
  #                   type: boolean
  #                   description: Select true of false for Toggle
  #                   required: false
  #                 rnd_cell:
  #                   type: boolean
  #                   description: Select true of false for Toggle
  #                   required: false
  #                 timetable:
  #                   type: boolean
  #                   description: Select true of false for Toggle
  #                   required: false
  #                 student_projects:
  #                   type: boolean
  #                   description: Select true of false for Toggle
  #                   required: false
  #                 student_articles:
  #                   type: boolean
  #                   description: Select true of false for Toggle
  #                   required: false
  #     responses:
  #       "200":
  #         description: OK

  /api/v1/landing/{id}/one/web/profile:
    get:
      tags:
        - Landing Page Addons Query
      summary: One Web Profile By Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This Institute Admin ID
      responses:
        "200":
          description: OK

  /api/v1/landing/{id}/update/career/tender/passage:
    patch:
      tags:
        - Landing Page Addons Query
      summary: One Web Profile Career || Tender Passage Refresh One Web Profile Get API By Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This Institute Admin ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              career_passage:
                type: string
                description: Enter Career Passage if career
                required: true
              tender_passage:
                type: string
                description: Enter Tender Passage if Tender
                required: true
      responses:
        "200":
          description: OK

# Designation Protection

  /api/v1/auth/reset/new/password/{faid}:
    patch:
      tags:
        - Designation Protection
      summary: Reset || Forgot Password Pin for Admission || Finance (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: faid
          required: true
          type: string
          description: This Finance || Admission ID
        - in: query
          name: flow
          required: true
          type: string
          description: Enter for Finance ("Finance_Login") || for Admission ("Admission_Login")
        - in : body
          name: body
          schema:
            type: object
            properties:
              old_pass:
                type: string
                description: Enter Old Password
                required: true
              new_pass:
                type: string
                description: Enter New Password
                required: true
      responses:
        "200":
          description: OK

  /api/v1/auth/enable/password/protection/{faid}:
    patch:
      tags:
        - Designation Protection
      summary: Enable || Disable Password Protection for Admission || Finance (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: faid
          required: true
          type: string
          description: This Finance || Admission ID
        - in: query
          name: flow
          required: true
          type: string
          description: Enter for Finance ("Finance_Login") || for Admission ("Admission_Login")
      responses:
        "200":
          description: OK

  /api/v1/auth/login/designation:
    post:
      tags:
        - Designation Protection
      summary: Designation Login for Admission || Finance (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              flow:
                type: string
                description: Enter for Finance ("Finance_Login") || for Admission ("Admission_Login")
                required: true
              protected_pin:
                type: string
                description: Enter Typed Password
                required: true
              flowId:
                type: string
                description: Enter for Finance place finance Id || for Admission place Admission Id
                required: true
      responses:
        "200":
          description: OK


# Alumini

  /api/v1/alumini/ins/{id}/staff/{sid}:
    post:
      tags:
        - Alumini Query
      summary: Activate Alumini Module By Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This Institute ID
        - in: path
          name: sid
          required: true
          type: string
          description: This Staff ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              alumini_passage:
                type: string
                description: Enter Alumini Passage || About
                required: true
      responses:
        "200":
          description: OK

  /api/v1/alumini/{aid}/dashboard/query:
    get:
      tags:
        - Alumini Query
      summary: One Alumini Details Module By Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This Alumini ID
      responses:
        "200":
          description: OK

  /api/v1/alumini/{aid}/new/register:
    post:
      tags:
        - Alumini Query
      summary: New Register Form At Alumini Module (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This Alumini ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              email:
                type: string
                description: Enter Email
                required: true
              name:
                type: string
                description: Enter Name
                required: true
              phone_number:
                type: string
                description: Enter Phone Number
                required: true
              graduation_department:
                type: string
                description: Enter Graduation Department
                required: true
              pass_year:
                type: string
                description: Enter Pass Year
                required: true
              job_status:
                type: string
                description: Enter Job Status
                required: true
              company_name:
                type: string
                description: Enter Company Name
                required: true
              company_location:
                type: string
                description: Enter Company Location
                required: true
              higher_study:
                type: string
                description: Enter Higher Study
                required: true
      responses:
        "200":
          description: OK

  /api/v1/alumini/{aid}/all/registration/array:
    get:
      tags:
        - Alumini Query
      summary: One Alumini All Registration Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This Alumini ID
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
        - in: query
          name: status
          required: true
          type: string
          description: Enter Status ("Not Given" || "Given")
      responses:
        "200":
          description: OK

  /api/v1/alumini/{rid}/give/certificate:
    patch:
      tags:
        - Alumini Query
      summary: One Alumini Give Certificate By Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: rid
          required: true
          type: string
          description: This Alumini Registration Id
      responses:
        "200":
          description: OK

  /api/v1/alumini/{aid}/all/prominent/array:
    get:
      tags:
        - Alumini Query
      summary: One Alumini All Prominent Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This Alumini ID
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
      responses:
        "200":
          description: OK

  /api/v1/alumini/{aid}/new/prominent/query:
    post:
      tags:
        - Alumini Query
      summary: New Success Story Form At Alumini Module (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This Alumini ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              profile_photo:
                type: string
                description: Enter Pic
                required: true
              name:
                type: string
                description: Enter Name
                required: true
              batch:
                type: string
                description: Enter Batch Name
                required: true
              department:
                type: string
                description: Enter Department Id
                required: true
              company_name:
                type: string
                description: Enter Company Name
                required: true
              job_profile:
                type: string
                description: Enter Job Profile
                required: true
      responses:
        "200":
          description: OK

  /api/v1/alumini/{aid}/all/feed/question/array:
    get:
      tags:
        - Alumini Query
      summary: One Alumini All FeedBack Polls Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This Alumini ID
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
      responses:
        "200":
          description: OK

  /api/v1/alumini/question/{aid}:
    post:
      tags:
        - Alumini Query
      summary: Create FeedBack Poll Question
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Alumini id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              poll_question:
                type: string
                description: Enter Poll Question 
              day:
                type: string
                description: Enter Number of Days
              pollAnswer:
                type: array
                description: Enter min. two options & max four options
                required: true 
                items:
                  type: object
                  properties:
                    content:
                      type: string
                      required: true 
                      description: Enter Answer Content
      responses:
        "200":
          description: OK

  /api/v1/alumini/question/{aid}/vote/{pid}:
    patch:
      tags:
        - Alumini Query
      summary: Add Vote To Poll Answer
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid
          required: true
          type: string
          description: This is Poll ID
        - in: path
          name: aid
          required: true
          type: string
          description: This is Alumini ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              answerId:
                type: string
                description: Enter Answer id which we are voting 
              rate:
                type: number
                description: Enter Number Rate
      responses:
        "200":
          description: OK

  /api/v1/alumini/question/vote/{aid}/feedback/query:
    patch:
      tags:
        - Alumini Query
      summary: Add First Info Then Mark One Poll To Vote
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Alumini ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              name:
                type: string
                description: Enter Name
              email:
                type: string
                description: Enter Email
              pass_year:
                type: string
                description: Enter Pass Year
              graduation_department:
                type: string
                description: Enter Graduation Department
              phone_number:
                type: string
                description: Enter Phone Number
              additional_feedback:
                type: string
                description: Enter Additional FeedBack
      responses:
        "200":
          description: OK

#ScholarShip Query

  /api/v1/admission/{aid}/new/scholarship:
    post:
      tags:
        - ScholarShip Query
      summary: Add New ScholarShip By Admission Admin - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Admission ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              scholarship_name:
                type: string
                description: Enter Scholarship Name
                required: true
              scholarship_about:
                type: string
                description: Enter ScholarShip About
              category_array:
                type: array
                description: Enter Array of Fees Category ID ["898984989", "49909204909"]
              scholarship_notification:
                type: object
                properties:
                  flow:
                    type: string
                    description: Enter Flow ("Input" || "Link")
                  notification:
                    type: string
                    description: Enter Notification Attachment || Link
              scholarship_apply:
                type: object
                properties:
                  flow:
                    type: string
                    description: Enter Flow ("Input" || "Link")
                  apply:
                    type: string
                    description: Enter Apply Attachment || Link
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/all/scholarship:
    get:
      tags:
        - ScholarShip Query
      summary: One Admission All ScholarShip - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This Admission ID
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
        - in: query
          name: status
          required: true
          type: string
          description: Enter Status ("Not Completed" || "Completed")
      responses:
        "200":
          description: OK

  /api/v1/admission/{sid}/scholarship/query:
    get:
      tags:
        - ScholarShip Query
      summary: One ScholarShip - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This ScholarShip ID
      responses:
        "200":
          description: OK

  /api/v1/admission/{sid}/all/allotted/candidates/government:
    get:
      tags:
        - ScholarShip Query
      summary: One ScholarShip All Candidates - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This ScholarShip ID
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
        - in: query
          name: search
          required: true
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK

  /api/v1/admission/{sid}/status/query:
    patch:
      tags:
        - ScholarShip Query
      summary: One ScholarShip Mark Status Completed - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This ScholarShip ID
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/scholarship/new/corpus/{sid}:
    post:
      tags:
        - ScholarShip Query
      summary: Add New Fund Corpus In ScholarShip By Admission Admin - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Admission ID
        - in: path
          name: sid
          required: true
          type: string
          description: This is ScholarShip ID
        - in: query
          name: user_query
          required: true
          type: string
          description: This is User Id Similar Like Income Add In Finance
        - in : body
          name: body
          schema:
            type: object
            properties:
              incomeAccount:
                type: string
                description: Enter Account Type ("By Bank" || "By Cash")
                required: true
              incomeAmount:
                type: number
                description: Enter Income Amount
              incomeFrom:
                type: string
                description: Enter Income From User Name (if user Id then pass user_query)
              income_utr:
                type: string
                description: Enter Income UTR
              incomeDesc:
                type: string
                description: Enter Income Description
              incomeAck:
                type: string
                description: Enter Income Acknowledge
      responses:
        "200":
          description: OK


  /api/v1/admission/new/income/{fcid}:
    post:
      tags:
        - ScholarShip Query
      summary: Add New Income In Fund Corpus By Admission Admin - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fcid
          required: true
          type: string
          description: This is FundCorpus ID
        - in: query
          name: user_query
          required: true
          type: string
          description: This is User Id Similar Like Income Add In Finance
        - in : body
          name: body
          schema:
            type: object
            properties:
              incomeAccount:
                type: string
                description: Enter Account Type ("By Bank" || "By Cash")
                required: true
              incomeAmount:
                type: number
                description: Enter Income Amount
              incomeFrom:
                type: string
                description: Enter Income From User Name (if user Id then pass user_query)
              income_utr:
                type: string
                description: Enter Income UTR
              incomeDesc:
                type: string
                description: Enter Income Description
              incomeAck:
                type: string
                description: Enter Income Acknowledge
      responses:
        "200":
          description: OK

  /api/v1/admission/{sid}/one/fund/corpus/history:
    get:
      tags:
        - ScholarShip Query
      summary: One ScholarShip Fund Corpus All In Take History - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This ScholarShip ID
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
      responses:
        "200":
          description: OK

#All Designation Array

  /api/v1/user/{sid}/staff/all/designation:
    get:
      tags:
        - All Designation + Domain Query
      summary: One Staff All Designation - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This Staff ID
      responses:
        "200":
          description: OK

  /api/v1/admin/all/sub/domain/array:
    get:
      tags:
        - All Designation + Domain Query
      summary: All Allotted Sub Domain - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
      responses:
        "200":
          description: OK

  /api/v1/admin/sub/domain/by/host:
    get:
      tags:
        - All Designation + Domain Query
      summary: Filter Sub Domain By HostName - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: filter_by
          required: true
          type: string
          description: Enter Host Name
      responses:
        "200":
          description: OK

  /api/v1/admin/link/sub/domain/{sdid}:
    patch:
      tags:
        - All Designation + Domain Query
      summary: Link Sub Domain By Institute Admin - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sdid
          required: true
          type: string
          description: Enter Sub Domain ID
        - in: query
          name: insId
          required: true
          type: string
          description: Enter Institute ID
      responses:
        "200":
          description: OK

  /api/v1/edit/student/exam/moderator/count/{did}:
    get:
      tags:
        - All Designation + Domain Query
      summary: All Counts From Department - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: Enter Department ID
      responses:
        "200":
          description: OK

#New Post Image

  /api/v1/user/post/{id}/image/access/apk:
    post:
      tags:
        - New Post Image
      summary: User post create text and image (UPTO -> 10) -(verified)
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is User id
        - in: formData
          name: file1
          type: file
          required: true
          description: upload your File 1
        - in: formData
          name: file2
          type: file
          required: true
          description: upload your File 2
        - in: formData
          name: file3
          type: file
          required: true
          description: upload your File 3
        - in: formData
          name: postImageCount
          type: number
          required: true
          description: Enter Number of files
        - in: formData
          name: postTitle
          type: string
          description: type a text here for Title
        - in: formData
          name: postDescription
          type: string
          description: type a text here for Description
        - in: formData
          name: postText
          type: string
          description: type a text here for text
        - in: formData
          name: postStatus
          type: string
          required: true
          description: status should be "Anyone" or "Private"
        - in: formData
          name: people
          type: array
          items:
            type: string
            description: one user id
          description: This is all taged users ids
      responses:
        "200":
          description: OK


  /api/v1/ins/post/{id}/image/access/apk:
    post:
      tags:
        - New Post Image
      summary: Institute post create text and image (UPTO -> 10) -(verified)
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: formData
          name: file1
          type: file
          required: true
          description: upload your File 1
        - in: formData
          name: file2
          type: file
          required: true
          description: upload your File 2
        - in: formData
          name: file3
          type: file
          required: true
          description: upload your File 3
        - in: formData
          name: postImageCount
          type: number
          required: true
          description: Enter Number of files
        - in: formData
          name: postTitle
          type: string
          description: type a text here for Title
        - in: formData
          name: postDescription
          type: string
          description: type a text here for Description
        - in: formData
          name: postText
          type: string
          description: type a text here for text
        - in: formData
          name: postStatus
          type: string
          required: true
          description: status should be "Anyone" or "Private"
        - in: formData
          name: people
          type: array
          items:
            type: string
            description: one user id
          description: This is all taged users ids
      responses:
        "200":
          description: OK

#Deposits Query

  /api/v1/finance/{fid}/master/deposit/query:
    get:
      tags:
        - Deposit Query
      summary: Deposit Master Query - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: Enter Finance ID
      responses:
        "200":
          description: OK

  /api/v1/hostel/{hid}/master/deposit/query:
    get:
      tags:
        - Deposit Query
      summary: Deposit Master Query - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: hid
          required: true
          type: string
          description: Enter Hostel ID
      responses:
        "200":
          description: OK

  /api/v1/finance/{fmid}/master/all/deposit/array:
    get:
      tags:
        - Deposit Query
      summary: One Master All Students Query - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fmid
          required: true
          type: string
          description: Enter Fee Master ID
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
        - in: query
          name: search
          required: false
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK

  /api/v1/finance/{fmid}/refund/deposit/{sid}/query:
    patch:
      tags:
        - Deposit Query
      summary: One Student Refund Deposit Query - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fmid
          required: true
          type: string
          description: Enter Fee Master ID
        - in: path
          name: sid
          required: true
          type: string
          description: Enter Student ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              amount:
                type: number
                description: Enter Amount
                required: true
              mode:
                type: string
                description: Enter Mode ("By Bank" -> "Online" || "By Cash" -> Offline)
                required: true
              fee_payment_mode:
                type: string
                description: Enter Fee Mode ("By Cash") || ("By Bank") 
                required: true
              fee_payment_amount:
                type: number
                description: Enter Amount
                required: true
              fee_bank_name:
                type: string
                description: Enter Bank Name e.g SBI
                required: false
              fee_bank_holder:
                type: string
                description: Enter Bank Holder Name e.g Mithkal
                required: false
              fee_utr_reference:
                type: string
                description: Enter Fee Unique Transaction Reference Number (UTR)
                required: false
      responses:
        "200":
          description: OK

  /api/v1/finance/{fid}/master/all/refund/deposit/history:
    get:
      tags:
        - Deposit Query
      summary: One Finance All Refund Deposit History Query - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: Enter Finance ID
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
        - in: query
          name: search
          required: false
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK

  /api/v1/hostel/{hid}/master/all/refund/deposit/history:
    get:
      tags:
        - Deposit Query
      summary: One Hostel All Refund Deposit History Query - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: hid
          required: true
          type: string
          description: Enter Hostel ID
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
        - in: query
          name: search
          required: false
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK


  /api/v1/edit/student/promote/{id}/institute/detail:
    get:
      tags:
        - Examination Section API
      summary: Give institute info and all related count -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id        
      responses:
        "200":
          description: OK

  /api/v1/edit/student/promote/department/{did}/detail:
    get:
      tags:
        - Examination Section API
      summary: One department related info -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is department id        
      responses:
        "200":
          description: OK

  /api/v1/edit/student/promote/class/{cid}/student/list:
    get:
      tags:
        - Examination Section API
      summary: All promoted student list in class  -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class id        
      responses:
        "200":
          description: OK

  /api/v1/edit/student/promote/remain/class/{cid}/student:
    get:
      tags:
        - Examination Section API
      summary: All not promoted student list in class -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class id           
      responses:
        "200":
          description: OK


#Hostel Module Query

  /api/v1/hostel/ins/{id}/staff/{sid}:
    post:
      tags:
        - Hostel Section Query
      summary: Activate Hostel Module By Institute Admin -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute ID 
        - in: path
          name: sid
          required: true
          type: string
          description: This is Staff ID           
      responses:
        "200":
          description: OK

  
  /api/v1/hostel/{hid}/dashboard/query:
    get:
      tags:
        - Hostel Section Query
      summary: Hostel Master Query -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: hid
          required: true
          type: string
          description: This is Hostel ID           
      responses:
        "200":
          description: OK

  /api/v1/hostel/{hid}/rules/query:
    get:
      tags:
        - Hostel Section Query
      summary: Hostel Rules Query -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: hid
          required: true
          type: string
          description: This is Hostel ID           
      responses:
        "200":
          description: OK

  /api/v1/hostel/{hid}/form/query:
    get:
      tags:
        - Hostel Section Query
      summary: Hostel Form Query -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: hid
          required: true
          type: string
          description: This is Hostel ID           
      responses:
        "200":
          description: OK

  
  /api/v1/hostel/{hid}/new/hostel/unit:
    post:
      tags:
        - Hostel Section Query
      summary: New Hostel Unit in Hostel -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: hid
          required: true
          type: string
          description: This is Hostel ID 
        - in : body
          name: body
          schema:
            type: object
            properties:
              hostel_unit_name:
                type: string
                description: Enter Hostel Unit Name
                required: true
              sid:
                type: string
                description: Enter Staff ID
                required: true      
      responses:
        "200":
          description: OK

  /api/v1/hostel/{hid}/all/hostel/unit:
    get:
      tags:
        - Hostel Section Query
      summary: All Hostel Unit in Hostel -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: hid
          required: true
          type: string
          description: This is Hostel ID   
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
        - in: query
          name: search
          required: true
          type: string
          description: Enter Search Query     
      responses:
        "200":
          description: OK


  /api/v1/hostel/{huid}/one/hostel/unit/query:
    get:
      tags:
        - Hostel Section Query
      summary: One Hostel Unit Query in Hostel -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: huid
          required: true
          type: string
          description: This is Hostel Unit ID    
      responses:
        "200":
          description: OK

  /api/v1/hostel/{huid}/one/hostel/unit/new/room:
    post:
      tags:
        - Hostel Section Query
      summary: New Hostel Room in One Hostel Unit -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: huid
          required: true
          type: string
          description: This is Hostel Unit ID 
        - in : body
          name: body
          schema:
            type: object
            properties:
              room_name:
                type: string
                description: Enter Room Name
                required: true
              room_strength:
                type: string
                description: Enter Room Strength
                required: true      
      responses:
        "200":
          description: OK

  /api/v1/hostel/{huid}/one/hostel/unit/all/room:
    get:
      tags:
        - Hostel Section Query
      summary: All Hostel Room in One Hostel Unit Query -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: huid
          required: true
          type: string
          description: This is Hostel Unit ID   
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
        - in: query
          name: search
          required: true
          type: string
          description: Enter Search Query     
      responses:
        "200":
          description: OK

  /api/v1/hostel/{hrid}/one/hostel/room/query:
    get:
      tags:
        - Hostel Section Query
      summary: One Hostel Room Query in One Hostel Unit -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: hrid
          required: true
          type: string
          description: This is Hostel Room ID    
      responses:
        "200":
          description: OK

  /api/v1/hostel/{hrid}/one/hostel/room/all/bed/query:
    get:
      tags:
        - Hostel Section Query
      summary: One Hostel Room in All Bed Query -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: hrid
          required: true
          type: string
          description: This is Hostel Room ID    
      responses:
        "200":
          description: OK

  /api/v1/hostel/{hid}/all/fee/structure:
    get:
      tags:
        - Hostel Section Query
      summary: All Hostel Fee Structure -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: hid
          required: true
          type: string
          description: This is Hostel ID   
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit     
      responses:
        "200":
          description: OK

  /api/v1/hostel/{hid}/all/wardens:
    get:
      tags:
        - Hostel Section Query
      summary: All Hostel Wardens | Staff-(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: hid
          required: true
          type: string
          description: This is Hostel ID   
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit   
        - in: query
          name: search
          required: false
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK

  /api/v1/hostel/{hid}/all/hostelities:
    get:
      tags:
        - Hostel Section Query
      summary: All Hostel Hostelilties | Students-(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: hid
          required: true
          type: string
          description: This is Hostel ID   
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit   
        - in: query
          name: search
          required: false
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK

  /api/v1/hostel/{hid}/new/existing/rules/regulation:
    patch:
      tags:
        - Hostel Section Query
      summary: Add | Edit Rules & Regulation By Hostel Manager -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: hid
          required: true
          type: string
          description: This is Hostel ID   
        - in : body
          name: body
          schema:
            type: object
            properties:
              rules:
                type: object
                properties:
                  regulation_headline:
                    type: string
                    description: Enter Rules & Regulation Headline 
                    required: true
                  regulation_description:
                    type: string
                    description: Enter Rules & Regulation Description
                    required: false
                  regulation_attachment:
                    type: string
                    description: Enter Attachment Key Here
                    required: false
      responses:
        "200":
          description: OK

  /api/v1/hostel/{hid}/new/application:
    post:
      tags:
        - Hostel Section Query
      summary: New Application in Hostel || Admission -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: hid
          required: true
          type: string
          description: This is Hostel ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              applicationName:
                type: string
                description: Enter Application Name
                required: true
              applicationUnit:
                type: string
                description: Enter Hostel Unit ID
                required: true 
              applicationAbout:
                type: string
                description: Enter Application About
                required: true      
      responses:
        "200":
          description: OK

  /api/v1/hostel/{hid}/new/existing/form/query:
    patch:
      tags:
        - Hostel Section Query
      summary: Update Student Existing Form By Hostel Manager -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: hid
          required: true
          type: string
          description: This is Hostel ID   
        - in : body
          name: body
          schema:
            type: object
            properties:
              student_form_query:
                type: object
                properties:
                  personalInfo:
                    type: boolean
                    description: Enter Personal Info
                    required: true
                  otherPersonalInfo:
                    type: boolean
                    description: Enter Other Personal Info
                    required: true
                  identityDetails:
                    type: boolean
                    description: Enter Identity Details
                    required: true
      responses:
        "200":
          description: OK

  /api/v1/hostel/{uid}/user/{aid}/apply:
    post:
      tags:
        - Hostel Section Query
      summary: User Apply In Hostel Application -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: uid
          required: true
          type: string
          description: This is User ID
        - in: path
          name: aid
          required: true
          type: string
          description: This is Application ID 
        - in : body
          name: body
          schema:
            type: object
            properties:
              studentFirstName:
                type: string
                description: Enter Student First Name
                required: true
              studentMiddleName:
                type: string
                description: Enter Student Middle Name
                required: false  
              studentLastName:
                type: string
                description: Enter Student Last Name
                required: true 
              studentDOB:
                type: string
                description: Enter Student Date Of Birth
                required: true   
              studentGender:
                type: string
                description: Enter Student Gender
                required: true      
              studentMotherName:
                type: string
                description: Enter Student Mother Name
                required: true 
              sample_pic:
                type: string
                description: Enter Sample Pic
                required: false
              fileArray:
                type: array
                description: Enter File Array
                required: false
              optionalSubject:
                type: array
                description: Enter Optional Subject
                required: false
      responses:
        "200":
          description: OK

  /api/v1/hostel/{hid}/all/ongoing/application:
    get:
      tags:
        - Hostel Section Query
      summary: All Hostel Ongoing Apps-(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: hid
          required: true
          type: string
          description: This is Hostel ID   
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit   
      responses:
        "200":
          description: OK

  /api/v1/hostel/{hid}/all/completed/application:
    get:
      tags:
        - Hostel Section Query
      summary: All Hostel Completed Apps-(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: hid
          required: true
          type: string
          description: This is Hostel ID   
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit   
      responses:
        "200":
          description: OK

  /api/v1/hostel/{id}/application/list/array:
    get:
      tags:
        - Hostel Section Query
      summary: Search All Hostel Apps At Universal Search -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute ID   
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit 
        - in: query
          name: search
          required: false
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK

  /api/v1/hostel/{aid}/application/query:
    get:
      tags:
        - Hostel Section Query
      summary: One Hostel Application Query -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Application ID   
      responses:
        "200":
          description: OK

  /api/v1/hostel/{huid}/request/application:
    get:
      tags:
        - Hostel Section Query
      summary: All Receieved Application At Hostel Unit for Renewal -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: huid
          required: true
          type: string
          description: This is Hostel Unit ID   
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit 
        - in: query
          name: search
          required: false
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK

  /api/v1/hostel/{huid}/selected/application:
    get:
      tags:
        - Hostel Section Query
      summary: All Selected Application At Hostel Unit for Renewal -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: huid
          required: true
          type: string
          description: This is Hostel Unit ID   
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit 
        - in: query
          name: search
          required: false
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK

  /api/v1/hostel/{huid}/confirmed/application:
    get:
      tags:
        - Hostel Section Query
      summary: All Confirmed Application At Hostel Unit for Renewal -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: huid
          required: true
          type: string
          description: This is Hostel Unit ID   
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit 
        - in: query
          name: search
          required: false
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK

  /api/v1/hostel/{huid}/allotted/application:
    get:
      tags:
        - Hostel Section Query
      summary: All Allotted Application At Hostel Unit for Renewal -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: huid
          required: true
          type: string
          description: This is Hostel Unit ID   
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit 
        - in: query
          name: search
          required: false
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK

  /api/v1/hostel/{huid}/cancelled/application:
    get:
      tags:
        - Hostel Section Query
      summary: All Cancelled Application At Hostel Unit for Renewal -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: huid
          required: true
          type: string
          description: This is Hostel Unit ID   
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit 
        - in: query
          name: search
          required: false
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK

  For Announcement Call /api/v1/ins/{id}/announcemnt:
    get:
      tags:
        - Hostel Section Query
      summary: One Institute All Announcement -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute ID   
      responses:
        "200":
          description: OK

  /api/v1/hostel/{sid}/student/{aid}/cancel/app:
    post:
      tags:
        - Hostel Section Query
      summary: Student Application Cancel By Hostel Manager -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student ID
        - in: path
          name: aid
          required: true
          type: string
          description: This is Application ID 
      responses:
        "200":
          description: OK

  /api/v1/hostel/{sid}/student/{aid}/select:
    post:
      tags:
        - Hostel Section Query
      summary: Student Application Select By Hostel Manager -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student ID
        - in: path
          name: aid
          required: true
          type: string
          description: This is Application ID 
        - in : body
          name: body
          schema:
            type: object
            properties:
              fee_struct:
                type: string
                description: Enter Fee Structure ID
                required: true
              renew:
                type: string
                description: Enter Renewal Date ("2023-02-02")
                required: false  
              month:
                type: string
                description: Enter Month 
                required: false 
      responses:
        "200":
          description: OK

  /api/v1/hostel/{sid}/student/pay/mode/{aid}/apply/status/{statusId}:
    post:
      tags:
        - Hostel Section Query
      summary: Student Mode Select By Student -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student ID
        - in: path
          name: aid
          required: true
          type: string
          description: This is Application ID 
        - in: path
          name: statusId
          required: true
          type: string
          description: This is Application Status ID 
        - in : body
          name: body
          schema:
            type: object
            properties:
              transaction_date:
                type: string
                description: Enter Date Like ("2023-02-02")
                required: true
              fee_payment_mode:
                type: string
                description: Enter Mode Same as Admission Fee Receipt Mode
                required: true  
              fee_payment_amount:
                type: number
                description: Enter Amount
                required: true 
      responses:
        "200":
          description: OK

  /api/v1/hostel/{statusId}/status/cancel/app/{aid}/student/{sid}:
    patch:
      tags:
        - Hostel Section Query
      summary: Student Mode Cancel By Student -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student ID
        - in: path
          name: aid
          required: true
          type: string
          description: This is Application ID 
        - in: path
          name: statusId
          required: true
          type: string
          description: This is Application Status ID 
      responses:
        "200":
          description: OK

  /api/v1/hostel/{sid}/student/{aid}/pay/offline/confirm:
    post:
      tags:
        - Hostel Section Query
      summary: Collect One Student Offline Fees By Hostel Manager -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student ID
        - in: path
          name: aid
          required: true
          type: string
          description: This is Application ID 
        - in : body
          name: body
          schema:
            type: object
            properties:
              transaction_date:
                type: string
                description: Enter Date Like ("2023-02-02")
                required: true
              fee_payment_mode:
                type: string
                description: Enter Mode Same as Admission Fee Receipt Mode
                required: true  
              fee_payment_amount:
                type: number
                description: Enter Amount
                required: true 
              amount:
                type: number
                description: Enter Amount
                required: true
              mode:
                type: number
                description: Enter Mode ("Offline" || "Online")
                required: true 
      responses:
        "200":
          description: OK

  /api/v1/hostel/{sid}/student/{aid}/pay/refund:
    post:
      tags:
        - Hostel Section Query
      summary: Cancel & Refund Admission From Hostel Manager Side -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student ID
        - in: path
          name: aid
          required: true
          type: string
          description: This is Application ID 
        - in : body
          name: body
          schema:
            type: object
            properties:
              transaction_date:
                type: string
                description: Enter Date Like ("2023-02-02")
                required: true
              fee_payment_mode:
                type: string
                description: Enter Mode Same as Admission Fee Receipt Mode
                required: true  
              fee_payment_amount:
                type: number
                description: Enter Amount
                required: true 
              amount:
                type: number
                description: Enter Amount
                required: true
              mode:
                type: number
                description: Enter Mode ("Offline" || "Online")
                required: true
              remainAmount:
                type: number
                description: Enter Remain Amount Same as Admission Cancel & Refund
                required: true 
      responses:
        "200":
          description: OK

  /api/v1/hostel/{aid}/select/student/mode/{sid}:
    post:
      tags:
        - Hostel Section Query
      summary: Select Mode Direct By Hostel Manager Same As Admission Admin -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student ID
        - in: path
          name: aid
          required: true
          type: string
          description: This is Application ID 
      responses:
        "200":
          description: OK

  /api/v1/hostel/{aid}/cancel/select/student/{sid}:
    post:
      tags:
        - Hostel Section Query
      summary: Cancel Mode Direct By Hostel Manager Same As Admission Admin -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student ID
        - in: path
          name: aid
          required: true
          type: string
          description: This is Application ID 
      responses:
        "200":
          description: OK

  /api/v1/hostel/{aid}/application/complete:
    patch:
      tags:
        - Hostel Section Query
      summary: Mark Application To Completed By Hostel Manager -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Application ID 
      responses:
        "200":
          description: OK

  /api/v1/hostel/{hid}/all/remaining/array:
    get:
      tags:
        - Hostel Section Query
      summary: All Pending || Remaining List of Students -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: hid
          required: true
          type: string
          description: This is Hostel ID   
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit 
        - in: query
          name: search
          required: false
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK

  /api/v1/hostel/student/{aid}/allot/bed:
    post:
      tags:
        - Hostel Section Query
      summary: One Student Allot Bed By Hostel Manager -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Application ID   
        - in: query
          name: huid
          required: true
          type: string
          description: Enter Hostel Unit ID
        - in: query
          name: hrid
          required: true
          type: string
          description: Enter Hostel Room ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              dataList:
                type: array
                description: Enter Array of Student ID's Same as Admission Admin Class Allot
                required: true
      responses:
        "200":
          description: OK

  /api/v1/hostel/{hid}/paid/remaining/fee/{sid}/student/{appId}:
    post:
      tags:
        - Hostel Section Query
      summary: Mark Remaining Fee paid by Hostel Manager + add body content (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: hid
          required: true
          type: string
          description: This is Hostel id 
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id
        - in: path
          name: appId
          required: true
          type: string
          description: This is Application id
        - in: body
          name: body
          schema:
            type: object
            required:
              - amount
              - mode
              - type
            properties:
              amount:
                type: number
                description: Enter amount
              mode:
                type: string
                description: Enter payment mode ("Online" | "Offline" | "Exempted")
              type:
                type: string
                description: Enter Installment Value
      responses:
        "200":
          description: OK

  /api/v1/hostel/{hid}/paid/remaining/fee/{sid}/student/{appId}/refund/by:
    patch:
      tags:
        - Hostel Section Query
      summary: Mark Refund Fee paid by Hostel Manager (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: hid
          required: true
          type: string
          description: This is Hostel id 
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id
        - in: path
          name: appId
          required: true
          type: string
          description: This is Application id
        - in: body
          name: body
          schema:
            type: object
            required:
              - amount
              - mode
            properties:
              amount:
                type: number
                description: Enter amount
              mode:
                type: string
                description: Enter payment mode ("Online" | "Offline")
              fee_payment_mode:
                type: string
                description: Default "Refunded"
      responses:
        "200":
          description: OK

  /api/v1/hostel/{hid}/all/receipts/by:
    get:
      tags:
        - Hostel Section Query
      summary: Get All Requested Receipts || Approved Receipts || Rejected Receipts (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: hid
          required: true
          type: string
          description: Enter Hostel Id
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
        - in: query
          name: filter_by
          required: true
          type: string
          description: Enter Filter Query for ("ALL_REQUEST") || ("ALL_APPROVE") || ("ALL_REJECT")
      responses:
        "200":
          description: OK

  /api/v1/hostel/{hid}/one/receipts/{rid}/status:
    patch:
      tags:
        - Hostel Section Query
      summary: Update One Receipts By Hostel Manager (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: hid
          required: true
          type: string
          description: Enter Hostel Id
        - in: path
          name: rid
          required: true
          type: string
          description: Enter Receipt Id
        - in: query
          name: status
          required: true
          type: string
          description: Enter Status As Mention for Operation ("Approved") || ("Rejected") || ("Over_Rejection") || ("Rejection_Notify")
        - in: query
          name: reqId
          required: true
          type: string
          description: Enter Receipts Holding Document Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              reason:
                type: string
                description: Enter Reason if Receipt is going for Rejected
                required: false
      responses:
        "200":
          description: OK

  /api/v1/hostel/{sid}/re/apply/receipts/{rid}:
    patch:
      tags:
        - Hostel Section Query
      summary: Re-Apply Receipt From Student Application Status Tab Receipt Content is Updated not created (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: Enter Status Id
        - in: path
          name: rid
          required: true
          type: string
          description: Enter Receipt Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              fee_payment_mode:
                type: string
                description: Enter Fee Mode ("By Cash") || ("UPI Transfer") || ("Demand Draft") || ("Cheque") || ("RTGS/NEFT/IMPS")
                required: false
              fee_payment_amount:
                type: number
                description: Enter Amount
                required: false
              transaction_date:
                type: string
                description: Enter Date Like ("2023-02-02")
                required: false
              fee_bank_name:
                type: string
                description: Enter Bank Name e.g SBI
                required: false
              fee_bank_holder:
                type: string
                description: Enter Bank Holder Name e.g Mithkal
                required: false
              fee_utr_reference:
                type: string
                description: Enter Fee Unique Transaction Reference Number (UTR)
                required: false
      responses:
        "200":
          description: OK

  /api/v1/hostel/{sid}/go/offline/receipt/{appId}:
    patch:
      tags:
        - Hostel Section Query
      summary: Request for Offline Procedure (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student Id
        - in: path
          name: appId
          required: true
          type: string
          description: This is Application Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              fee_payment_type:
                type: string
                description: Enter payment Type (i.e installmentValue)
                required: true
              fee_payment_mode:
                type: string
                description: Enter payment Mode except "By Cash"
                required: true
              fee_payment_amount:
                type: number
                description: Enter payment Amount
                required: true
              transaction_date:
                type: string
                description: Enter Date ("2023-02-02")
                required: true
              fee_bank_name:
                type: string
                description: Enter Bank Name e.g SBI
                required: false
              fee_bank_holder:
                type: string
                description: Enter Bank Holder Name e.g Mithkal
                required: false
              fee_utr_reference:
                type: string
                description: Enter Fee Unique Transaction Reference Number (UTR)
                required: false
              rid:
                type: string
                description: Enter Remaining List ID
                required: true
              raid:
                type: string
                description: Enter Remaining Array ID i.e coming from installmentValue Card
                required: true
      responses:
        "200":
          description: OK

  /api/v1/hostel/{sid}/all/renewals:
    get:
      tags:
        - Hostel Section Query
      summary: All Renewals List At Student Member Tab -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student ID   
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit 
      responses:
        "200":
          description: OK

  /api/v1/hostel/{sid}/all/roommates/query:
    get:
      tags:
        - Hostel Section Query
      summary: All Roommates List At Student Member Tab -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student ID   
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit 
      responses:
        "200":
          description: OK

  /api/v1/hostel/{sid}/student/{huid}/select/renewal:
    post:
      tags:
        - Hostel Section Query
      summary: Student Application Renewal Select By Hostel Manager -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student ID
        - in: path
          name: huid
          required: true
          type: string
          description: This is Hostel Unit ID 
        - in : body
          name: body
          schema:
            type: object
            properties:
              fee_struct:
                type: string
                description: Enter Fee Structure ID
                required: true
              renew:
                type: string
                description: Enter Renewal Date ("2023-02-02")
                required: false  
              month:
                type: string
                description: Enter Month 
                required: false 
      responses:
        "200":
          description: OK

  /api/v1/hostel/{sid}/student/{huid}/cancel/app/renewal:
    post:
      tags:
        - Hostel Section Query
      summary: Student Application Renewal Cancel By Hostel Manager -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student ID
        - in: path
          name: huid
          required: true
          type: string
          description: This is Hostel Unit ID 
      responses:
        "200":
          description: OK

  /api/v1/hostel/{sid}/student/pay/mode/{rid}/apply/renewal:
    post:
      tags:
        - Hostel Section Query
      summary: Student Application Renewal Select By Student Side -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student ID
        - in: path
          name: rid
          required: true
          type: string
          description: This is Renewal ID 
        - in : body
          name: body
          schema:
            type: object
            properties:
              fee_payment_mode:
                type: string
                description: Enter Fee Payment Mode ("By Cash" || "UPI Transfer") same as Admission Admin
                required: true
              fee_payment_amount:
                type: amount
                description: Enter Amount
                required: true  
              transaction_date:
                type: string
                description: Enter Transaction Date Like ("2023-02-02")
                required: true  
              month:
                type: string
                description: Enter Month 
                required: false 
      responses:
        "200":
          description: OK

  /api/v1/hostel/{sid}/student/cancel/pay/mode/{rid}/apply/renewal:
    post:
      tags:
        - Hostel Section Query
      summary: Cancel & Refund Renewal From Student Side -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student ID
        - in: path
          name: rid
          required: true
          type: string
          description: This is Renewal ID 
      responses:
        "200":
          description: OK

  /api/v1/hostel/{sid}/student/{huid}/pay/offline/confirm/renewal/{aid}:
    post:
      tags:
        - Hostel Section Query
      summary: Collect One Student Renewal Offline Fees By Hostel Manager -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student ID
        - in: path
          name: aid
          required: true
          type: string
          description: This is Application ID
        - in: path
          name: huid
          required: true
          type: string
          description: This is Hostel Unit ID 
        - in : body
          name: body
          schema:
            type: object
            properties:
              transaction_date:
                type: string
                description: Enter Date Like ("2023-02-02")
                required: true
              fee_payment_mode:
                type: string
                description: Enter Mode Same as Admission Fee Receipt Mode
                required: true  
              fee_payment_amount:
                type: number
                description: Enter Amount
                required: true 
              amount:
                type: number
                description: Enter Amount
                required: true
              mode:
                type: number
                description: Enter Mode ("Offline" || "Online")
                required: true 
      responses:
        "200":
          description: OK

  /api/v1/hostel/student/{aid}/allot/bed/{huid}/renewal:
    post:
      tags:
        - Hostel Section Query
      summary: One Student Renewal Allot Bed By Hostel Manager -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Application ID   
        - in: path
          name: huid
          required: true
          type: string
          description: Enter Hostel Unit ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              dataList:
                type: array
                description: Enter Array of Student ID's Same as Admission Admin Class Allot
                required: true
              hrid:
                type: string
                description: Enter Hostel Room ID
                required: true
              bed_mode:
                type: string
                description: Enter ("Same" || "Different")
                required: true
      responses:
        "200":
          description: OK

  /api/v1/hostel/{sid}/student/{aid}/pay/refund/{huid}/renewal:
    post:
      tags:
        - Hostel Section Query
      summary: Cancel & Refund Renewal From Hostel Manager Side -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student ID
        - in: path
          name: aid
          required: true
          type: string
          description: This is Application ID 
        - in: path
          name: huid
          required: true
          type: string
          description: This is Hostel Unit ID 
        - in : body
          name: body
          schema:
            type: object
            properties:
              transaction_date:
                type: string
                description: Enter Date Like ("2023-02-02")
                required: true
              fee_payment_mode:
                type: string
                description: Enter Mode Same as Admission Fee Receipt Mode
                required: true  
              fee_payment_amount:
                type: number
                description: Enter Amount
                required: true 
              amount:
                type: number
                description: Enter Amount
                required: true
              mode:
                type: number
                description: Enter Mode ("Offline" || "Online")
                required: true
              remainAmount:
                type: number
                description: Enter Remain Amount Same as Admission Cancel & Refund
                required: true 
      responses:
        "200":
          description: OK

  /api/v1/hostel/{id}/all/classmaster/query:
    get:
      tags:
        - Hostel Section Query
      summary: All ClassMasters List -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute ID   
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit 
        - in: query
          name: search
          required: false
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK

  /api/v1/hostel/{hid}/new/announcement:
    post:
      tags:
        - Hostel Section Query
      summary: Add New Announcement By Hostel Manager -(verified)
      produces:
        - application/json
      consumes:
        - multipart/form-data
      parameters:
        - in: path
          name: hid # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The Hostel ID
        - in: formData
          name: insAnnTitle
          type: string
          required: true
          description: Announcement Title
        - in: formData
          name: insAnnDescription
          type: string
          required: true
          description: Announcement Description
        - in: formData
          name: insAnnVisibility
          type: string
          required: true
          description: Announcement Visibility
        - in: formData
          name: announceCount
          type: number
          required: true
          description: Announcement Count for UPTO -> 5 Docs
        - in: formData
          name: file
          type: file
          required: true
          description: upload Announcement Photo
        - in: formData
          name: file
          type: file
          required: true
          description: upload Announcement Document
      responses:
        "200":
          description: OK

  /api/v1/hostel/{hid}/all/announcement:
    get:
      tags:
        - Hostel Section Query
      summary: All Announcements List Query from Both Side Student + Hostel -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: hid
          required: true
          type: string
          description: This is Hostel ID   
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit 
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/retro/structure/{appId}/one/student/{sid}/query:
    patch:
      tags:
        - New Flow Finance + Admission
      summary: Edit Fee Structure At Fees Data  -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Admission ID   
        - in: path
          name: appId
          required: true
          type: string
          description: Enter Application ID
        - in: path
          name: sid
          required: true
          type: string
          description: Enter Student ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              old_fee_struct:
                type: string
                description: Enter Old Structure ID
                required: true
              new_fee_struct:
                type: string
                description: Enter New Structure ID
                required: true  
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/all/refunded/array:
    get:
      tags:
        - New Flow Finance + Admission
      summary: All Refunded Array at Admission -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Admission ID    
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit   
      responses:
        "200":
          description: OK


  /api/v1/exam/seating/{eid}/all/class/query:
    get:
      tags:
        - Seating Arrangement Query
      summary: All Classes of One Exam -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: eid
          required: true
          type: string
          description: Enter Exam ID  
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit 
        - in: query
          name: search
          required: true
          type: string
          description: Enter Search Query 
      responses:
        "200":
          description: OK

  /api/v1/exam/seating/{eid}/seating/all/query:
    get:
      tags:
        - Seating Arrangement Query
      summary: All Seating Sequence of One Exam -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: eid
          required: true
          type: string
          description: Enter Exam ID  
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit 
        - in: query
          name: search
          required: true
          type: string
          description: Enter Search Query 
      responses:
        "200":
          description: OK


  /api/v1/exam/seating/one/{said}/query:
    get:
      tags:
        - Seating Arrangement Query
      summary: One Seating Sequence of One Exam -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: said
          required: true
          type: string
          description: Enter Seating ID  
      responses:
        "200":
          description: OK

  /api/v1/exam/seating/{eid}/seating/destroy/{said}/query:
    delete:
      tags:
        - Seating Arrangement Query
      summary: Delete One Seating Sequence of One Exam -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: eid
          required: true
          type: string
          description: Enter Exam ID  
        - in: path
          name: said
          required: true
          type: string
          description: Enter Seating ID  
      responses:
        "200":
          description: OK

  /api/v1/exam/seating/{eid}/seating/edit/{said}/query:
    patch:
      tags:
        - Seating Arrangement Query
      summary: Edit Seating Sequence At Exam  -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: eid
          required: true
          type: string
          description: Enter Exam ID   
        - in: path
          name: said
          required: true
          type: string
          description: Enter Seating ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              papers:
                type: array
                description: Enter Array of Objects [{ subjectId: "9830198398182391283", subjectName: "Physics", totalMarks: 100, date: "2021-02-02", startTime: "10:10AM", endTime: "12:10PM", duration: "2hrs", subjectMasterId: "0931930921090120390930", from: 1, to: 10}]
                required: true 
      responses:
        "200":
          description: OK

  /api/v1/exam/seating/{eid}/seating/new/query:
    post:
      tags:
        - Seating Arrangement Query
      summary: New Seating Sequence At Exam  -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: eid
          required: true
          type: string
          description: Enter Exam ID   
        - in : body
          name: body
          schema:
            type: object
            properties:
              papers:
                type: array
                description: Enter Array of Objects [{ subjectId: "9830198398182391283", subjectName: "Physics", totalMarks: 100, date: "2021-02-02", startTime: "10:10AM", endTime: "12:10PM", duration: "2hrs", subjectMasterId: "0931930921090120390930", from: 1, to: 10}]
                required: true 
              seat_block_name:
                type: string
                description: Enter Block Name
                required: true 
              seat_block_class:
                type: string
                description: Enter Class ID
                required: true 
              seat_valid_staff:
                type: string
                description: Enter Type ("External" || "Staff")
                required: true 
              seat_block_staff:
                type: string
                description: if type "Staff" then Enter Staff ID
                required: false 
              seat_valid_staff_name:
                type: string
                description: if type "External" then Enter Staff Name
                required: false 
      responses:
        "200":
          description: OK
  /api/v1/attendance/subject/{sid}/optional/student:
    get:
      tags:
        - Student Attendance
      summary: This is give list of all student in subject teacher (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Subject id
      responses:
        "200":
          description: OK

  /api/v1/attendance/subject/{sid}/student/attendance:
    get:
      tags:
        - Student Attendance
      summary: This is give current date particular Student Attendance id which is use in update the Student attendance api (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Subject id
        - in: query
          name: date
          type: string
          description: This is date like (08/07/2022)          
      responses:
        "200":
          description: OK

    post:
      tags:
        - Student Attendance
      summary: Mark Sudent Attendance by the Subject Teacher (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is subject id
        - in : body
          name: body
          schema:
            type: object
            properties:
              date:
                type: string
                description: only date is accept in this format like "16/07/2022"
                required: true
              present:
                type: array
                description: This is present array of staff ids like this ["62bb4dd84f87f09b9c55b625", "62bb4dd84f87f09b9c55b625"]
                items:
                  type: string
                  description: staff id
              absent:
                type: array
                description: This is absent array of staff ids like this ["62bb4dd84f87f09b9c55b625", "62bb4dd84f87f09b9c55b625"]
                items:
                  type: string
                  description: staff id
      responses:
        "200":
          description: OK

  /api/v1/attendance/student/subject/update/{said}:
    patch:
      tags:
        - Student Attendance
      summary: Update Mark student Attendance by the Subject Teacher (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: said
          required: true
          type: string
          description: This is  student Attendance id of particular date that is current date
        - in : body
          name: body
          schema:
            type: object
            properties:
              date:
                type: string
                description: only date is accept in this format like "16/07/2022"
                required: true
              present:
                type: array
                description: This is present array of staff ids like this ["62bb4dd84f87f09b9c55b625", "62bb4dd84f87f09b9c55b625"]
                items:
                  type: string
                  description: staff id
              absent:
                type: array
                description: This is absent array of staff ids like this ["62bb4dd84f87f09b9c55b625", "62bb4dd84f87f09b9c55b625"]
                items:
                  type: string
                  description: staff id
      responses:
        "200":
          description: OK
  
  /api/v1/attendance/subject/student-calender/{sid}:
    get:
      tags:
        - Student Attendance
      summary: This is give the one month all attendance OR one year all attendance (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id
        - in: query
          name: month
          schema:
            type: integer
          description: Enter a month in digit that month attendance you want
        - in: query
          name: year
          schema:
            type: integer
          description: Enter a year in digit that year attendance you want
        - in: query
          name: subjectId
          schema:
            type: string
          description: It is a subject Id
      responses:
        "200":
          description: OK
  
  /api/v1/attendance/student/{sid}/subject/list:
    get:
      tags:
        - Student Attendance
      summary: This is give list of all subject in student side (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id
      responses:
        "200":
          description: OK


  /api/v1/exam/seating/{eid}/seating/new/query/automate:
    post:
      tags:
        - Seating Arrangement Query
      summary: Automate Seating Arrangement Query  (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: eid
          required: true
          type: string
          description: This is Exam id
        - in : body
          name: body
          schema:
            type: object
            properties:
              staff_list:
                type: array
                description: Enter Array of Object Id's ["2198013901293092309", "92839018209380839"]
                required: true
                items:
                  type: string
                  description: staff ID
              class_list:
                type: array
                description: Enter Array of Object Id's ["62bb4dd84f87f09b9c55b625", "62bb4dd84f87f09b9c55b625"]
                required: true
                items:
                  type: string
                  description: class ID
              hall_limit:
                type: number
                description: Enter Hall Limit
                required: true
              sequence:
                type: string
                description: Enter Sequence ("One Student / Bench") || ("Two Student / Bench")
                required: true
      responses:
        "200":
          description: OK

# for supervisor activity
  /api/v1/attendance/hall/exam/{eid}/seating/{seid}/student/list:
    get:
      tags:
        - Exam Related New Api for added new things
      summary: This is give all student list in supervisor side (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: eid
          required: true
          type: string
          description: This is Exam id
        - in: path
          name: seid
          required: true
          type: string
          description: This is Seating id          
        - in: query
          name: date
          type: string
          description: This is date like (2023-04-16)          
      responses:
        "200":
          description: OK
  
  /api/v1/attendance/exam/{eid}/seating/{seid}/attendance:
    post:
      tags:
        - Exam Related New Api for added new things
      summary: Mark Sudent Attendance by the Supervisor (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: eid
          required: true
          type: string
          description: This is Exam id
        - in: path
          name: seid
          required: true
          type: string
          description: This is Seating id          
        - in : body
          name: body
          schema:
            type: object
            properties:
              date:
                type: string
                description: only date is accept in this format like "16/07/2022"
                required: true
              present:
                type: array
                description: This is present array of student ids like this ["62bb4dd84f87f09b9c55b625", "62bb4dd84f87f09b9c55b625"]
                items:
                  type: object
                  properties:
                    studentId:
                      type: string
                      description: student id
                    subjectId:
                      type: string
                      description: subject id                      
              absent:
                type: array
                description: This is present array of student ids like this ["62bb4dd84f87f09b9c55b625", "62bb4dd84f87f09b9c55b625"]
                items:
                  type: object
                  properties:
                    studentId:
                      type: string
                      description: student id
                    subjectId:
                      type: string
                      description: subject id 
      responses:
        "200":
          description: OK

  /api/v1/attendance/exam/update/student/attendance/{said}:
    patch:
      tags:
        - Exam Related New Api for added new things
      summary: Update Mark student Attendance by the Supervisor (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: said
          required: true
          type: string
          description: This is  student Attendance id of particular date that is current date
        - in : body
          name: body
          schema:
            type: object
            properties:
              date:
                type: string
                description: only date is accept in this format like "16/07/2022"
                required: true
              present:
                type: array
                description: This is present array of student ids like this ["62bb4dd84f87f09b9c55b625", "62bb4dd84f87f09b9c55b625"]
                items:
                  type: object
                  properties:
                    studentId:
                      type: string
                      description: student id
                    subjectId:
                      type: string
                      description: subject id                      
              absent:
                type: array
                description: This is present array of student ids like this ["62bb4dd84f87f09b9c55b625", "62bb4dd84f87f09b9c55b625"]
                items:
                  type: object
                  properties:
                    studentId:
                      type: string
                      description: student id
                    subjectId:
                      type: string
                      description: subject id 
      responses:
        "200":
          description: OK
  
# for batch to assign all staff designation
  /api/v1/batch/{bid}/assign/staff/desigantion:
    patch:
      tags:
        - Re-assign All designation to staff
      summary: Assign designation to staff (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: bid
          required: true
          type: string
          description: This is Batch id
      responses:
        "200":
          description: OK

  /api/v1/exam/malicious/student/{sid}/create:
    post:
      tags:
        - Exam Related New Api for added new things
      summary: create for malicious activity (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This student id
        - in : body
          name: body
          schema:
            type: object
            properties:
              reason:
                type: string
                description: give any reason
                required: true
              seid:
                type: string
                description: seating id
                required: true
              subId:
                type: string
                description: subject id
                required: true                
      responses:
        "200":
          description: OK

  /api/v1/exam/malicious/examination/department/{did}:
    get:
      tags:
        - Exam Related New Api for added new things
      summary: List of all malicious activity (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is Department id
      responses:
        "200":
          description: OK

  /api/v1/exam/exam/grade/custom/list:
    get:
      tags:
        - Exam Related New Api for added new things
      summary: List of all custom grade (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: OK

  /api/v1/exam/exam/grade/department/{did}/create:
    post:
      tags:
        - Exam Related New Api for added new things
      summary: create Slab based grade (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is department id
        - in : body
          name: body
          schema:
            type: object
            properties:
              grade_type:
                type: string
                description: two type of slab
                required: true
              grade_count:
                type: string
                description: two type of slab
                required: true     
              grades:
                type: array
                description: This is grades array
                items:
                  type: object
                  properties:
                    serial_no:
                      type: number
                      description: serial number id
                    start_range:
                      type: number
                      description: start range id
                    end_range:
                      type: number
                      description: end  reange id
                    grade_symbol:
                      type: string
                      description: grade symbol like A, B, C                                                                                             
      responses:
        "200":
          description: OK


  /api/v1/exam/fee/structure/{efid}/edit:
    patch:
      tags:
        - Backlog Fee Structure Query
      summary: Edit Exam Fee Structure Query -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: efid
          required: true
          type: string
          description: Enter Exam Fee Structure ID  
        - in : body
          name: body
          schema:
            type: object
            properties:
              exam_fee_type:
                type: string
                description: Select Fees Type ("Per student" || "Per Backlog paper")
                required: true
              exam_fee_amount:
                type: number
                description: Enter Fee Amount
                required: true  
      responses:
        "200":
          description: OK

  /api/v1/exam/fee/structure/{did}/all/query:
    get:
      tags:
        - Backlog Fee Structure Query
      summary: All Exam Fee Structure Query -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: Enter Department ID
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit 
      responses:
        "200":
          description: OK

  /api/v1/exam/fee/structure/one/{efid}/all/query:
    get:
      tags:
        - Backlog Fee Structure Query
      summary: One Exam Fee Structure Query -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: efid
          required: true
          type: string
          description: Enter Exam Fee Structure ID
      responses:
        "200":
          description: OK

  /api/v1/exam/backlog/{did}/new/exam:
    post:
      tags:
        - Backlog Fee Structure Query
      summary: It is created exam in that particular department with according their batch id (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: It is select Department id for creating the exam   
        - in: body
          name: body
          schema:
            type: object
            properties:
              examName:
                type: string
                description: give name of the exam
                required: true
              exist_batch:
                type: string
                description: Enter Batch ID
                required: true
              examType:
                type: string
                required: true
                description: give the exam type  that is "Final" or "Other"
              examMode:
                type: string
                required: true
                description: give the exam mode  that is "Offline" or "Online"
              examWeight:
                type: integer
                description: give the exam weightage, only exam type is "Other"           
              allclasses:
                type: array
                required: true 
                description: give the arrays of the classes id that is selected by the class Master
                items:
                  type: string
                  description: It is accept classes id 
              allsubject:
                type: array
                description: give the arrays of the subject with their details
                required: true 
                items:
                  type: object
                  properties:
                    subjectIds:
                      type: array
                      required: true 
                      description: give the arrays of the subjects id that is selected by the subject Master
                      items:
                        type: string
                        description: It is accept subject id 
                    subjectName:
                      type: string
                      required: true
                      description: give the name of the subject that is show in Subject Master(subjectName)
                    totalMarks:
                      type: integer
                      required: true
                      description: give the total maximum marks of that subject
                    date:
                      type: string
                      required: true
                      description: give the date which day exam is schedule of that subject and fomate (28/07/2022) 
                    startTime:
                      type: string
                      required: true
                      description: give the exam start time of that particular subject (02:00 Pm)
                    endTime:
                      type: string
                      required: true
                      description: give the exam end time of that particular subject (04:00 Pm)
                    _id:
                      type: string
                      required: true
                      description: it is Subject Master id that is selecetd when add the subject in created time                                                                                                    
      responses:
        "200":
          description: OK

  /api/v1/exam/backlog/{did}/all/exam:
    get:
      tags:
        - Backlog Fee Structure Query
      summary: All Exam Query -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: Enter Department ID
      responses:
        "200":
          description: OK


  /api/v1/exam/backlog/{did}/classmaster:
    get:
      tags:
        - Backlog Fee Structure Query
      summary: It is give the total class master with their classes id(divisions) created in that particular department with according their batch id (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: it is selected Department id for creating the exam         
      responses:
        "200":
          description: OK

  /api/v1/exam/backlog/{cmid}/subjectmaster:
    get:
      tags:
        - Backlog Fee Structure Query
      summary: It is give the total Subject master with their subjects id (divisions) created in that particular department with according their batch id (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cmid
          required: true
          type: string
          description: It is selected Class Master id for showing the subject master list        
      responses:
        "200":
          description: OK



#Mentor Mentee Documentation

  /api/v1/mentor/mentee/{did}/new/mentor/{sid}:
    post:
      tags:
        - Mentor Mentee Query
      summary: Assign Mentor Mentee By Department Head -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: Enter Department ID
        - in: path
          name: sid
          required: true
          type: string
          description: Enter Staff ID
      responses:
        "200":
          description: OK

  /api/v1/mentor/mentee/{did}/all/mentor:
    get:
      tags:
        - Mentor Mentee Query
      summary: All Mentor Mentee at Department Head -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: Enter Department ID
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit Number
      responses:
        "200":
          description: OK

  /api/v1/mentor/mentee/one/mentor/{mid}:
    get:
      tags:
        - Mentor Mentee Query
      summary: One Mentor Mentee Query -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: mid
          required: true
          type: string
          description: Enter Mentor ID
      responses:
        "200":
          description: OK

  /api/v1/mentor/mentee/one/mentor/{mid}/all/mentees:
    get:
      tags:
        - Mentor Mentee Query
      summary: One Mentor Mentee All Mentees-(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: mid
          required: true
          type: string
          description: Enter Mentor ID
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit Number
      responses:
        "200":
          description: OK

  /api/v1/mentor/mentee/{did}/one/mentor/{mid}/new/mentees:
    post:
      tags:
        - Mentor Mentee Query
      summary: One Mentor Add New Mentees-(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: Enter Department ID
        - in: path
          name: mid
          required: true
          type: string
          description: Enter Mentor ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              student_array:
                type: array
                description: Enter Student ID
                required: true
      responses:
        "200":
          description: OK

  /api/v1/mentor/mentee/{did}/one/mentor/{mid}/destroy/mentees:
    post:
      tags:
        - Mentor Mentee Query
      summary: One Mentor Remove Existing Mentees-(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: Enter Department ID
        - in: path
          name: mid
          required: true
          type: string
          description: Enter Mentor ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              sid:
                type: string
                description: Enter Student ID
                required: true
      responses:
        "200":
          description: OK

  /api/v1/mentor/mentee/{mid}/new/query/{sid}:
    patch:
      tags:
        - Mentor Mentee Query
      summary: Add New Query By Student -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: mid
          required: true
          type: string
          description: Enter Mentor ID
        - in: path
          name: sid
          required: true
          type: string
          description: Enter Student ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              query:
                type: string
                description: Enter Query Reason
                required: true
      responses:
        "200":
          description: OK

  /api/v1/mentor/mentee/one/query/{qid}:
    get:
      tags:
        - Mentor Mentee Query
      summary: View One Query By Student -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: qid
          required: true
          type: string
          description: Enter Query ID
      responses:
        "200":
          description: OK


  /api/v1/mentor/mentee/{sid}/all/query:
    get:
      tags:
        - Mentor Mentee Query
      summary: View All Query At Student Side -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: Enter Student ID
      responses:
        "200":
          description: OK

  /api/v1/mentor/mentee/{mid}/all/query/by/flow:
    get:
      tags:
        - Mentor Mentee Query
      summary: View All Query By Status At Student Side + Mentor Side -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: mid
          required: true
          type: string
          description: Enter Mentor ID
        - in: query
          name: status
          required: true
          type: string
          description: Enter Status ("Solved" || "UnSolved")
        - in: query
          name: flow
          required: true
          type: string
          description: Enter Flow ("By_Mentor" || "By_Department_Head")
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit Number
      responses:
        "200":
          description: OK


  /api/v1/mentor/mentee/one/query/{qid}/remark/flow:
    patch:
      tags:
        - Mentor Mentee Query
      summary: Mark Remark By Mentor Side + Department Side -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: qid
          required: true
          type: string
          description: Enter Query ID
        - in: query
          name: flow
          required: true
          type: string
          description: Enter Flow ("By_Mentor" || "By_Department_Head")
        - in : body
          name: body
          schema:
            type: object
            properties:
              remark:
                type: string
                description: Enter Remark Reason
                required: true
              forward:
                type: string
                description: Enter Forward Staff ID
                required: false
      responses:
        "200":
          description: OK

  /api/v1/mentor/mentee/one/query/{qid}/report:
    patch:
      tags:
        - Mentor Mentee Query
      summary: Report Query By Student Side -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: qid
          required: true
          type: string
          description: Enter Query ID
      responses:
        "200":
          description: OK

  /api/v1/mentor/mentee/{did}/all/class/query:
    get:
      tags:
        - Mentor Mentee Query
      summary: All Mentor Mentee Class By One Department -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: Enter Department ID
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit Number
      responses:
        "200":
          description: OK


  /api/v1/mentor/mentee/{cid}/all/filter/student/query:
    get:
      tags:
        - Mentor Mentee Query
      summary: All Not Assigned Student By One Class By One Department -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: Enter Class ID
        - in: query
          name: search
          required: false
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK
          
          
  # for supervisor activity
  /api/v1/attendance/hall/exam/{eid}/seating/{seid}/student/list:
    get:
      tags:
        - Exam Related New Api for added new things
      summary: This is give all student list in supervisor side (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: eid
          required: true
          type: string
          description: This is Exam id
        - in: path
          name: seid
          required: true
          type: string
          description: This is Seating id          
        - in: query
          name: date
          type: string
          description: This is date like (2023-04-16)          
      responses:
        "200":
          description: OK
  
  /api/v1/attendance/exam/{eid}/seating/{seid}/attendance:
    get:
      tags:
        - Exam Related New Api for added new things
      summary: This is give all student current mark attendace today by supervisor side (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: eid
          required: true
          type: string
          description: This is Exam id
        - in: path
          name: seid
          required: true
          type: string
          description: This is Seating id          
        - in: query
          name: date
          type: string
          description: This is date like "16/07/2022"         
      responses:
        "200":
          description: OK    
    post:
      tags:
        - Exam Related New Api for added new things
      summary: Mark Sudent Attendance by the Supervisor (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: eid
          required: true
          type: string
          description: This is Exam id
        - in: path
          name: seid
          required: true
          type: string
          description: This is Seating id          
        - in : body
          name: body
          schema:
            type: object
            properties:
              date:
                type: string
                description: only date is accept in this format like "16/07/2022"
                required: true
              present:
                type: array
                description: This is present array of student ids like this ["62bb4dd84f87f09b9c55b625", "62bb4dd84f87f09b9c55b625"]
                items:
                  type: object
                  properties:
                    studentId:
                      type: string
                      description: student id
                    subjectId:
                      type: string
                      description: subject id                      
              absent:
                type: array
                description: This is present array of student ids like this ["62bb4dd84f87f09b9c55b625", "62bb4dd84f87f09b9c55b625"]
                items:
                  type: object
                  properties:
                    studentId:
                      type: string
                      description: student id
                    subjectId:
                      type: string
                      description: subject id 
      responses:
        "200":
          description: OK

  /api/v1/attendance/exam/update/student/attendance/{said}:
    patch:
      tags:
        - Exam Related New Api for added new things
      summary: Update Mark student Attendance by the Supervisor (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: said
          required: true
          type: string
          description: This is  student Attendance id of particular date that is current date
        - in : body
          name: body
          schema:
            type: object
            properties:
              date:
                type: string
                description: only date is accept in this format like "16/07/2022"
                required: true
              present:
                type: array
                description: This is present array of student ids like this ["62bb4dd84f87f09b9c55b625", "62bb4dd84f87f09b9c55b625"]
                items:
                  type: object
                  properties:
                    studentId:
                      type: string
                      description: student id
                    subjectId:
                      type: string
                      description: subject id                      
              absent:
                type: array
                description: This is present array of student ids like this ["62bb4dd84f87f09b9c55b625", "62bb4dd84f87f09b9c55b625"]
                items:
                  type: object
                  properties:
                    studentId:
                      type: string
                      description: student id
                    subjectId:
                      type: string
                      description: subject id 
      responses:
        "200":
          description: OK
  
# for batch to assign all staff designation
  /api/v1/batch/{bid}/assign/staff/desigantion:
    patch:
      tags:
        - Re-assign All designation to staff
      summary: Assign designation to staff (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: bid
          required: true
          type: string
          description: This is Batch id
      responses:
        "200":
          description: OK

  /api/v1/exam/malicious/student/{sid}/create:
    post:
      tags:
        - Exam Related New Api for added new things
      summary: create for malicious activity (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This student id
        - in : body
          name: body
          schema:
            type: object
            properties:
              reason:
                type: string
                description: give any reason
                required: true
              seid:
                type: string
                description: seating id
                required: true
              subId:
                type: string
                description: subject id
                required: true                
      responses:
        "200":
          description: OK

  /api/v1/exam/malicious/examination/department/{did}:
    get:
      tags:
        - Exam Related New Api for added new things
      summary: List of all malicious activity (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is Department id
      responses:
        "200":
          description: OK

  /api/v1/exam/exam/grade/custom/list:
    get:
      tags:
        - Exam Related New Api for added new things
      summary: List of all custom grade (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: OK

  /api/v1/exam/exam/grade/department/{did}/create:
    get:
      tags:
        - Exam Related New Api for added new things
      summary: This is give one grade system all details (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is department id
      responses:
        "200":
          description: OK  
    post:
      tags:
        - Exam Related New Api for added new things
      summary: create Slab based grade (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is department id
        - in: query
          name: custom_grade
          required: true
          type: string
          description: This is select custom grade id          
        - in : body
          name: body
          schema:
            type: object
            properties:
              grade_type:
                type: string
                description: two type of slab
                required: true
              grade_count:
                type: string
                description: two type of slab
                required: true     
              grades:
                type: array
                description: This is grades array
                items:
                  type: object
                  properties:
                    serial_no:
                      type: number
                      description: serial number id
                    start_range:
                      type: number
                      description: start range id
                    end_range:
                      type: number
                      description: end  reange id
                    grade_symbol:
                      type: string
                      description: grade symbol like A, B, C                                                                                             
      responses:
        "200":
          description: OK

  /api/v1/exam/all/student/report/card/finalize/class/{cid}:
    post:
      tags:
        - Exam Related New Api for added new things
      summary: This is finalize all student report card (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class id
      responses:
        "200":
          description: OK 

  /api/v1/exam/send/student/update/exam/{eid}/notify:
    get:
      tags:
        - Exam Related New Api for added new things
      summary: This is give notifacition of subject teacher backlog marks update (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: eid
          required: true
          type: string
          description: This is Exam id
      responses:
        "200":
          description: OK 

  /api/v1/exam/one/subject/{sid}/exam/{eid}/student/list:
    get:
      tags:
        - Exam Related New Api for added new things
      summary: This is give backlog studentlist by subject teacher (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is subject id
        - in: path
          name: eid
          required: true
          type: string
          description: This is exam id          
      responses:
        "200":
          description: OK 

  /api/v1/exam/one/subject/{sid}/student/mark/update:
    post:
      tags:
        - Exam Related New Api for added new things
      summary: This is give backlog marks update by subject teacher (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is subject id
        - in : body
          name: body
          schema:
            type: object
            properties:
              examId:
                type: string
                description: this is exam id
                required: true
              marks:
                type: object
                properties:
                  studentId:
                    type: string
                    description: this is student id
                    required: true
                  obtainMarks:
                    type: number
                    description: this is obtain id
                    required: true
                  previous_year_id:
                    type: string
                    description: this is student previous year id
                    required: true
                description: this is all student marks with related data
                required: true
      responses:
        "200":
          description: OK


#Platform All Student Removal By Institute Admin

  /api/v1/auth/remove/platform/one/institute/{cid}/all/student:
    delete:
      tags:
        - Platform Student + User Deletion
      summary: Delete All Student + User By Institute Admin (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Class id
        - in : body
          name: body
          schema:
            type: object
            properties:
              all_students:
                type: array
                description: Enter Array of Student ID's
                required: true
      responses:
        "200":
          description: OK

  /api/v1/admission/{uid}/user/{aid}/apply/direct/online:
    post:
      tags:
        - Admission Admin Module Query
      summary: User as apply on Direct New Application Student joining form + Online Payment Process -(verified )
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: uid
          required: true
          type: string
          description: This is user id which apply to institute as student
        - in: path
          name: aid
          required: true
          type: string
          description: This is application id which is choose by user to apply for as student
        # - in: formData
        #   name: file
        #   type: file
        #   required: true
        #   description: upload your student profile photo
        # - in: formData
        #   name: studentCode
        #   type: string
        #   required: true
        #   description: This is student code to join class which provided by the class Teacher
        # - in: formData
        #   name: studentFirstName
        #   type: string
        #   required: true
        #   description: student first name
        # - in: formData
        #   name: studentMiddleName
        #   type: string
        #   required: true
        #   description: student middle name
        # - in: formData
        #   name: studentLastName
        #   type: string
        #   required: true
        #   description: student last name
        # - in: formData
        #   name: studentDOB
        #   type: string
        #   required: true
        #   description: student studentDOB
        # - in: formData
        #   name: studentGender
        #   type: string
        #   required: true
        #   description: student studentGender
        # - in: formData
        #   name: studentNationality
        #   type: string
        #   required: true
        #   description: student studentNationality
        # - in: formData
        #   name: studentMTongue
        #   type: string
        #   required: true
        #   description: student studentMTongue
        # - in: formData
        #   name: studentMothersName
        #   type: string
        #   required: true
        #   description: student studentMotherName
        # - in: formData
        #   name: studentCast
        #   type: string
        #   required: true
        #   description: student studentCast
        # - in: formData
        #   name: studentCastCategory
        #   type: string
        #   required: true
        #   description: student studentCastCategory
        # - in: formData
        #   name: studentReligion
        #   type: string
        #   required: true
        #   description: student studentReligion
        # - in: formData
        #   name: studentBirthPlace
        #   type: string
        #   required: true
        #   description: student studentBirthPlace
        # - in: formData
        #   name: studentDistrict
        #   type: string
        #   required: true
        #   description: student studentDistrict
        # - in: formData
        #   name: studentState
        #   type: string
        #   required: true
        #   description: student studentState
        # - in: formData
        #   name: studentAddress
        #   type: string
        #   required: true
        #   description: student studentAddress
        # - in: formData
        #   name: studentPhoneNumber
        #   type: string
        #   required: true
        #   description: student studentPhoneNumber
        # - in: formData
        #   name: studentAadharNumber
        #   type: string
        #   required: true
        #   description: student studentAadharNumber
        # - in: formData
        #   name: studentParentsName
        #   type: string
        #   required: true
        #   description: student studentParentsName
        # - in: formData
        #   name: studentParentsPhoneNumber
        #   type: string
        #   required: true
        #   description: student studentParentsPhoneNumber
        # - in: formData
        #   name: file
        #   type: file
        #   required: true
        #   description: upload your addhar card front side photo  
        # - in: formData
        #   name: file
        #   type: file
        #   required: true
          # description: upload your addhar card back side photo     
      responses:
        "200":
          description: OK

  /api/v1/admission/{sid}/student/{aid}/docs/confirm/status/{statusId}:
    patch:
      tags:
        - Admission Admin Module Query
      summary: Confirm || Cancel Selection By Student for DOCS -(verified )
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student ID
        - in: path
          name: aid
          required: true
          type: string
          description: This is Application ID  
        - in: path
          name: statusId
          required: true
          type: string
          description: This is Status ID
        - in: query
          name: flow
          required: true
          type: string
          description: This is "CONFIRM_QUERY" || "CANCEL_QUERY"    
      responses:
        "200":
          description: OK

  /api/v1/admission/{rcid}/add/scholar/number/query:
    patch:
      tags:
        - Admission Admin Module Query
      summary: Add Scholar Number By Admission Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: rcid
          required: true
          type: string
          description: This is Remaining List id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              scholar_ship_number:
                type: string
                description: Enter Scholar Ship Number
      responses:
        "200":
          description: OK


  /api/v1/library/fine/charges/{lid}/query:
    get:
      tags:
        - Library Module 
      summary: All Fine Charges Distinguished By Flow (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: lid
          required: true
          type: string
          description: This is Library id 
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
        - in: query
          name: flow
          required: true
          type: string
          description: Enter Flow ("Remaining" || "Paid")
      responses:
        "200":
          description: OK


  /api/v1/library/fine/{lid}/query/collect/{sid}/offline/{bid}:
    patch:
      tags:
        - Library Module 
      summary: Collect Fine Offline By Librarian (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: lid
          required: true
          type: string
          description: This is Library id 
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id 
        - in: path
          name: bid
          required: true
          type: string
          description: This is Book id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              amount:
                type: number
                description: Enter price
              prid:
                type: string
                description: Enter pending card ID
      responses:
        "200":
          description: OK


#New Add-Ons API

  /api/v1/community/quote/{uid}/display:
    patch:
      tags:
        - New Add-Ons Query
      summary: Display Random Quotes (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: uid
          required: true
          type: string
          description: This is User id 
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/add/auto/qrcode/query:
    patch:
      tags:
        - New Add-Ons Query
      summary: Upload QR Code Query (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is New Application ID
        - in: query
          name: qr_code
          required: true
          type: string
          description: This is QR Code KEY
      responses:
        "200":
          description: OK


  /api/v1/extra/{sid}/existing/user/phone/query:
    patch:
      tags:
        - New Add-Ons Query
      summary: Update User Phone Number By Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              userPhoneNumber:
                type: number
                description: Enter Phone Number
      responses:
        "200":
          description: OK

  /api/v1/admission/{rid}/drop/fees/{sid}/query:
    patch:
      tags:
        - New Add-Ons Query
      summary: Drop Remaining Fees Card (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: rid
          required: true
          type: string
          description: This is Remaining Card ID
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student ID
      responses:
        "200":
          description: OK

  /api/v1/admission/{sid}/add/fees/card/query:
    post:
      tags:
        - New Add-Ons Query
      summary: Add / New Remaining Fees Card (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              appId:
                type: string
                description: Enter NewApplication ID
              struct:
                type: string
                description: Enter Structure ID
      responses:
        "200":
          description: OK

  /api/v1/admission/{aid}/paid/already/card/remaining/fee/{sid}/student/{appId}:
    post:
      tags:
        - New Add-Ons Query
      summary: Mark Remaining Fee paid by Admission Admin + add body content + Remain Card (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Admission id 
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id
        - in: path
          name: appId
          required: true
          type: string
          description: This is Application id
        - in: body
          name: body
          schema:
            type: object
            required:
              - amount
              - mode
              - type
            properties:
              amount:
                type: number
                description: Enter amount
                required: true
              mode:
                type: string
                description: Enter payment mode ("Online" | "Offline" | "Exempted")
                required: true
              type:
                type: string
                description: Enter Installment Value
                required: true
              remain_1:
                type: string
                description: Enter Remaining Inner Card ID
                required: true
              rid:
                type: string
                description: Enter Remaining Card ID
                required: true
      responses:
        "200":
          description: OK

  /api/v1/admission/paid/already/card/government/grant/fee/{sid}/student/{appId}:
    post:
      tags:
        - New Add-Ons Query
      summary: Mark Government Grant Fee paid by Finance Manager + add body content + Remain Card (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id
        - in: path
          name: appId
          required: true
          type: string
          description: This is Application id
        - in : body
          name: body
          schema:
            type: object
            properties:
              fee_payment_mode:
                type: string
                description: Enter Fee Mode ("Government/Scholarship")
                required: false
              fee_payment_amount:
                type: number
                description: Enter Amount
                required: false
              transaction_date:
                type: string
                description: Enter Date Like ("2023-02-02")
                required: false
              fee_bank_name:
                type: string
                description: Enter Bank Name e.g SBI
                required: false
              fee_bank_holder:
                type: string
                description: Enter Bank Holder Name e.g Mithkal
                required: false
              fee_utr_reference:
                type: string
                description: Enter Fee Unique Transaction Reference Number (UTR)
                required: false
              amount:
                type: number
                description: Enter amount
              mode:
                type: string
                description: Enter payment mode ("Online" | "Offline" | "Exempted")
              type:
                type: string
                description: Enter Installment Value
              scid:
                type: string
                description: Enter ScholarShip ID
                required: true
              remain_1:
                type: string
                description: Enter Remaining Inner Card ID
                required: true
              rid:
                type: string
                description: Enter Remaining Card ID
                required: true
      responses:
        "200":
          description: OK


  /api/v1/extra/access/fees/editable/query:
    patch:
      tags:
        - New Add-Ons Query
      summary: Update Installment Accessible By Student Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: flow
          required: true
          type: string
          description: Enter Flow ("Institute_Admin" || "Finance_Manager" || "Admission_Admin")
        - in : body
          name: body
          schema:
            type: object
            properties:
              id:
                type: string
                description: Enter Institute ID if flow is Institute_Admin
              sid:
                type: string
                description: Enter Student ID if flow is Finance_Manager || Admission_Admin
              online_amount_edit_access:
                type: string
                description: Enter Access ("Not Granted" || "Granted")
      responses:
        "200":
          description: OK

#Super Admin

  /api/v1/admin/all/{id}/bank/accounts/query:
    get:
      tags:
        - Super Admin Query
      summary: Get One Institute All Bank Accounts By Super Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute ID
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
      responses:
        "200":
          description: OK

  /api/v1/admin/repay/query/institute/{id}:
    get:
      tags:
        - Super Admin Query
      summary: Get One Institute All Repay History By Super Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute ID
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
      responses:
        "200":
          description: OK


#Guest Pay

  /api/v1/guest/pay/online/search/institute/search/student:
    post:
      tags:
        - Guest Pay Online Query
      summary: Get One Institute By Its Code and Student By Its GR (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              code:
                type: string
                description: Enter Institute Code
                required: true
              gr:
                type: string
                description: Enter Student GR
                required: true
      responses:
        "200":
          description: OK

  /api/v1/ins/{cid}/approve/student/query:
    post:
      tags:
        - Guest Pay Online Query
      summary: Approve Multiple Student By Class Teacher -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Class Teacher ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              unapprove:
                type: array
                description: Enter Array of Object Id's
                required: true
      responses:
        "200":
          description: OK

  /api/v1/extra/{sid}/active/designation/role/query:
    patch:
      tags:
        - New Add-Ons Query
      summary: Mark Current Designation As a Active Role -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Staff ID
        - in: query
          name: flow
          required: true
          type: string
          description: This is Flow ("Department_Head" || "Class_Teacher" || "Subject_Teacher" || "Finance_Manager" || "Admission_Admin" || "Transportation_Manager" || "Sports_Head" || "Librarian" || "Sports_Class_Head" || "Event_Manager" || "Hostel_Manager" || "Alumini" || "Moderator")
        - in: query
          name: flow_id
          required: true
          type: string
          description: This is Flow ID
      responses:
        "200":
          description: OK

#Academic Module
  /api/v1/academic/analytics/{sid}/all/chapter:
    get:
      tags:
        - Academic Query
      summary: Get All Chapters of One Subject -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Subject ID
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
        - in: query
          name: search
          required: false
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK

  /api/v1/academic/analytics/{cid}/all/topic:
    get:
      tags:
        - Academic Query
      summary: Get All Topics of One Chapter -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Chapter ID
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
        - in: query
          name: search
          required: false
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK

  /api/v1/academic/analytics/edit/one/{ctid}/topic/query:
    patch:
      tags:
        - Academic Query
      summary: Edit One Topic and send whole object as body -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: ctid
          required: true
          type: string
          description: This is Chapter Topic ID
      responses:
        "200":
          description: OK


  /api/v1/academic/analytics/{tid}/one/topic/query:
    get:
      tags:
        - Academic Query
      summary: One Topic All Details -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: tid
          required: true
          type: string
          description: This is Topic ID
      responses:
        "200":
          description: OK

  /api/v1/academic/analytics/{tid}/status/query:
    patch:
      tags:
        - Academic Query
      summary: Update One Topic Status -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: tid
          required: true
          type: string
          description: This is Topic ID
      responses:
        "200":
          description: OK

  /api/v1/academic/analytics/edit/{sid}/new/lecture/{subId}/query:
    post:
      tags:
        - Academic Query
      summary: Update Subject Daily Update With Recording -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Subject Daily Update ID
        - in: path
          name: subId
          required: true
          type: string
          description: This is Subject ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              arr:
                type: array
                description: Enter Array of Object Id's (Chapter Topic)
                required: true
              rec_status:
                type: string
                description: Enter Status ("Lecture" || "Practical" || "Tutorial")
                required: true
      responses:
        "200":
          description: OK

  /api/v1/extra/export/one/student/card/query:
    post:
      tags:
        - ID Card Query
      summary: One Student ID Card Query -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              sid:
                type: string
                description: Enter Student ID
                required: true
      responses:
        "200":
          description: OK

  /api/v1/extra/all/classmates/{sid}/query:
    get:
      tags:
        - Id Card Query
      summary: Get All Class Mates of One Student -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student ID
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
      responses:
        "200":
          description: OK


  /api/v1/ins/{sid}/one/subject/query:
    get:
      tags:
        - Id Card Query
      summary: Get One Subject Profile Query -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Subject ID
      responses:
        "200":
          description: OK

  /api/v1/extra/send/filtered/message/query:
    patch:
      tags:
        - Id Card Query
      summary: Send Message To Filtered Student-(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              filtered_arr:
                type: array
                description: Enter Array of Student ID
                required: true
              message:
                type: string
                description: Enter message
                required: true
              from:
                type: string
                description: Enter Staff ID From All Student Tab
                required: true
              type:
                type: string
                description: Enter Flow of All Student TAB
                required: true
      responses:
        "200":
          description: OK


  /api/v1/department/{did}/student/form:
    get:
      tags:
        - Id Card Query
      summary: Get All Toggles For Department Form -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is Department ID
      responses:
        "200":
          description: OK

  /api/v1/department/{did}/form/setting/update:
    patch:
      tags:
        - Id Card Query
      summary: Update All Toggles For Department Form -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is Department ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              studentFormSetting:
                type: object
                required:  true
                description: here pass all student form setting boolean
                properties:
                  gate_score:
                    type: boolean
                    description: here pass value "true" or "false"
                  marks_and_degree_score:
                    type: boolean
                    description: here pass value "true" or "false"  
      responses:
        "200":
          description: OK

  /api/v1/hostel/{hid}/all/export/excel/array:
    get:
      tags:
        - Process Excel + Database Processing
      summary: All Exported Excel Downloadable File (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: hid
          required: true
          type: string
          description: This Admission ID
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
      responses:
        "200":
          description: OK

  /api/v1/hostel/{hid}/export/excel/{exid}/edit:
    patch:
      tags:
        - Process Excel + Database Processing
      summary: Edit One Exported Excel Downloadable File (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: exid
          required: true
          type: string
          description: This Export Excel ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              excel_file_name:
                type: string
                description: Enter Name Here
                required: true
      responses:
        "200":
          description: OK

  /api/v1/hostel/{hid}/export/excel/{exid}/destroy/query:
    delete:
      tags:
        - Process Excel + Database Processing
      summary: Delete One Exported Excel Downloadable File By Hostel Manager (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: hid
          required: true
          type: string
          description: This Admission ID
        - in: path
          name: exid
          required: true
          type: string
          description: This Export Excel ID
      responses:
        "200":
          description: OK

#GRNumber

  /api/v1/extra/edit/{sid}/gr/unique/query:
    patch:
      tags:
        - GR Number Query
      summary: Edit One Student GR Number Query (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This Student ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              query_content:
                type: string
                description: Enter Internal Query Message
                required: true
              query_gr:
                type: string
                description: Enter Internal Query GR Number
                required: true
      responses:
        "200":
          description: OK

  /api/v1/extra/status/{qid}/query:
    patch:
      tags:
        - GR Number Query
      summary: Approve || Reject One Student GR Number Status Query (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: qid
          required: true
          type: string
          description: This Internal Query ID
        - in: query
          name: status
          required: true
          type: string
          description: Enter Status ("Approved" || "Rejected")
      responses:
        "200":
          description: OK

  /api/v1/extra/all/{id}/query:
    get:
      tags:
        - GR Number Query
      summary: All Internal Query (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute Admin ID
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit Number
      responses:
        "200":
          description: OK

#Class New Batch Query

  /api/v1/class/{cid}/new/batch/query:
    post:
      tags:
        - Class Batch Query
      summary: New Batch Query (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Class ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              batchName:
                type: string
                description: Enter Batch Name
                required: true
      responses:
        "200":
          description: OK

  /api/v1/class/{bid}/new/student/query:
    post:
      tags:
        - Class Batch Query
      summary: New Student In Batch Query (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: bid
          required: true
          type: string
          description: This is Batch ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              student_arr:
                type: array
                description: Enter Array of Student Object Id's
                required: true
      responses:
        "200":
          description: OK

  /api/v1/class/{bid}/all/student/query:
    get:
      tags:
        - Class Batch Query
      summary: All Student In Batch Query (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: bid
          required: true
          type: string
          description: This is Batch ID
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page Number
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit Number
        - in: query
          name: search
          required: false
          type: string
          description: Enter Search Query
      responses:
        "200":
          description: OK

  /api/v1/class/{cid}/all/batch/query:
    get:
      tags:
        - Class Batch Query
      summary: All Batch In Class Query (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Class ID
      responses:
        "200":
          description: OK

  /api/v1/class/{bid}/destroy/query:
    delete:
      tags:
        - Class Batch Query
      summary: Delete Batch In Class Query (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: bid
          required: true
          type: string
          description: This is Batch ID
      responses:
        "200":
          description: OK

  /api/v1/admission/{sid}/student/{aid}/revert/back/select/query:
    post:
      tags:
        - Revert Back Query
      summary: From Selected To Application TAB Query (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student ID
        - in: path
          name: aid
          required: true
          type: string
          description: This is NewApplication ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              statusId:
                type: string
                description: Enter Status ID
                required: true
      responses:
        "200":
          description: OK

  /api/v1/admission/{sid}/student/{aid}/collect/revert/back/docs/query:
    post:
      tags:
        - Revert Back Query
      summary: From Collect Docs To Selected Query (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student ID
        - in: path
          name: aid
          required: true
          type: string
          description: This is NewApplication ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              statusId:
                type: string
                description: Enter Status ID
                required: true
      responses:
        "200":
          description: OK


#Demand Draft + Cheque

  /api/v1/admission/{aid}/one/receipts/{rid}/status/decheque/query:
    patch:
      tags:
        - Demand Draft + Cheque
      summary: Update One Receipts By Admission Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: Enter Admission Id
        - in: path
          name: rid
          required: true
          type: string
          description: Enter Receipt Id
        - in: query
          name: status
          required: true
          type: string
          description: Enter Status As Mention for Operation ("Approved") || ("Rejected") || ("Over_Rejection") || ("Rejection_Notify")
        - in: query
          name: reqId
          required: true
          type: string
          description: Enter Receipts Holding Document Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              reason:
                type: string
                description: Enter Reason if Receipt is going for Rejected
                required: false
      responses:
        "200":
          description: OK

  /api/v1/admission/{sid}/re/apply/receipts/{rid}/decheque/query:
    patch:
      tags:
        - Demand Draft + Cheque
      summary: Re-Apply Receipt From Student Application Status Tab Receipt Content is Updated not created (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: Enter Status Id
        - in: path
          name: rid
          required: true
          type: string
          description: Enter Receipt Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              fee_payment_mode:
                type: string
                description: Enter Fee Mode ("By Cash") || ("UPI Transfer") || ("Demand Draft") || ("Cheque") || ("RTGS/NEFT/IMPS")
                required: false
              fee_payment_amount:
                type: number
                description: Enter Amount
                required: false
              transaction_date:
                type: string
                description: Enter Date Like ("2023-02-02")
                required: false
              fee_bank_name:
                type: string
                description: Enter Bank Name e.g SBI
                required: false
              fee_bank_holder:
                type: string
                description: Enter Bank Holder Name e.g Mithkal
                required: false
              fee_utr_reference:
                type: string
                description: Enter Fee Unique Transaction Reference Number (UTR)
                required: false
      responses:
        "200":
          description: OK

  /api/v1/hostel/{hid}/one/receipts/{rid}/status/decheque/query:
    patch:
      tags:
        - Demand Draft + Cheque
      summary: Update One Receipts By Hostel Manager (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: hid
          required: true
          type: string
          description: Enter Hostel Id
        - in: path
          name: rid
          required: true
          type: string
          description: Enter Receipt Id
        - in: query
          name: status
          required: true
          type: string
          description: Enter Status As Mention for Operation ("Approved") || ("Rejected") || ("Over_Rejection") || ("Rejection_Notify")
        - in: query
          name: reqId
          required: true
          type: string
          description: Enter Receipts Holding Document Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              reason:
                type: string
                description: Enter Reason if Receipt is going for Rejected
                required: false
      responses:
        "200":
          description: OK

  /api/v1/hostel/{sid}/re/apply/receipts/{rid}/decheque/query:
    patch:
      tags:
        - Demand Draft + Cheque
      summary: Re-Apply Receipt From Student Application Status Tab Receipt Content is Updated not created (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: Enter Status Id
        - in: path
          name: rid
          required: true
          type: string
          description: Enter Receipt Id
        - in : body
          name: body
          schema:
            type: object
            properties:
              fee_payment_mode:
                type: string
                description: Enter Fee Mode ("By Cash") || ("UPI Transfer") || ("Demand Draft") || ("Cheque") || ("RTGS/NEFT/IMPS")
                required: false
              fee_payment_amount:
                type: number
                description: Enter Amount
                required: false
              transaction_date:
                type: string
                description: Enter Date Like ("2023-02-02")
                required: false
              fee_bank_name:
                type: string
                description: Enter Bank Name e.g SBI
                required: false
              fee_bank_holder:
                type: string
                description: Enter Bank Holder Name e.g Mithkal
                required: false
              fee_utr_reference:
                type: string
                description: Enter Fee Unique Transaction Reference Number (UTR)
                required: false
      responses:
        "200":
          description: OK



  /api/v2/extra/excel/to/json/{lmid}/biometric/staff/query:
    patch:
      tags:
        - Process Excel + Database Processing
      summary: Upload One Excel File To Directly LMS For Biometric Linking (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: lmid
          required: true
          type: string
          description: This LMS Module ID
        - in : body
          name: body
          schema:
            type: object
            properties:
              excel_file:
                type: string
                description: Enter Key here
                required: true
      responses:
        "200":
          description: OK
#LMS
  /api/v2/lms/biometric/linking/query:
    post:
      tags:
        - LMS Module
      summary: Link Staff ID To Biometric Machine ID (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              sid:
                type: string
                description: Enter Staff ID
                required: true
              mcid:
                type: string
                description: Enter Machine ID
                required: true
      responses:
        "200":
          description: OK


  /api/v2/lms/{lmid}/all/linked/staff/query:
    get:
      tags:
        - LMS Module
      summary: All Staff Biometric -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: lmid
          required: true
          type: string
          description: This LMS Module ID
        - in: query
          name: page
          required: true
          type: string
          description: Enter Page
        - in: query
          name: limit
          required: true
          type: string
          description: Enter Limit
      responses:
        "200":
          description: OK