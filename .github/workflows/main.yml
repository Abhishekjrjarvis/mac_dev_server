name: Build and Push Docker Image and Depoly

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment (optional, for building Node.js project)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' # Specify the Node.js version you're using

      # Step 3: Create 'Secret' folder and JSON file, and write secret content to the file
      - name: Create Secret folder and JSON file
        run: |
          mkdir Secret
          echo "${{ secrets.FIREBASE_JSON }}" > Secret/qviple-user-firebase-adminsdk-4qvna-8582f91ae3.json

      # Step 4: Install dependencies and build the Node.js project
      - name: Install dependencies
        run: npm install

      # Step 5: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 6: Build the Docker image
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/qviple-prod:latest .

      # Step 7: Push Docker image to Docker Hub
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/qviple-prod:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Step 1: Configure AWS credentials
      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'ap-south-1'

      # Step 2: Deploy to ECS using the AWS ECS GitHub Action
      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          service: qviple-service-prod      
          cluster: Prod-qviple              
          image: ${{ secrets.DOCKER_USERNAME }}/qviple-prod:latest
          wait-for-service-stability: false
